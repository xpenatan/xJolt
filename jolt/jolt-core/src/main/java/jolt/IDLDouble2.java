/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt;

import jolt.idl.helper.IDLDoubleArray;

public class IDLDouble2 extends IDLDoubleArray {

    static public final IDLDouble2 NULL = IDLDouble2.native_new();

    public IDLDouble2() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new IDLDouble2();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected IDLDouble2(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static IDLDouble2 native_new() {
        return new IDLDouble2((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
IDLDouble2* nativeObject = (IDLDouble2*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void set(double x, double y) {
        internal_native_set(native_address, x, y);
    }

    /*[-JNI;-NATIVE]
IDLDouble2* nativeObject = (IDLDouble2*)this_addr;
nativeObject->set((double)x, (double)y);
*/
    public static native void internal_native_set(long this_addr, double x, double y);

    public double getX() {
        return internal_native_getX(native_address);
    }

    /*[-JNI;-NATIVE]
IDLDouble2* nativeObject = (IDLDouble2*)this_addr;
return nativeObject->getX();
*/
    public static native double internal_native_getX(long this_addr);

    public double getY() {
        return internal_native_getY(native_address);
    }

    /*[-JNI;-NATIVE]
IDLDouble2* nativeObject = (IDLDouble2*)this_addr;
return nativeObject->getY();
*/
    public static native double internal_native_getY(long this_addr);
}
