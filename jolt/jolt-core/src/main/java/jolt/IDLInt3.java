/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt;

import jolt.idl.helper.IDLIntArray;

public class IDLInt3 extends IDLIntArray {

    static public final IDLInt3 NULL = IDLInt3.native_new();

    public IDLInt3() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new IDLInt3();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected IDLInt3(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static IDLInt3 native_new() {
        return new IDLInt3((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
IDLInt3* nativeObject = (IDLInt3*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void set(int x, int y, int z) {
        internal_native_set(native_address, x, y, z);
    }

    /*[-JNI;-NATIVE]
IDLInt3* nativeObject = (IDLInt3*)this_addr;
nativeObject->set((int)x, (int)y, (int)z);
*/
    public static native void internal_native_set(long this_addr, int x, int y, int z);

    public int getX() {
        return internal_native_getX(native_address);
    }

    /*[-JNI;-NATIVE]
IDLInt3* nativeObject = (IDLInt3*)this_addr;
return nativeObject->getX();
*/
    public static native int internal_native_getX(long this_addr);

    public int getY() {
        return internal_native_getY(native_address);
    }

    /*[-JNI;-NATIVE]
IDLInt3* nativeObject = (IDLInt3*)this_addr;
return nativeObject->getY();
*/
    public static native int internal_native_getY(long this_addr);

    public int getZ() {
        return internal_native_getZ(native_address);
    }

    /*[-JNI;-NATIVE]
IDLInt3* nativeObject = (IDLInt3*)this_addr;
return nativeObject->getZ();
*/
    public static native int internal_native_getZ(long this_addr);
}
