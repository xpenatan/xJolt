/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt;

import jolt.idl.IDLBase;
import jolt.physics.vehicle.WheeledVehicleController;

public class WheeledVehicleControllerCallbacksEm extends IDLBase {

    static private TireMaxImpulseCallbackResult TireMaxImpulseCallbackResult_TEMP_STATIC_GEN_0;

    /*[-JNI;-NATIVE]
class WheeledVehicleControllerCallbacksJS : public WheeledVehicleControllerCallbacksEm {
private:
	JNIEnv* env;
	jobject obj;
public:
	inline static jclass jClassID = 0;
	inline static jmethodID OnTireMaxImpulseCallbackIJFFFFFF_ID = 0;

void setupCallback(JNIEnv* env, jobject obj) {
	this->env = env;
	this->obj = env->NewGlobalRef(obj);
	if(WheeledVehicleControllerCallbacksJS::jClassID == 0) {
		WheeledVehicleControllerCallbacksJS::jClassID = (jclass)env->NewGlobalRef(env->GetObjectClass(obj));
		WheeledVehicleControllerCallbacksJS::OnTireMaxImpulseCallbackIJFFFFFF_ID = env->GetMethodID(jClassID, "internal_OnTireMaxImpulseCallback", "(IJFFFFFF)V");
	}
}
virtual void OnTireMaxImpulseCallback(unsigned int inWheelIndex, TireMaxImpulseCallbackResult* outResult, float inSuspensionImpulse, float inLongitudinalFriction, float inLateralFriction, float inLongitudinalSlip, float inLateralSlip, float inDeltaTime) {
   env->CallVoidMethod(obj, WheeledVehicleControllerCallbacksJS::OnTireMaxImpulseCallbackIJFFFFFF_ID, inWheelIndex, (jlong)outResult, inSuspensionImpulse, inLongitudinalFriction, inLateralFriction, inLongitudinalSlip, inLateralSlip, inDeltaTime);
}
};
*/
    @Deprecated()
    public WheeledVehicleControllerCallbacksEm(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
WheeledVehicleControllerCallbacksJS* nativeObject = (WheeledVehicleControllerCallbacksJS*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void SetWheeledVehicleController(WheeledVehicleController inController) {
        internal_native_SetWheeledVehicleController(native_address, (inController != null ? inController.native_address : 0));
    }

    /*[-JNI;-NATIVE]
WheeledVehicleControllerCallbacksEm* nativeObject = (WheeledVehicleControllerCallbacksEm*)this_addr;
nativeObject->SetWheeledVehicleController(*((WheeledVehicleController* )inController_addr));
*/
    public static native void internal_native_SetWheeledVehicleController(long this_addr, long inController_addr);

    public WheeledVehicleControllerCallbacksEm() {
        long addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        internal_native_setupCallback(native_address);
    }

    protected void OnTireMaxImpulseCallback(int inWheelIndex, TireMaxImpulseCallbackResult outResult, float inSuspensionImpulse, float inLongitudinalFriction, float inLateralFriction, float inLongitudinalSlip, float inLateralSlip, float inDeltaTime) {
    }

    private void internal_OnTireMaxImpulseCallback(int inWheelIndex, long outResult_addr, float inSuspensionImpulse, float inLongitudinalFriction, float inLateralFriction, float inLongitudinalSlip, float inLateralSlip, float inDeltaTime) {
        if (TireMaxImpulseCallbackResult_TEMP_STATIC_GEN_0 == null)
            TireMaxImpulseCallbackResult_TEMP_STATIC_GEN_0 = new TireMaxImpulseCallbackResult((byte) 1, (char) 1);
        TireMaxImpulseCallbackResult_TEMP_STATIC_GEN_0.internal_reset(outResult_addr, false);
        OnTireMaxImpulseCallback(inWheelIndex, TireMaxImpulseCallbackResult_TEMP_STATIC_GEN_0, inSuspensionImpulse, inLongitudinalFriction, inLateralFriction, inLongitudinalSlip, inLateralSlip, inDeltaTime);
    }

    /*[-JNI;-NATIVE]
return (jlong)new WheeledVehicleControllerCallbacksJS();
*/
    public static native long internal_native_create();

    /*[-JNI;-NATIVE]
WheeledVehicleControllerCallbacksJS* nativeObject = (WheeledVehicleControllerCallbacksJS*)this_addr;
nativeObject->setupCallback(env, object);
*/
    public native void internal_native_setupCallback(long this_addr);
}
