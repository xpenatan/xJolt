/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.core;

import jolt.idl.IDLBase;

public class Factory extends IDLBase {

    static private Factory Factory_TEMP_STATIC_GEN_0;

    static public final Factory T_01 = new Factory((byte) 1, (char) 1);

    static public final Factory T_02 = new Factory((byte) 1, (char) 1);

    static public final Factory T_03 = new Factory((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Factory(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
Factory* nativeObject = (Factory*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public static Factory get_sInstance() {
        long pointer = internal_native_get_sInstance();
        if (pointer == 0)
            return null;
        if (Factory_TEMP_STATIC_GEN_0 == null)
            Factory_TEMP_STATIC_GEN_0 = new Factory((byte) 1, (char) 1);
        Factory_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return Factory_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)Factory::sInstance;
*/
    public static native long internal_native_get_sInstance();

    public static void set_sInstance(Factory sInstance) {
        internal_native_set_sInstance((sInstance != null ? sInstance.native_address : 0));
    }

    /*[-JNI;-NATIVE]
Factory::sInstance = (Factory*)sInstance_addr;
*/
    public static native void internal_native_set_sInstance(long sInstance_addr);
}
