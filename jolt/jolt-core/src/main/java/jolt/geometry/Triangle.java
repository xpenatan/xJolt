/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.geometry;

import jolt.idl.IDLBase;
import jolt.math.Vec3;
import jolt.math.Float3;

public class Triangle extends IDLBase {

    private Float3 Float3_TEMP_GEN_0;

    static public final Triangle T_01 = new Triangle((byte) 1, (char) 1);

    static public final Triangle T_02 = new Triangle((byte) 1, (char) 1);

    static public final Triangle T_03 = new Triangle((byte) 1, (char) 1);

    public Triangle() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new Triangle();
*/
    public static native long internal_native_create();

    public Triangle(Vec3 inV1, Vec3 inV2, Vec3 inV3, int inMaterialIndex, int inUserData) {
        long addr = internal_native_create_Vec3_Vec3_Vec3_int_int((inV1 != null ? inV1.native_address : 0), (inV2 != null ? inV2.native_address : 0), (inV3 != null ? inV3.native_address : 0), inMaterialIndex, inUserData);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new Triangle(*((Vec3* )inV1_addr), *((Vec3* )inV2_addr), *((Vec3* )inV3_addr), inMaterialIndex, inUserData);
*/
    public static native long internal_native_create_Vec3_Vec3_Vec3_int_int(long inV1_addr, long inV2_addr, long inV3_addr, int inMaterialIndex, int inUserData);

    public Triangle(Vec3 inV1, Vec3 inV2, Vec3 inV3, int inMaterialIndex) {
        long addr = internal_native_create_Vec3_Vec3_Vec3_int((inV1 != null ? inV1.native_address : 0), (inV2 != null ? inV2.native_address : 0), (inV3 != null ? inV3.native_address : 0), inMaterialIndex);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new Triangle(*((Vec3* )inV1_addr), *((Vec3* )inV2_addr), *((Vec3* )inV3_addr), inMaterialIndex);
*/
    public static native long internal_native_create_Vec3_Vec3_Vec3_int(long inV1_addr, long inV2_addr, long inV3_addr, int inMaterialIndex);

    public Triangle(Vec3 inV1, Vec3 inV2, Vec3 inV3) {
        long addr = internal_native_create_Vec3_Vec3_Vec3((inV1 != null ? inV1.native_address : 0), (inV2 != null ? inV2.native_address : 0), (inV3 != null ? inV3.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new Triangle(*((Vec3* )inV1_addr), *((Vec3* )inV2_addr), *((Vec3* )inV3_addr));
*/
    public static native long internal_native_create_Vec3_Vec3_Vec3(long inV1_addr, long inV2_addr, long inV3_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Triangle(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
Triangle* nativeObject = (Triangle*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public Float3 get_mV(int index) {
        long pointer = internal_native_get_mV(native_address, index);
        if (pointer == 0)
            return null;
        if (Float3_TEMP_GEN_0 == null)
            Float3_TEMP_GEN_0 = new Float3((byte) 1, (char) 1);
        Float3_TEMP_GEN_0.internal_reset(pointer, false);
        return Float3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
Triangle* nativeObject = (Triangle*)this_addr;
return (jlong)&nativeObject->mV[index];
*/
    public static native long internal_native_get_mV(long this_addr, int index);

    public void set_mV(int index, Float3 mV) {
        internal_native_set_mV(native_address, index, (mV != null ? mV.native_address : 0));
    }

    /*[-JNI;-NATIVE]
Triangle* nativeObject = (Triangle*)this_addr;
nativeObject->mV[index] = *((Float3*)mV_addr);
*/
    public static native void internal_native_set_mV(long this_addr, int index, long mV_addr);

    public int get_mMaterialIndex() {
        return internal_native_get_mMaterialIndex(native_address);
    }

    /*[-JNI;-NATIVE]
Triangle* nativeObject = (Triangle*)this_addr;
return nativeObject->mMaterialIndex;
*/
    public static native int internal_native_get_mMaterialIndex(long this_addr);

    public void set_mMaterialIndex(int mMaterialIndex) {
        internal_native_set_mMaterialIndex(native_address, mMaterialIndex);
    }

    /*[-JNI;-NATIVE]
Triangle* nativeObject = (Triangle*)this_addr;
nativeObject->mMaterialIndex = mMaterialIndex;
*/
    public static native void internal_native_set_mMaterialIndex(long this_addr, int mMaterialIndex);

    public int get_mUserData() {
        return internal_native_get_mUserData(native_address);
    }

    /*[-JNI;-NATIVE]
Triangle* nativeObject = (Triangle*)this_addr;
return nativeObject->mUserData;
*/
    public static native int internal_native_get_mUserData(long this_addr);

    public void set_mUserData(int mUserData) {
        internal_native_set_mUserData(native_address, mUserData);
    }

    /*[-JNI;-NATIVE]
Triangle* nativeObject = (Triangle*)this_addr;
nativeObject->mUserData = mUserData;
*/
    public static native void internal_native_set_mUserData(long this_addr, int mUserData);
}
