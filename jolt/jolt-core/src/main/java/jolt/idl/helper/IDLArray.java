/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package jolt.idl.helper;

import com.github.xpenatan.jParser.idl.IDLBase;

public class IDLArray extends IDLBase {

    private IDLBase IDLBase_TEMP_GEN_0;

    public static final IDLArray NULL = native_new();

    public static IDLArray native_new() {
        return new IDLArray((byte) 1, (char) 1);
    }

    protected IDLArray() {
    }

    protected IDLArray(byte b, char c) {
    }

    @Override
    protected void onNativeAddressChanged() {
        IDLBase voidData = getVoidData();
        native_void_address = voidData.native_void_address;
    }

    public void resize(int size) {
        internal_native_resize(native_address, size);
        IDLBase voidData = getVoidData();
        native_void_address = voidData.native_void_address;
    }

    /*
      [-JNI;-NATIVE]
            IDL::IDLArray* nativeObject = (IDL::IDLArray*)this_addr;
            nativeObject->resize(size);
    */
    public static native void internal_native_resize(long this_addr, int size);

    public void clear() {
        internal_native_clear(native_address);
    }

    /*
      [-JNI;-NATIVE]
      IDL::IDLArray* nativeObject = (IDL::IDLArray*)this_addr;
      nativeObject->clear();
    */
    public static native void internal_native_clear(long this_addr);

    public int getSize() {
        return internal_native_getSize(native_address);
    }

    /*
      [-JNI;-NATIVE]
      IDL::IDLArray* nativeObject = (IDL::IDLArray*)this_addr;
      return nativeObject->getSize();
    */
    public static native int internal_native_getSize(long this_addr);

    public IDLBase getVoidData() {
        long pointer = internal_native_getVoidData(native_address);
        if (pointer == 0)
            return IDLBase.NULL;
        if (IDLBase_TEMP_GEN_0 == null)
            IDLBase_TEMP_GEN_0 = IDLBase.native_new();
        IDLBase_TEMP_GEN_0.internal_reset(pointer, false);
        return IDLBase_TEMP_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      IDL::IDLArray* nativeObject = (IDL::IDLArray*)this_addr;
      return (jlong)nativeObject->getVoidData();
    */
    public static native long internal_native_getVoidData(long this_addr);
}
