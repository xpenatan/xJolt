/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package jolt.idl.helper;

public class IDLFloatArray extends IDLArray {

    public static final IDLFloatArray NULL = native_new();

    /**
     * @return An empty instance without a native address
     */
    public static IDLFloatArray native_new() {
        return new IDLFloatArray((byte) 1, (char) 1);
    }

    protected IDLFloatArray() {
        super((byte) 1, (char) 1);
    }

    protected IDLFloatArray(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public IDLFloatArray(int size) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_int(size);
        internal_reset(addr, true);
    }

    public void copy(float[] array) {
        int length = array.length;
        resize(length);
        for (int i = 0; i < length; i++) {
            float value = array[i];
            setValue(i, value);
        }
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)new IDLFloatArray((int)size);
    */
    public static native long internal_native_create_int(int size);

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-JNI;-NATIVE]
      IDLFloatArray* nativeObject = (IDLFloatArray*)this_addr;
      delete nativeObject;
    */
    public static native void internal_native_deleteNative(long this_addr);

    public float getValue(int index) {
        return internal_native_getValue(native_address, index);
    }

    /*
      [-JNI;-NATIVE]
      IDLFloatArray* nativeObject = (IDLFloatArray*)this_addr;
      return nativeObject->getValue((int)index);
    */
    public static native float internal_native_getValue(long this_addr, int index);

    public void setValue(int index, float value) {
        internal_native_setValue(native_address, index, value);
    }

    /*
      [-JNI;-NATIVE]
      IDLFloatArray* nativeObject = (IDLFloatArray*)this_addr;
      nativeObject->setValue((int)index, (float)value);
    */
    public static native void internal_native_setValue(long this_addr, int index, float value);

    public void copy(IDLFloatArray src, int srcOffset, int destOffset, int length) {
        internal_native_copy(native_address, src.native_address, srcOffset, destOffset, length);
    }

    /*
      [-JNI;-NATIVE]
      IDLFloatArray* nativeObject = (IDLFloatArray*)this_addr;
      nativeObject->copy(*((IDLFloatArray* )src_addr), (int)srcOffset, (int)destOffset, (int)length);
    */
    public static native void internal_native_copy(long this_addr, long src_addr, int srcOffset, int destOffset, int length);
}
