/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.math;

import jolt.idl.IDLBase;

public class Vector2 extends IDLBase {

    private Vector2 Vector2_TEMP_GEN_0;

    static public final Vector2 T_01 = new Vector2((byte) 1, (char) 1);

    static public final Vector2 T_02 = new Vector2((byte) 1, (char) 1);

    static public final Vector2 T_03 = new Vector2((byte) 1, (char) 1);

    public Vector2() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new Vector2();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Vector2(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
Vector2* nativeObject = (Vector2*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void SetZero() {
        internal_native_SetZero(native_address);
    }

    /*[-JNI;-NATIVE]
Vector2* nativeObject = (Vector2*)this_addr;
nativeObject->SetZero();
*/
    public static native void internal_native_SetZero(long this_addr);

    public void IsZero() {
        internal_native_IsZero(native_address);
    }

    /*[-JNI;-NATIVE]
Vector2* nativeObject = (Vector2*)this_addr;
nativeObject->IsZero();
*/
    public static native void internal_native_IsZero(long this_addr);

    public void IsClose(Vector2 inV, float inMaxDistSq) {
        internal_native_IsClose(native_address, (inV != null ? inV.native_address : 0), inMaxDistSq);
    }

    /*[-JNI;-NATIVE]
Vector2* nativeObject = (Vector2*)this_addr;
nativeObject->IsClose(*((Vector2* )inV_addr), (float)inMaxDistSq);
*/
    public static native void internal_native_IsClose(long this_addr, long inV_addr, float inMaxDistSq);

    public void IsClose(Vector2 inV) {
        internal_native_IsClose(native_address, (inV != null ? inV.native_address : 0));
    }

    /*[-JNI;-NATIVE]
Vector2* nativeObject = (Vector2*)this_addr;
nativeObject->IsClose(*((Vector2* )inV_addr));
*/
    public static native void internal_native_IsClose(long this_addr, long inV_addr);

    public void IsNormalized(float inTolerance) {
        internal_native_IsNormalized(native_address, inTolerance);
    }

    /*[-JNI;-NATIVE]
Vector2* nativeObject = (Vector2*)this_addr;
nativeObject->IsNormalized((float)inTolerance);
*/
    public static native void internal_native_IsNormalized(long this_addr, float inTolerance);

    public void IsNormalized() {
        internal_native_IsNormalized(native_address);
    }

    /*[-JNI;-NATIVE]
Vector2* nativeObject = (Vector2*)this_addr;
nativeObject->IsNormalized();
*/
    public static native void internal_native_IsNormalized(long this_addr);

    public Vector2 Normalized() {
        long pointer = internal_native_Normalized(native_address);
        if (pointer == 0)
            return null;
        if (Vector2_TEMP_GEN_0 == null)
            Vector2_TEMP_GEN_0 = new Vector2((byte) 1, (char) 1);
        Vector2_TEMP_GEN_0.internal_reset(pointer, false);
        return Vector2_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
Vector2* nativeObject = (Vector2*)this_addr;
static Vector2 copy_addr;
copy_addr = nativeObject->Normalized();
return (jlong)&copy_addr;*/
    public static native long internal_native_Normalized(long this_addr);

    public float Dot(Vector2 inRHS) {
        return internal_native_Dot(native_address, (inRHS != null ? inRHS.native_address : 0));
    }

    /*[-JNI;-NATIVE]
Vector2* nativeObject = (Vector2*)this_addr;
return nativeObject->Dot(*((Vector2* )inRHS_addr));
*/
    public static native float internal_native_Dot(long this_addr, long inRHS_addr);
}
