/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics;

import jolt.idl.IDLBase;
import jolt.physics.collision.broadphase.BroadPhaseLayerInterface;
import jolt.physics.collision.broadphase.ObjectVsBroadPhaseLayerFilter;
import jolt.physics.collision.ObjectLayerPairFilter;
import jolt.core.TempAllocator;
import jolt.core.JobSystem;
import jolt.math.Vec3;
import jolt.enums.EBodyType;
import jolt.physics.body.BodyIDVector;
import jolt.geometry.AABox;
import jolt.physics.constraints.Constraint;
import jolt.physics.collision.ContactListener;
import jolt.physics.softbody.SoftBodyContactListener;
import jolt.physics.body.BodyInterface;
import jolt.physics.body.BodyLockInterfaceNoLock;
import jolt.physics.body.BodyLockInterfaceLocking;
import jolt.physics.collision.broadphase.BroadPhaseQuery;
import jolt.physics.collision.NarrowPhaseQuery;
import jolt.enums.EStateRecorderState;
import jolt.physics.vehicle.VehicleConstraint;
import jolt.physics.body.BodyActivationListener;
import jolt.physics.body.BodyID;
import jolt.physics.collision.SimShapeFilter;

public class PhysicsSystem extends IDLBase {

    private Vec3 Vec3_TEMP_GEN_0;

    private PhysicsSettings PhysicsSettings_TEMP_GEN_0;

    private AABox AABox_TEMP_GEN_0;

    private ContactListener ContactListener_TEMP_GEN_0;

    private SoftBodyContactListener SoftBodyContactListener_TEMP_GEN_0;

    private BodyInterface BodyInterface_TEMP_GEN_0;

    private BodyInterface BodyInterface_TEMP_GEN_1;

    private BodyLockInterfaceNoLock BodyLockInterfaceNoLock_TEMP_GEN_0;

    private BodyLockInterfaceLocking BodyLockInterfaceLocking_TEMP_GEN_0;

    private BroadPhaseQuery BroadPhaseQuery_TEMP_GEN_0;

    private NarrowPhaseQuery NarrowPhaseQuery_TEMP_GEN_0;

    private NarrowPhaseQuery NarrowPhaseQuery_TEMP_GEN_1;

    private BodyActivationListener BodyActivationListener_TEMP_GEN_0;

    private SimShapeFilter SimShapeFilter_TEMP_GEN_0;

    static public final PhysicsSystem T_01 = new PhysicsSystem((byte) 1, (char) 1);

    static public final PhysicsSystem T_02 = new PhysicsSystem((byte) 1, (char) 1);

    static public final PhysicsSystem T_03 = new PhysicsSystem((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public PhysicsSystem(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void Init(int inMaxBodies, int inNumBodyMutexes, int inMaxBodyPairs, int inMaxContactConstraints, BroadPhaseLayerInterface inBroadPhaseLayerInterface, ObjectVsBroadPhaseLayerFilter inObjectVsBroadPhaseLayerFilter, ObjectLayerPairFilter inObjectLayerPairFilter) {
        internal_native_Init(native_address, inMaxBodies, inNumBodyMutexes, inMaxBodyPairs, inMaxContactConstraints, (inBroadPhaseLayerInterface != null ? inBroadPhaseLayerInterface.native_address : 0), (inObjectVsBroadPhaseLayerFilter != null ? inObjectVsBroadPhaseLayerFilter.native_address : 0), (inObjectLayerPairFilter != null ? inObjectLayerPairFilter.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->Init((int)inMaxBodies, (int)inNumBodyMutexes, (int)inMaxBodyPairs, (int)inMaxContactConstraints, *((BroadPhaseLayerInterface* )inBroadPhaseLayerInterface_addr), *((ObjectVsBroadPhaseLayerFilter* )inObjectVsBroadPhaseLayerFilter_addr), *((ObjectLayerPairFilter* )inObjectLayerPairFilter_addr));
*/
    public static native void internal_native_Init(long this_addr, int inMaxBodies, int inNumBodyMutexes, int inMaxBodyPairs, int inMaxContactConstraints, long inBroadPhaseLayerInterface_addr, long inObjectVsBroadPhaseLayerFilter_addr, long inObjectLayerPairFilter_addr);

    public void Update(float inDeltaTime, int inCollisionSteps, TempAllocator inTempAllocator, JobSystem inJobSystem) {
        internal_native_Update(native_address, inDeltaTime, inCollisionSteps, (inTempAllocator != null ? inTempAllocator.native_address : 0), (inJobSystem != null ? inJobSystem.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->Update((float)inDeltaTime, (int)inCollisionSteps, (TempAllocator* )inTempAllocator_addr, (JobSystem* )inJobSystem_addr);
*/
    public static native void internal_native_Update(long this_addr, float inDeltaTime, int inCollisionSteps, long inTempAllocator_addr, long inJobSystem_addr);

    public void SetGravity(Vec3 inGravity) {
        internal_native_SetGravity(native_address, (inGravity != null ? inGravity.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->SetGravity(*((Vec3* )inGravity_addr));
*/
    public static native void internal_native_SetGravity(long this_addr, long inGravity_addr);

    public Vec3 GetGravity() {
        long pointer = internal_native_GetGravity(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
static Vec3 copy_addr;
copy_addr = nativeObject->GetGravity();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetGravity(long this_addr);

    public PhysicsSettings GetPhysicsSettings() {
        long pointer = internal_native_GetPhysicsSettings(native_address);
        if (pointer == 0)
            return null;
        if (PhysicsSettings_TEMP_GEN_0 == null)
            PhysicsSettings_TEMP_GEN_0 = new PhysicsSettings((byte) 1, (char) 1);
        PhysicsSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return PhysicsSettings_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return (jlong)&nativeObject->GetPhysicsSettings();
*/
    public static native long internal_native_GetPhysicsSettings(long this_addr);

    public void SetPhysicsSettings(PhysicsSettings inPhysicsSettings) {
        internal_native_SetPhysicsSettings(native_address, (inPhysicsSettings != null ? inPhysicsSettings.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->SetPhysicsSettings(*((PhysicsSettings* )inPhysicsSettings_addr));
*/
    public static native void internal_native_SetPhysicsSettings(long this_addr, long inPhysicsSettings_addr);

    public int GetNumBodies() {
        return internal_native_GetNumBodies(native_address);
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return nativeObject->GetNumBodies();
*/
    public static native int internal_native_GetNumBodies(long this_addr);

    public int GetNumActiveBodies(EBodyType inBodyType) {
        return internal_native_GetNumActiveBodies(native_address, (inBodyType != null ? inBodyType.getValue() : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return nativeObject->GetNumActiveBodies((::EBodyType)inBodyType);
*/
    public static native int internal_native_GetNumActiveBodies(long this_addr, long inBodyType);

    public int GetMaxBodies() {
        return internal_native_GetMaxBodies(native_address);
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return nativeObject->GetMaxBodies();
*/
    public static native int internal_native_GetMaxBodies(long this_addr);

    public void GetBodies(BodyIDVector outBodies) {
        internal_native_GetBodies(native_address, (outBodies != null ? outBodies.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->GetBodies(*((BodyIDVector* )outBodies_addr));
*/
    public static native void internal_native_GetBodies(long this_addr, long outBodies_addr);

    public void GetActiveBodies(EBodyType inBodyType, BodyIDVector outBodies) {
        internal_native_GetActiveBodies(native_address, (inBodyType != null ? inBodyType.getValue() : 0), (outBodies != null ? outBodies.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->GetActiveBodies((::EBodyType)inBodyType, *((BodyIDVector* )outBodies_addr));
*/
    public static native void internal_native_GetActiveBodies(long this_addr, long inBodyType, long outBodies_addr);

    public AABox GetBounds() {
        long pointer = internal_native_GetBounds(native_address);
        if (pointer == 0)
            return null;
        if (AABox_TEMP_GEN_0 == null)
            AABox_TEMP_GEN_0 = new AABox((byte) 1, (char) 1);
        AABox_TEMP_GEN_0.internal_reset(pointer, false);
        return AABox_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
static AABox copy_addr;
copy_addr = nativeObject->GetBounds();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetBounds(long this_addr);

    public void AddConstraint(Constraint inConstraint) {
        internal_native_AddConstraint(native_address, (inConstraint != null ? inConstraint.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->AddConstraint((Constraint* )inConstraint_addr);
*/
    public static native void internal_native_AddConstraint(long this_addr, long inConstraint_addr);

    public void RemoveConstraint(Constraint inConstraint) {
        internal_native_RemoveConstraint(native_address, (inConstraint != null ? inConstraint.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->RemoveConstraint((Constraint* )inConstraint_addr);
*/
    public static native void internal_native_RemoveConstraint(long this_addr, long inConstraint_addr);

    public void SetContactListener(ContactListener inListener) {
        internal_native_SetContactListener(native_address, (inListener != null ? inListener.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->SetContactListener((ContactListener* )inListener_addr);
*/
    public static native void internal_native_SetContactListener(long this_addr, long inListener_addr);

    public ContactListener GetContactListener() {
        long pointer = internal_native_GetContactListener(native_address);
        if (pointer == 0)
            return null;
        if (ContactListener_TEMP_GEN_0 == null)
            ContactListener_TEMP_GEN_0 = new ContactListener((byte) 1, (char) 1);
        ContactListener_TEMP_GEN_0.internal_reset(pointer, false);
        return ContactListener_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
ContactListener* obj = nativeObject->GetContactListener();
return (jlong)obj;
*/
    public static native long internal_native_GetContactListener(long this_addr);

    public void SetSoftBodyContactListener(SoftBodyContactListener inListener) {
        internal_native_SetSoftBodyContactListener(native_address, (inListener != null ? inListener.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->SetSoftBodyContactListener((SoftBodyContactListener* )inListener_addr);
*/
    public static native void internal_native_SetSoftBodyContactListener(long this_addr, long inListener_addr);

    public SoftBodyContactListener GetSoftBodyContactListener() {
        long pointer = internal_native_GetSoftBodyContactListener(native_address);
        if (pointer == 0)
            return null;
        if (SoftBodyContactListener_TEMP_GEN_0 == null)
            SoftBodyContactListener_TEMP_GEN_0 = new SoftBodyContactListener((byte) 1, (char) 1);
        SoftBodyContactListener_TEMP_GEN_0.internal_reset(pointer, false);
        return SoftBodyContactListener_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
SoftBodyContactListener* obj = nativeObject->GetSoftBodyContactListener();
return (jlong)obj;
*/
    public static native long internal_native_GetSoftBodyContactListener(long this_addr);

    public void OptimizeBroadPhase() {
        internal_native_OptimizeBroadPhase(native_address);
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->OptimizeBroadPhase();
*/
    public static native void internal_native_OptimizeBroadPhase(long this_addr);

    public BodyInterface GetBodyInterface() {
        long pointer = internal_native_GetBodyInterface(native_address);
        if (pointer == 0)
            return null;
        if (BodyInterface_TEMP_GEN_0 == null)
            BodyInterface_TEMP_GEN_0 = new BodyInterface((byte) 1, (char) 1);
        BodyInterface_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyInterface_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return (jlong)&nativeObject->GetBodyInterface();
*/
    public static native long internal_native_GetBodyInterface(long this_addr);

    public BodyInterface GetBodyInterfaceNoLock() {
        long pointer = internal_native_GetBodyInterfaceNoLock(native_address);
        if (pointer == 0)
            return null;
        if (BodyInterface_TEMP_GEN_1 == null)
            BodyInterface_TEMP_GEN_1 = new BodyInterface((byte) 1, (char) 1);
        BodyInterface_TEMP_GEN_1.internal_reset(pointer, false);
        return BodyInterface_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return (jlong)&nativeObject->GetBodyInterfaceNoLock();
*/
    public static native long internal_native_GetBodyInterfaceNoLock(long this_addr);

    public BodyLockInterfaceNoLock GetBodyLockInterfaceNoLock() {
        long pointer = internal_native_GetBodyLockInterfaceNoLock(native_address);
        if (pointer == 0)
            return null;
        if (BodyLockInterfaceNoLock_TEMP_GEN_0 == null)
            BodyLockInterfaceNoLock_TEMP_GEN_0 = new BodyLockInterfaceNoLock((byte) 1, (char) 1);
        BodyLockInterfaceNoLock_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyLockInterfaceNoLock_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return (jlong)&nativeObject->GetBodyLockInterfaceNoLock();
*/
    public static native long internal_native_GetBodyLockInterfaceNoLock(long this_addr);

    public BodyLockInterfaceLocking GetBodyLockInterface() {
        long pointer = internal_native_GetBodyLockInterface(native_address);
        if (pointer == 0)
            return null;
        if (BodyLockInterfaceLocking_TEMP_GEN_0 == null)
            BodyLockInterfaceLocking_TEMP_GEN_0 = new BodyLockInterfaceLocking((byte) 1, (char) 1);
        BodyLockInterfaceLocking_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyLockInterfaceLocking_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return (jlong)&nativeObject->GetBodyLockInterface();
*/
    public static native long internal_native_GetBodyLockInterface(long this_addr);

    public BroadPhaseQuery GetBroadPhaseQuery() {
        long pointer = internal_native_GetBroadPhaseQuery(native_address);
        if (pointer == 0)
            return null;
        if (BroadPhaseQuery_TEMP_GEN_0 == null)
            BroadPhaseQuery_TEMP_GEN_0 = new BroadPhaseQuery((byte) 1, (char) 1);
        BroadPhaseQuery_TEMP_GEN_0.internal_reset(pointer, false);
        return BroadPhaseQuery_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return (jlong)&nativeObject->GetBroadPhaseQuery();
*/
    public static native long internal_native_GetBroadPhaseQuery(long this_addr);

    public NarrowPhaseQuery GetNarrowPhaseQuery() {
        long pointer = internal_native_GetNarrowPhaseQuery(native_address);
        if (pointer == 0)
            return null;
        if (NarrowPhaseQuery_TEMP_GEN_0 == null)
            NarrowPhaseQuery_TEMP_GEN_0 = new NarrowPhaseQuery((byte) 1, (char) 1);
        NarrowPhaseQuery_TEMP_GEN_0.internal_reset(pointer, false);
        return NarrowPhaseQuery_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return (jlong)&nativeObject->GetNarrowPhaseQuery();
*/
    public static native long internal_native_GetNarrowPhaseQuery(long this_addr);

    public NarrowPhaseQuery GetNarrowPhaseQueryNoLock() {
        long pointer = internal_native_GetNarrowPhaseQueryNoLock(native_address);
        if (pointer == 0)
            return null;
        if (NarrowPhaseQuery_TEMP_GEN_1 == null)
            NarrowPhaseQuery_TEMP_GEN_1 = new NarrowPhaseQuery((byte) 1, (char) 1);
        NarrowPhaseQuery_TEMP_GEN_1.internal_reset(pointer, false);
        return NarrowPhaseQuery_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return (jlong)&nativeObject->GetNarrowPhaseQueryNoLock();
*/
    public static native long internal_native_GetNarrowPhaseQueryNoLock(long this_addr);

    public void SaveState(StateRecorder inStream, EStateRecorderState inState, StateRecorderFilter inFilter) {
        internal_native_SaveState(native_address, (inStream != null ? inStream.native_address : 0), (inState != null ? inState.getValue() : 0), (inFilter != null ? inFilter.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->SaveState(*((StateRecorder* )inStream_addr), (::EStateRecorderState)inState, (StateRecorderFilter* )inFilter_addr);
*/
    public static native void internal_native_SaveState(long this_addr, long inStream_addr, long inState, long inFilter_addr);

    public void SaveState(StateRecorder inStream, EStateRecorderState inState) {
        internal_native_SaveState(native_address, (inStream != null ? inStream.native_address : 0), (inState != null ? inState.getValue() : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->SaveState(*((StateRecorder* )inStream_addr), (::EStateRecorderState)inState);
*/
    public static native void internal_native_SaveState(long this_addr, long inStream_addr, long inState);

    public void SaveState(StateRecorder inStream) {
        internal_native_SaveState(native_address, (inStream != null ? inStream.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->SaveState(*((StateRecorder* )inStream_addr));
*/
    public static native void internal_native_SaveState(long this_addr, long inStream_addr);

    public boolean RestoreState(StateRecorder inStream, StateRecorderFilter inFilter) {
        return internal_native_RestoreState(native_address, (inStream != null ? inStream.native_address : 0), (inFilter != null ? inFilter.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return nativeObject->RestoreState(*((StateRecorder* )inStream_addr), (StateRecorderFilter* )inFilter_addr);
*/
    public static native boolean internal_native_RestoreState(long this_addr, long inStream_addr, long inFilter_addr);

    public boolean RestoreState(StateRecorder inStream) {
        return internal_native_RestoreState(native_address, (inStream != null ? inStream.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return nativeObject->RestoreState(*((StateRecorder* )inStream_addr));
*/
    public static native boolean internal_native_RestoreState(long this_addr, long inStream_addr);

    public void AddStepListener(PhysicsStepListener inListener) {
        internal_native_AddStepListener_0(native_address, (inListener != null ? inListener.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->AddStepListener((PhysicsStepListener* )inListener_addr);
*/
    public static native void internal_native_AddStepListener_0(long this_addr, long inListener_addr);

    public void AddStepListener(VehicleConstraint inListener) {
        internal_native_AddStepListener_1(native_address, (inListener != null ? inListener.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->AddStepListener((VehicleConstraint* )inListener_addr);
*/
    public static native void internal_native_AddStepListener_1(long this_addr, long inListener_addr);

    public void RemoveStepListener(PhysicsStepListener inListener) {
        internal_native_RemoveStepListener_0(native_address, (inListener != null ? inListener.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->RemoveStepListener((PhysicsStepListener* )inListener_addr);
*/
    public static native void internal_native_RemoveStepListener_0(long this_addr, long inListener_addr);

    public void RemoveStepListener(VehicleConstraint inListener) {
        internal_native_RemoveStepListener_1(native_address, (inListener != null ? inListener.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->RemoveStepListener((VehicleConstraint* )inListener_addr);
*/
    public static native void internal_native_RemoveStepListener_1(long this_addr, long inListener_addr);

    public void SetBodyActivationListener(BodyActivationListener inListener) {
        internal_native_SetBodyActivationListener(native_address, (inListener != null ? inListener.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->SetBodyActivationListener((BodyActivationListener* )inListener_addr);
*/
    public static native void internal_native_SetBodyActivationListener(long this_addr, long inListener_addr);

    public BodyActivationListener GetBodyActivationListener() {
        long pointer = internal_native_GetBodyActivationListener(native_address);
        if (pointer == 0)
            return null;
        if (BodyActivationListener_TEMP_GEN_0 == null)
            BodyActivationListener_TEMP_GEN_0 = new BodyActivationListener((byte) 1, (char) 1);
        BodyActivationListener_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyActivationListener_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
const BodyActivationListener* obj = nativeObject->GetBodyActivationListener();
return (jlong)obj;
*/
    public static native long internal_native_GetBodyActivationListener(long this_addr);

    public boolean WereBodiesInContact(BodyID inBodyID1, BodyID inBodyID2) {
        return internal_native_WereBodiesInContact(native_address, (inBodyID1 != null ? inBodyID1.native_address : 0), (inBodyID2 != null ? inBodyID2.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
return nativeObject->WereBodiesInContact(*((BodyID* )inBodyID1_addr), *((BodyID* )inBodyID2_addr));
*/
    public static native boolean internal_native_WereBodiesInContact(long this_addr, long inBodyID1_addr, long inBodyID2_addr);

    public void SetSimShapeFilter(SimShapeFilter inShapeFilter) {
        internal_native_SetSimShapeFilter(native_address, (inShapeFilter != null ? inShapeFilter.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
nativeObject->SetSimShapeFilter((SimShapeFilter* )inShapeFilter_addr);
*/
    public static native void internal_native_SetSimShapeFilter(long this_addr, long inShapeFilter_addr);

    public SimShapeFilter GetSimShapeFilter() {
        long pointer = internal_native_GetSimShapeFilter(native_address);
        if (pointer == 0)
            return null;
        if (SimShapeFilter_TEMP_GEN_0 == null)
            SimShapeFilter_TEMP_GEN_0 = new SimShapeFilter((byte) 1, (char) 1);
        SimShapeFilter_TEMP_GEN_0.internal_reset(pointer, false);
        return SimShapeFilter_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PhysicsSystem* nativeObject = (PhysicsSystem*)this_addr;
const SimShapeFilter* obj = nativeObject->GetSimShapeFilter();
return (jlong)obj;
*/
    public static native long internal_native_GetSimShapeFilter(long this_addr);
}
