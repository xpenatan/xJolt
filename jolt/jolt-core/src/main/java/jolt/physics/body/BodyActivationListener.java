/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.body;

import jolt.idl.IDLBase;

public class BodyActivationListener extends IDLBase {

    static private BodyID BodyID_TEMP_STATIC_GEN_0;

    static private BodyID BodyID_TEMP_STATIC_GEN_1;

    /*[-JNI;-NATIVE]
class BodyActivationListenerJS : public BodyActivationListener {
private:
	JNIEnv* env;
	jobject obj;
public:
	inline static jclass jClassID = 0;
	inline static jmethodID OnBodyActivatedJJ_ID = 0;
	inline static jmethodID OnBodyDeactivatedJJ_ID = 0;

void setupCallback(JNIEnv* env, jobject obj) {
	this->env = env;
	this->obj = env->NewGlobalRef(obj);
	if(BodyActivationListenerJS::jClassID == 0) {
		BodyActivationListenerJS::jClassID = (jclass)env->NewGlobalRef(env->GetObjectClass(obj));
		BodyActivationListenerJS::OnBodyActivatedJJ_ID = env->GetMethodID(jClassID, "internal_OnBodyActivated", "(JJ)V");
		BodyActivationListenerJS::OnBodyDeactivatedJJ_ID = env->GetMethodID(jClassID, "internal_OnBodyDeactivated", "(JJ)V");
	}
}
virtual void OnBodyActivated(const BodyID& inBodyID, uint64 inBodyUserData) {
   env->CallVoidMethod(obj, BodyActivationListenerJS::OnBodyActivatedJJ_ID, (jlong)&inBodyID, inBodyUserData);
}
virtual void OnBodyDeactivated(const BodyID& inBodyID, uint64 inBodyUserData) {
   env->CallVoidMethod(obj, BodyActivationListenerJS::OnBodyDeactivatedJJ_ID, (jlong)&inBodyID, inBodyUserData);
}
};
*/
    @Deprecated()
    public BodyActivationListener(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
BodyActivationListenerJS* nativeObject = (BodyActivationListenerJS*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public BodyActivationListener() {
        long addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        internal_native_setupCallback(native_address);
    }

    protected void OnBodyActivated(BodyID inBodyID, long inBodyUserData) {
    }

    private void internal_OnBodyActivated(long inBodyID_addr, long inBodyUserData) {
        if (BodyID_TEMP_STATIC_GEN_0 == null)
            BodyID_TEMP_STATIC_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_STATIC_GEN_0.internal_reset(inBodyID_addr, false);
        OnBodyActivated(BodyID_TEMP_STATIC_GEN_0, inBodyUserData);
    }

    protected void OnBodyDeactivated(BodyID inBodyID, long inBodyUserData) {
    }

    private void internal_OnBodyDeactivated(long inBodyID_addr, long inBodyUserData) {
        if (BodyID_TEMP_STATIC_GEN_1 == null)
            BodyID_TEMP_STATIC_GEN_1 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_STATIC_GEN_1.internal_reset(inBodyID_addr, false);
        OnBodyDeactivated(BodyID_TEMP_STATIC_GEN_1, inBodyUserData);
    }

    /*[-JNI;-NATIVE]
return (jlong)new BodyActivationListenerJS();
*/
    public static native long internal_native_create();

    /*[-JNI;-NATIVE]
BodyActivationListenerJS* nativeObject = (BodyActivationListenerJS*)this_addr;
nativeObject->setupCallback(env, object);
*/
    public native void internal_native_setupCallback(long this_addr);
}
