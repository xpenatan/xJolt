/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.body;

import jolt.idl.IDLBase;
import jolt.enums.EShapeColor;
import jolt.enums.ESoftBodyConstraintColor;

public class BodyManagerDrawSettings extends IDLBase {

    static public final BodyManagerDrawSettings T_01 = new BodyManagerDrawSettings((byte) 1, (char) 1);

    static public final BodyManagerDrawSettings T_02 = new BodyManagerDrawSettings((byte) 1, (char) 1);

    static public final BodyManagerDrawSettings T_03 = new BodyManagerDrawSettings((byte) 1, (char) 1);

    public BodyManagerDrawSettings() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new BodyManagerDrawSettings();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public BodyManagerDrawSettings(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public boolean get_mDrawGetSupportFunction() {
        return internal_native_get_mDrawGetSupportFunction(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawGetSupportFunction;
*/
    public static native boolean internal_native_get_mDrawGetSupportFunction(long this_addr);

    public void set_mDrawGetSupportFunction(boolean mDrawGetSupportFunction) {
        internal_native_set_mDrawGetSupportFunction(native_address, mDrawGetSupportFunction);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawGetSupportFunction = mDrawGetSupportFunction;
*/
    public static native void internal_native_set_mDrawGetSupportFunction(long this_addr, boolean mDrawGetSupportFunction);

    public boolean get_mDrawSupportDirection() {
        return internal_native_get_mDrawSupportDirection(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawSupportDirection;
*/
    public static native boolean internal_native_get_mDrawSupportDirection(long this_addr);

    public void set_mDrawSupportDirection(boolean mDrawSupportDirection) {
        internal_native_set_mDrawSupportDirection(native_address, mDrawSupportDirection);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSupportDirection = mDrawSupportDirection;
*/
    public static native void internal_native_set_mDrawSupportDirection(long this_addr, boolean mDrawSupportDirection);

    public boolean get_mDrawGetSupportingFace() {
        return internal_native_get_mDrawGetSupportingFace(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawGetSupportingFace;
*/
    public static native boolean internal_native_get_mDrawGetSupportingFace(long this_addr);

    public void set_mDrawGetSupportingFace(boolean mDrawGetSupportingFace) {
        internal_native_set_mDrawGetSupportingFace(native_address, mDrawGetSupportingFace);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawGetSupportingFace = mDrawGetSupportingFace;
*/
    public static native void internal_native_set_mDrawGetSupportingFace(long this_addr, boolean mDrawGetSupportingFace);

    public boolean get_mDrawShape() {
        return internal_native_get_mDrawShape(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawShape;
*/
    public static native boolean internal_native_get_mDrawShape(long this_addr);

    public void set_mDrawShape(boolean mDrawShape) {
        internal_native_set_mDrawShape(native_address, mDrawShape);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawShape = mDrawShape;
*/
    public static native void internal_native_set_mDrawShape(long this_addr, boolean mDrawShape);

    public boolean get_mDrawShapeWireframe() {
        return internal_native_get_mDrawShapeWireframe(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawShapeWireframe;
*/
    public static native boolean internal_native_get_mDrawShapeWireframe(long this_addr);

    public void set_mDrawShapeWireframe(boolean mDrawShapeWireframe) {
        internal_native_set_mDrawShapeWireframe(native_address, mDrawShapeWireframe);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawShapeWireframe = mDrawShapeWireframe;
*/
    public static native void internal_native_set_mDrawShapeWireframe(long this_addr, boolean mDrawShapeWireframe);

    public EShapeColor get_mDrawShapeColor() {
        int value = internal_native_get_mDrawShapeColor(native_address);
        return EShapeColor.MAP.get(value);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return (jint)nativeObject->mDrawShapeColor;
*/
    public static native int internal_native_get_mDrawShapeColor(long this_addr);

    public void set_mDrawShapeColor(EShapeColor mDrawShapeColor) {
        internal_native_set_mDrawShapeColor(native_address, (mDrawShapeColor != null ? mDrawShapeColor.getValue() : 0));
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawShapeColor = (::EShapeColor)mDrawShapeColor;
*/
    public static native void internal_native_set_mDrawShapeColor(long this_addr, long mDrawShapeColor);

    public boolean get_mDrawBoundingBox() {
        return internal_native_get_mDrawBoundingBox(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawBoundingBox;
*/
    public static native boolean internal_native_get_mDrawBoundingBox(long this_addr);

    public void set_mDrawBoundingBox(boolean mDrawBoundingBox) {
        internal_native_set_mDrawBoundingBox(native_address, mDrawBoundingBox);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawBoundingBox = mDrawBoundingBox;
*/
    public static native void internal_native_set_mDrawBoundingBox(long this_addr, boolean mDrawBoundingBox);

    public boolean get_mDrawCenterOfMassTransform() {
        return internal_native_get_mDrawCenterOfMassTransform(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawCenterOfMassTransform;
*/
    public static native boolean internal_native_get_mDrawCenterOfMassTransform(long this_addr);

    public void set_mDrawCenterOfMassTransform(boolean mDrawCenterOfMassTransform) {
        internal_native_set_mDrawCenterOfMassTransform(native_address, mDrawCenterOfMassTransform);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawCenterOfMassTransform = mDrawCenterOfMassTransform;
*/
    public static native void internal_native_set_mDrawCenterOfMassTransform(long this_addr, boolean mDrawCenterOfMassTransform);

    public boolean get_mDrawWorldTransform() {
        return internal_native_get_mDrawWorldTransform(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawWorldTransform;
*/
    public static native boolean internal_native_get_mDrawWorldTransform(long this_addr);

    public void set_mDrawWorldTransform(boolean mDrawWorldTransform) {
        internal_native_set_mDrawWorldTransform(native_address, mDrawWorldTransform);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawWorldTransform = mDrawWorldTransform;
*/
    public static native void internal_native_set_mDrawWorldTransform(long this_addr, boolean mDrawWorldTransform);

    public boolean get_mDrawVelocity() {
        return internal_native_get_mDrawVelocity(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawVelocity;
*/
    public static native boolean internal_native_get_mDrawVelocity(long this_addr);

    public void set_mDrawVelocity(boolean mDrawVelocity) {
        internal_native_set_mDrawVelocity(native_address, mDrawVelocity);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawVelocity = mDrawVelocity;
*/
    public static native void internal_native_set_mDrawVelocity(long this_addr, boolean mDrawVelocity);

    public boolean get_mDrawMassAndInertia() {
        return internal_native_get_mDrawMassAndInertia(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawMassAndInertia;
*/
    public static native boolean internal_native_get_mDrawMassAndInertia(long this_addr);

    public void set_mDrawMassAndInertia(boolean mDrawMassAndInertia) {
        internal_native_set_mDrawMassAndInertia(native_address, mDrawMassAndInertia);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawMassAndInertia = mDrawMassAndInertia;
*/
    public static native void internal_native_set_mDrawMassAndInertia(long this_addr, boolean mDrawMassAndInertia);

    public boolean get_mDrawSleepStats() {
        return internal_native_get_mDrawSleepStats(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawSleepStats;
*/
    public static native boolean internal_native_get_mDrawSleepStats(long this_addr);

    public void set_mDrawSleepStats(boolean mDrawSleepStats) {
        internal_native_set_mDrawSleepStats(native_address, mDrawSleepStats);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSleepStats = mDrawSleepStats;
*/
    public static native void internal_native_set_mDrawSleepStats(long this_addr, boolean mDrawSleepStats);

    public boolean get_mDrawSoftBodyVertices() {
        return internal_native_get_mDrawSoftBodyVertices(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawSoftBodyVertices;
*/
    public static native boolean internal_native_get_mDrawSoftBodyVertices(long this_addr);

    public void set_mDrawSoftBodyVertices(boolean mDrawSoftBodyVertices) {
        internal_native_set_mDrawSoftBodyVertices(native_address, mDrawSoftBodyVertices);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSoftBodyVertices = mDrawSoftBodyVertices;
*/
    public static native void internal_native_set_mDrawSoftBodyVertices(long this_addr, boolean mDrawSoftBodyVertices);

    public boolean get_mDrawSoftBodyVertexVelocities() {
        return internal_native_get_mDrawSoftBodyVertexVelocities(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawSoftBodyVertexVelocities;
*/
    public static native boolean internal_native_get_mDrawSoftBodyVertexVelocities(long this_addr);

    public void set_mDrawSoftBodyVertexVelocities(boolean mDrawSoftBodyVertexVelocities) {
        internal_native_set_mDrawSoftBodyVertexVelocities(native_address, mDrawSoftBodyVertexVelocities);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSoftBodyVertexVelocities = mDrawSoftBodyVertexVelocities;
*/
    public static native void internal_native_set_mDrawSoftBodyVertexVelocities(long this_addr, boolean mDrawSoftBodyVertexVelocities);

    public boolean get_mDrawSoftBodyEdgeConstraints() {
        return internal_native_get_mDrawSoftBodyEdgeConstraints(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawSoftBodyEdgeConstraints;
*/
    public static native boolean internal_native_get_mDrawSoftBodyEdgeConstraints(long this_addr);

    public void set_mDrawSoftBodyEdgeConstraints(boolean mDrawSoftBodyEdgeConstraints) {
        internal_native_set_mDrawSoftBodyEdgeConstraints(native_address, mDrawSoftBodyEdgeConstraints);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSoftBodyEdgeConstraints = mDrawSoftBodyEdgeConstraints;
*/
    public static native void internal_native_set_mDrawSoftBodyEdgeConstraints(long this_addr, boolean mDrawSoftBodyEdgeConstraints);

    public boolean get_mDrawSoftBodyBendConstraints() {
        return internal_native_get_mDrawSoftBodyBendConstraints(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawSoftBodyBendConstraints;
*/
    public static native boolean internal_native_get_mDrawSoftBodyBendConstraints(long this_addr);

    public void set_mDrawSoftBodyBendConstraints(boolean mDrawSoftBodyBendConstraints) {
        internal_native_set_mDrawSoftBodyBendConstraints(native_address, mDrawSoftBodyBendConstraints);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSoftBodyBendConstraints = mDrawSoftBodyBendConstraints;
*/
    public static native void internal_native_set_mDrawSoftBodyBendConstraints(long this_addr, boolean mDrawSoftBodyBendConstraints);

    public boolean get_mDrawSoftBodyVolumeConstraints() {
        return internal_native_get_mDrawSoftBodyVolumeConstraints(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawSoftBodyVolumeConstraints;
*/
    public static native boolean internal_native_get_mDrawSoftBodyVolumeConstraints(long this_addr);

    public void set_mDrawSoftBodyVolumeConstraints(boolean mDrawSoftBodyVolumeConstraints) {
        internal_native_set_mDrawSoftBodyVolumeConstraints(native_address, mDrawSoftBodyVolumeConstraints);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSoftBodyVolumeConstraints = mDrawSoftBodyVolumeConstraints;
*/
    public static native void internal_native_set_mDrawSoftBodyVolumeConstraints(long this_addr, boolean mDrawSoftBodyVolumeConstraints);

    public boolean get_mDrawSoftBodySkinConstraints() {
        return internal_native_get_mDrawSoftBodySkinConstraints(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawSoftBodySkinConstraints;
*/
    public static native boolean internal_native_get_mDrawSoftBodySkinConstraints(long this_addr);

    public void set_mDrawSoftBodySkinConstraints(boolean mDrawSoftBodySkinConstraints) {
        internal_native_set_mDrawSoftBodySkinConstraints(native_address, mDrawSoftBodySkinConstraints);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSoftBodySkinConstraints = mDrawSoftBodySkinConstraints;
*/
    public static native void internal_native_set_mDrawSoftBodySkinConstraints(long this_addr, boolean mDrawSoftBodySkinConstraints);

    public boolean get_mDrawSoftBodyLRAConstraints() {
        return internal_native_get_mDrawSoftBodyLRAConstraints(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawSoftBodyLRAConstraints;
*/
    public static native boolean internal_native_get_mDrawSoftBodyLRAConstraints(long this_addr);

    public void set_mDrawSoftBodyLRAConstraints(boolean mDrawSoftBodyLRAConstraints) {
        internal_native_set_mDrawSoftBodyLRAConstraints(native_address, mDrawSoftBodyLRAConstraints);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSoftBodyLRAConstraints = mDrawSoftBodyLRAConstraints;
*/
    public static native void internal_native_set_mDrawSoftBodyLRAConstraints(long this_addr, boolean mDrawSoftBodyLRAConstraints);

    public boolean get_mDrawSoftBodyPredictedBounds() {
        return internal_native_get_mDrawSoftBodyPredictedBounds(native_address);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return nativeObject->mDrawSoftBodyPredictedBounds;
*/
    public static native boolean internal_native_get_mDrawSoftBodyPredictedBounds(long this_addr);

    public void set_mDrawSoftBodyPredictedBounds(boolean mDrawSoftBodyPredictedBounds) {
        internal_native_set_mDrawSoftBodyPredictedBounds(native_address, mDrawSoftBodyPredictedBounds);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSoftBodyPredictedBounds = mDrawSoftBodyPredictedBounds;
*/
    public static native void internal_native_set_mDrawSoftBodyPredictedBounds(long this_addr, boolean mDrawSoftBodyPredictedBounds);

    public ESoftBodyConstraintColor get_mDrawSoftBodyConstraintColor() {
        int value = internal_native_get_mDrawSoftBodyConstraintColor(native_address);
        return ESoftBodyConstraintColor.MAP.get(value);
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
return (jint)nativeObject->mDrawSoftBodyConstraintColor;
*/
    public static native int internal_native_get_mDrawSoftBodyConstraintColor(long this_addr);

    public void set_mDrawSoftBodyConstraintColor(ESoftBodyConstraintColor mDrawSoftBodyConstraintColor) {
        internal_native_set_mDrawSoftBodyConstraintColor(native_address, (mDrawSoftBodyConstraintColor != null ? mDrawSoftBodyConstraintColor.getValue() : 0));
    }

    /*[-JNI;-NATIVE]
BodyManagerDrawSettings* nativeObject = (BodyManagerDrawSettings*)this_addr;
nativeObject->mDrawSoftBodyConstraintColor = (::ESoftBodyConstraintColor)mDrawSoftBodyConstraintColor;
*/
    public static native void internal_native_set_mDrawSoftBodyConstraintColor(long this_addr, long mDrawSoftBodyConstraintColor);
}
