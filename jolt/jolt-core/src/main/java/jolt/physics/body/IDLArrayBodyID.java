/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.body;

import jolt.idl.helper.IDLArray;

public class IDLArrayBodyID extends IDLArray {

    private BodyID BodyID_TEMP_GEN_0;

    static public final IDLArrayBodyID NULL = IDLArrayBodyID.native_new();

    public IDLArrayBodyID(int size) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_int(size);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new IDLArrayBodyID((int)size);
*/
    public static native long internal_native_create_int(int size);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected IDLArrayBodyID(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static IDLArrayBodyID native_new() {
        return new IDLArrayBodyID((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
IDLArrayBodyID* nativeObject = (IDLArrayBodyID*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public BodyID getValue(int index) {
        long pointer = internal_native_getValue(native_address, index);
        if (pointer == 0)
            return BodyID.NULL;
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = BodyID.native_new();
        BodyID_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
IDLArrayBodyID* nativeObject = (IDLArrayBodyID*)this_addr;
BodyID* obj = nativeObject->getValue((int)index);
return (jlong)obj;
*/
    public static native long internal_native_getValue(long this_addr, int index);

    public void setValue(int index, BodyID value) {
        internal_native_setValue(native_address, index, value.native_address);
    }

    /*[-JNI;-NATIVE]
IDLArrayBodyID* nativeObject = (IDLArrayBodyID*)this_addr;
nativeObject->setValue((int)index, (BodyID* )value_addr);
*/
    public static native void internal_native_setValue(long this_addr, int index, long value_addr);
}
