/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.character;

import jolt.idl.IDLBase;
import jolt.math.Vec3;
import jolt.geometry.Plane;
import jolt.physics.collision.shape.Shape;

public class CharacterBaseSettings extends IDLBase {

    private Vec3 Vec3_TEMP_GEN_0;

    private Plane Plane_TEMP_GEN_0;

    private Shape Shape_TEMP_GEN_0;

    static public final CharacterBaseSettings T_01 = new CharacterBaseSettings((byte) 1, (char) 1);

    static public final CharacterBaseSettings T_02 = new CharacterBaseSettings((byte) 1, (char) 1);

    static public final CharacterBaseSettings T_03 = new CharacterBaseSettings((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public CharacterBaseSettings(byte b, char c) {
    }

    public int GetRefCount() {
        return internal_native_GetRefCount(native_address);
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
return nativeObject->GetRefCount();
*/
    public static native int internal_native_GetRefCount(long this_addr);

    public void AddRef() {
        internal_native_AddRef(native_address);
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
nativeObject->AddRef();
*/
    public static native void internal_native_AddRef(long this_addr);

    public void Release() {
        internal_native_Release(native_address);
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
nativeObject->Release();
*/
    public static native void internal_native_Release(long this_addr);

    public Vec3 get_mUp() {
        long pointer = internal_native_get_mUp(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
return (jlong)&nativeObject->mUp;
*/
    public static native long internal_native_get_mUp(long this_addr);

    public void set_mUp(Vec3 mUp) {
        internal_native_set_mUp(native_address, (mUp != null ? mUp.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
nativeObject->mUp = *((Vec3*)mUp_addr);
*/
    public static native void internal_native_set_mUp(long this_addr, long mUp_addr);

    public Plane get_mSupportingVolume() {
        long pointer = internal_native_get_mSupportingVolume(native_address);
        if (pointer == 0)
            return null;
        if (Plane_TEMP_GEN_0 == null)
            Plane_TEMP_GEN_0 = new Plane((byte) 1, (char) 1);
        Plane_TEMP_GEN_0.internal_reset(pointer, false);
        return Plane_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
return (jlong)&nativeObject->mSupportingVolume;
*/
    public static native long internal_native_get_mSupportingVolume(long this_addr);

    public void set_mSupportingVolume(Plane mSupportingVolume) {
        internal_native_set_mSupportingVolume(native_address, (mSupportingVolume != null ? mSupportingVolume.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
nativeObject->mSupportingVolume = *((Plane*)mSupportingVolume_addr);
*/
    public static native void internal_native_set_mSupportingVolume(long this_addr, long mSupportingVolume_addr);

    public float get_mMaxSlopeAngle() {
        return internal_native_get_mMaxSlopeAngle(native_address);
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
return nativeObject->mMaxSlopeAngle;
*/
    public static native float internal_native_get_mMaxSlopeAngle(long this_addr);

    public void set_mMaxSlopeAngle(float mMaxSlopeAngle) {
        internal_native_set_mMaxSlopeAngle(native_address, mMaxSlopeAngle);
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
nativeObject->mMaxSlopeAngle = mMaxSlopeAngle;
*/
    public static native void internal_native_set_mMaxSlopeAngle(long this_addr, float mMaxSlopeAngle);

    public boolean get_mEnhancedInternalEdgeRemoval() {
        return internal_native_get_mEnhancedInternalEdgeRemoval(native_address);
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
return nativeObject->mEnhancedInternalEdgeRemoval;
*/
    public static native boolean internal_native_get_mEnhancedInternalEdgeRemoval(long this_addr);

    public void set_mEnhancedInternalEdgeRemoval(boolean mEnhancedInternalEdgeRemoval) {
        internal_native_set_mEnhancedInternalEdgeRemoval(native_address, mEnhancedInternalEdgeRemoval);
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
nativeObject->mEnhancedInternalEdgeRemoval = mEnhancedInternalEdgeRemoval;
*/
    public static native void internal_native_set_mEnhancedInternalEdgeRemoval(long this_addr, boolean mEnhancedInternalEdgeRemoval);

    public Shape get_mShape() {
        long pointer = internal_native_get_mShape(native_address);
        if (pointer == 0)
            return null;
        if (Shape_TEMP_GEN_0 == null)
            Shape_TEMP_GEN_0 = new Shape((byte) 1, (char) 1);
        Shape_TEMP_GEN_0.internal_reset(pointer, false);
        return Shape_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
const Shape* attr = nativeObject->mShape;
return (jlong)attr;
*/
    public static native long internal_native_get_mShape(long this_addr);

    public void set_mShape(Shape mShape) {
        internal_native_set_mShape(native_address, (mShape != null ? mShape.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CharacterBaseSettings* nativeObject = (CharacterBaseSettings*)this_addr;
nativeObject->mShape = (Shape*)mShape_addr;
*/
    public static native void internal_native_set_mShape(long this_addr, long mShape_addr);
}
