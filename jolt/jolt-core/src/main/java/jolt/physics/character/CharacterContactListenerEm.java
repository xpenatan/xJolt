/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.character;

import jolt.physics.body.Body;
import jolt.math.Vec3;
import jolt.physics.body.BodyID;
import jolt.physics.collision.shape.SubShapeID;
import jolt.physics.collision.PhysicsMaterial;

public class CharacterContactListenerEm extends CharacterContactListener {

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_0;

    static private Body Body_TEMP_STATIC_GEN_0;

    static private Vec3 Vec3_TEMP_STATIC_GEN_0;

    static private Vec3 Vec3_TEMP_STATIC_GEN_1;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_1;

    static private BodyID BodyID_TEMP_STATIC_GEN_0;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_0;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_2;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_3;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_1;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_4;

    static private BodyID BodyID_TEMP_STATIC_GEN_1;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_2;

    static private Vec3 Vec3_TEMP_STATIC_GEN_2;

    static private Vec3 Vec3_TEMP_STATIC_GEN_3;

    static private CharacterContactSettings CharacterContactSettings_TEMP_STATIC_GEN_0;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_5;

    static private BodyID BodyID_TEMP_STATIC_GEN_2;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_3;

    static private Vec3 Vec3_TEMP_STATIC_GEN_4;

    static private Vec3 Vec3_TEMP_STATIC_GEN_5;

    static private CharacterContactSettings CharacterContactSettings_TEMP_STATIC_GEN_1;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_6;

    static private BodyID BodyID_TEMP_STATIC_GEN_3;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_4;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_7;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_8;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_5;

    static private Vec3 Vec3_TEMP_STATIC_GEN_6;

    static private Vec3 Vec3_TEMP_STATIC_GEN_7;

    static private CharacterContactSettings CharacterContactSettings_TEMP_STATIC_GEN_2;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_9;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_10;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_6;

    static private Vec3 Vec3_TEMP_STATIC_GEN_8;

    static private Vec3 Vec3_TEMP_STATIC_GEN_9;

    static private CharacterContactSettings CharacterContactSettings_TEMP_STATIC_GEN_3;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_11;

    static private CharacterID CharacterID_TEMP_STATIC_GEN_0;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_7;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_12;

    static private BodyID BodyID_TEMP_STATIC_GEN_4;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_8;

    static private Vec3 Vec3_TEMP_STATIC_GEN_10;

    static private Vec3 Vec3_TEMP_STATIC_GEN_11;

    static private Vec3 Vec3_TEMP_STATIC_GEN_12;

    static private PhysicsMaterial PhysicsMaterial_TEMP_STATIC_GEN_0;

    static private Vec3 Vec3_TEMP_STATIC_GEN_13;

    static private Vec3 Vec3_TEMP_STATIC_GEN_14;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_13;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_14;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_9;

    static private Vec3 Vec3_TEMP_STATIC_GEN_15;

    static private Vec3 Vec3_TEMP_STATIC_GEN_16;

    static private Vec3 Vec3_TEMP_STATIC_GEN_17;

    static private PhysicsMaterial PhysicsMaterial_TEMP_STATIC_GEN_1;

    static private Vec3 Vec3_TEMP_STATIC_GEN_18;

    static private Vec3 Vec3_TEMP_STATIC_GEN_19;

    /*[-JNI;-NATIVE]
class CharacterContactListenerJS : public CharacterContactListenerEm {
private:
	JNIEnv* env;
	jobject obj;
public:
	inline static jclass jClassID = 0;
	inline static jmethodID OnAdjustBodyVelocityJJJJ_ID = 0;
	inline static jmethodID OnContactValidateJJJ_ID = 0;
	inline static jmethodID OnCharacterContactValidateJJJ_ID = 0;
	inline static jmethodID OnContactAddedJJJJJJ_ID = 0;
	inline static jmethodID OnContactPersistedJJJJJJ_ID = 0;
	inline static jmethodID OnContactRemovedJJJ_ID = 0;
	inline static jmethodID OnCharacterContactAddedJJJJJJ_ID = 0;
	inline static jmethodID OnCharacterContactPersistedJJJJJJ_ID = 0;
	inline static jmethodID OnCharacterContactRemovedJJJ_ID = 0;
	inline static jmethodID OnContactSolveJJJJJJJJJ_ID = 0;
	inline static jmethodID OnCharacterContactSolveJJJJJJJJJ_ID = 0;

void setupCallback(JNIEnv* env, jobject obj) {
	this->env = env;
	this->obj = env->NewGlobalRef(obj);
	if(CharacterContactListenerJS::jClassID == 0) {
		CharacterContactListenerJS::jClassID = (jclass)env->NewGlobalRef(env->GetObjectClass(obj));
		CharacterContactListenerJS::OnAdjustBodyVelocityJJJJ_ID = env->GetMethodID(jClassID, "internal_OnAdjustBodyVelocity", "(JJJJ)V");
		CharacterContactListenerJS::OnContactValidateJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactValidate", "(JJJ)Z");
		CharacterContactListenerJS::OnCharacterContactValidateJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactValidate", "(JJJ)Z");
		CharacterContactListenerJS::OnContactAddedJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactAdded", "(JJJJJJ)V");
		CharacterContactListenerJS::OnContactPersistedJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactPersisted", "(JJJJJJ)V");
		CharacterContactListenerJS::OnContactRemovedJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactRemoved", "(JJJ)V");
		CharacterContactListenerJS::OnCharacterContactAddedJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactAdded", "(JJJJJJ)V");
		CharacterContactListenerJS::OnCharacterContactPersistedJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactPersisted", "(JJJJJJ)V");
		CharacterContactListenerJS::OnCharacterContactRemovedJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactRemoved", "(JJJ)V");
		CharacterContactListenerJS::OnContactSolveJJJJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactSolve", "(JJJJJJJJJ)V");
		CharacterContactListenerJS::OnCharacterContactSolveJJJJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactSolve", "(JJJJJJJJJ)V");
	}
}
virtual void OnAdjustBodyVelocity(const CharacterVirtual* inCharacter, const Body& inBody2, Vec3& ioLinearVelocity, Vec3& ioAngularVelocity) {
   env->CallVoidMethod(obj, CharacterContactListenerJS::OnAdjustBodyVelocityJJJJ_ID, (jlong)inCharacter, (jlong)&inBody2, (jlong)&ioLinearVelocity, (jlong)&ioAngularVelocity);
}
virtual bool OnContactValidate(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2) {
   return env->CallBooleanMethod(obj, CharacterContactListenerJS::OnContactValidateJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2);
}
virtual bool OnCharacterContactValidate(const CharacterVirtual* inCharacter, const CharacterVirtual* inOtherCharacter, const SubShapeID& inSubShapeID2) {
   return env->CallBooleanMethod(obj, CharacterContactListenerJS::OnCharacterContactValidateJJJ_ID, (jlong)inCharacter, (jlong)inOtherCharacter, (jlong)&inSubShapeID2);
}
virtual void OnContactAdded(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2, const Vec3* inContactPosition, const Vec3* inContactNormal, CharacterContactSettings& ioSettings) {
   env->CallVoidMethod(obj, CharacterContactListenerJS::OnContactAddedJJJJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2, (jlong)inContactPosition, (jlong)inContactNormal, (jlong)&ioSettings);
}
virtual void OnContactPersisted(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2, const Vec3* inContactPosition, const Vec3* inContactNormal, CharacterContactSettings& ioSettings) {
   env->CallVoidMethod(obj, CharacterContactListenerJS::OnContactPersistedJJJJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2, (jlong)inContactPosition, (jlong)inContactNormal, (jlong)&ioSettings);
}
virtual void OnContactRemoved(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2) {
   env->CallVoidMethod(obj, CharacterContactListenerJS::OnContactRemovedJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2);
}
virtual void OnCharacterContactAdded(const CharacterVirtual* inCharacter, const CharacterVirtual* inOtherCharacter, const SubShapeID& inSubShapeID2, const Vec3* inContactPosition, const Vec3* inContactNormal, CharacterContactSettings& ioSettings) {
   env->CallVoidMethod(obj, CharacterContactListenerJS::OnCharacterContactAddedJJJJJJ_ID, (jlong)inCharacter, (jlong)inOtherCharacter, (jlong)&inSubShapeID2, (jlong)inContactPosition, (jlong)inContactNormal, (jlong)&ioSettings);
}
virtual void OnCharacterContactPersisted(const CharacterVirtual* inCharacter, const CharacterVirtual* inOtherCharacter, const SubShapeID& inSubShapeID2, const Vec3* inContactPosition, const Vec3* inContactNormal, CharacterContactSettings& ioSettings) {
   env->CallVoidMethod(obj, CharacterContactListenerJS::OnCharacterContactPersistedJJJJJJ_ID, (jlong)inCharacter, (jlong)inOtherCharacter, (jlong)&inSubShapeID2, (jlong)inContactPosition, (jlong)inContactNormal, (jlong)&ioSettings);
}
virtual void OnCharacterContactRemoved(const CharacterVirtual* inCharacter, const CharacterID& inOtherCharacter, const SubShapeID& inSubShapeID2) {
   env->CallVoidMethod(obj, CharacterContactListenerJS::OnCharacterContactRemovedJJJ_ID, (jlong)inCharacter, (jlong)&inOtherCharacter, (jlong)&inSubShapeID2);
}
virtual void OnContactSolve(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2, const Vec3* inContactPosition, const Vec3* inContactNormal, const Vec3* inContactVelocity, const PhysicsMaterial* inContactMaterial, const Vec3* inCharacterVelocity, Vec3& ioNewCharacterVelocity) {
   env->CallVoidMethod(obj, CharacterContactListenerJS::OnContactSolveJJJJJJJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2, (jlong)inContactPosition, (jlong)inContactNormal, (jlong)inContactVelocity, (jlong)inContactMaterial, (jlong)inCharacterVelocity, (jlong)&ioNewCharacterVelocity);
}
virtual void OnCharacterContactSolve(const CharacterVirtual* inCharacter, const CharacterVirtual* inOtherCharacter, const SubShapeID& inSubShapeID2, const Vec3* inContactPosition, const Vec3* inContactNormal, const Vec3* inContactVelocity, const PhysicsMaterial* inContactMaterial, const Vec3* inCharacterVelocity, Vec3& ioNewCharacterVelocity) {
   env->CallVoidMethod(obj, CharacterContactListenerJS::OnCharacterContactSolveJJJJJJJJJ_ID, (jlong)inCharacter, (jlong)inOtherCharacter, (jlong)&inSubShapeID2, (jlong)inContactPosition, (jlong)inContactNormal, (jlong)inContactVelocity, (jlong)inContactMaterial, (jlong)inCharacterVelocity, (jlong)&ioNewCharacterVelocity);
}
};
*/
    @Deprecated()
    public CharacterContactListenerEm(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
CharacterContactListenerJS* nativeObject = (CharacterContactListenerJS*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public CharacterContactListenerEm() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        internal_native_setupCallback(native_address);
    }

    protected void OnAdjustBodyVelocity(CharacterVirtual inCharacter, Body inBody2, Vec3 ioLinearVelocity, Vec3 ioAngularVelocity) {
    }

    private void internal_OnAdjustBodyVelocity(long inCharacter_addr, long inBody2_addr, long ioLinearVelocity_addr, long ioAngularVelocity_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_0 == null)
            CharacterVirtual_TEMP_STATIC_GEN_0 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_0.internal_reset(inCharacter_addr, false);
        if (Body_TEMP_STATIC_GEN_0 == null)
            Body_TEMP_STATIC_GEN_0 = new Body((byte) 1, (char) 1);
        Body_TEMP_STATIC_GEN_0.internal_reset(inBody2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_0 == null)
            Vec3_TEMP_STATIC_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_0.internal_reset(ioLinearVelocity_addr, false);
        if (Vec3_TEMP_STATIC_GEN_1 == null)
            Vec3_TEMP_STATIC_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_1.internal_reset(ioAngularVelocity_addr, false);
        OnAdjustBodyVelocity(CharacterVirtual_TEMP_STATIC_GEN_0, Body_TEMP_STATIC_GEN_0, Vec3_TEMP_STATIC_GEN_0, Vec3_TEMP_STATIC_GEN_1);
    }

    protected boolean OnContactValidate(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2) {
        return false;
    }

    private boolean internal_OnContactValidate(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_1 == null)
            CharacterVirtual_TEMP_STATIC_GEN_1 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_1.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_0 == null)
            BodyID_TEMP_STATIC_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_STATIC_GEN_0.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_0 == null)
            SubShapeID_TEMP_STATIC_GEN_0 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_0.internal_reset(inSubShapeID2_addr, false);
        return OnContactValidate(CharacterVirtual_TEMP_STATIC_GEN_1, BodyID_TEMP_STATIC_GEN_0, SubShapeID_TEMP_STATIC_GEN_0);
    }

    protected boolean OnCharacterContactValidate(CharacterVirtual inCharacter, CharacterVirtual inOtherCharacter, SubShapeID inSubShapeID2) {
        return false;
    }

    private boolean internal_OnCharacterContactValidate(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_2 == null)
            CharacterVirtual_TEMP_STATIC_GEN_2 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_2.internal_reset(inCharacter_addr, false);
        if (CharacterVirtual_TEMP_STATIC_GEN_3 == null)
            CharacterVirtual_TEMP_STATIC_GEN_3 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_3.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_1 == null)
            SubShapeID_TEMP_STATIC_GEN_1 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_1.internal_reset(inSubShapeID2_addr, false);
        return OnCharacterContactValidate(CharacterVirtual_TEMP_STATIC_GEN_2, CharacterVirtual_TEMP_STATIC_GEN_3, SubShapeID_TEMP_STATIC_GEN_1);
    }

    protected void OnContactAdded(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2, Vec3 inContactPosition, Vec3 inContactNormal, CharacterContactSettings ioSettings) {
    }

    private void internal_OnContactAdded(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long ioSettings_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_4 == null)
            CharacterVirtual_TEMP_STATIC_GEN_4 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_4.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_1 == null)
            BodyID_TEMP_STATIC_GEN_1 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_STATIC_GEN_1.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_2 == null)
            SubShapeID_TEMP_STATIC_GEN_2 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_2.internal_reset(inSubShapeID2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_2 == null)
            Vec3_TEMP_STATIC_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_2.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_3 == null)
            Vec3_TEMP_STATIC_GEN_3 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_3.internal_reset(inContactNormal_addr, false);
        if (CharacterContactSettings_TEMP_STATIC_GEN_0 == null)
            CharacterContactSettings_TEMP_STATIC_GEN_0 = new CharacterContactSettings((byte) 1, (char) 1);
        CharacterContactSettings_TEMP_STATIC_GEN_0.internal_reset(ioSettings_addr, false);
        OnContactAdded(CharacterVirtual_TEMP_STATIC_GEN_4, BodyID_TEMP_STATIC_GEN_1, SubShapeID_TEMP_STATIC_GEN_2, Vec3_TEMP_STATIC_GEN_2, Vec3_TEMP_STATIC_GEN_3, CharacterContactSettings_TEMP_STATIC_GEN_0);
    }

    protected void OnContactPersisted(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2, Vec3 inContactPosition, Vec3 inContactNormal, CharacterContactSettings ioSettings) {
    }

    private void internal_OnContactPersisted(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long ioSettings_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_5 == null)
            CharacterVirtual_TEMP_STATIC_GEN_5 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_5.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_2 == null)
            BodyID_TEMP_STATIC_GEN_2 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_STATIC_GEN_2.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_3 == null)
            SubShapeID_TEMP_STATIC_GEN_3 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_3.internal_reset(inSubShapeID2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_4 == null)
            Vec3_TEMP_STATIC_GEN_4 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_4.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_5 == null)
            Vec3_TEMP_STATIC_GEN_5 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_5.internal_reset(inContactNormal_addr, false);
        if (CharacterContactSettings_TEMP_STATIC_GEN_1 == null)
            CharacterContactSettings_TEMP_STATIC_GEN_1 = new CharacterContactSettings((byte) 1, (char) 1);
        CharacterContactSettings_TEMP_STATIC_GEN_1.internal_reset(ioSettings_addr, false);
        OnContactPersisted(CharacterVirtual_TEMP_STATIC_GEN_5, BodyID_TEMP_STATIC_GEN_2, SubShapeID_TEMP_STATIC_GEN_3, Vec3_TEMP_STATIC_GEN_4, Vec3_TEMP_STATIC_GEN_5, CharacterContactSettings_TEMP_STATIC_GEN_1);
    }

    protected void OnContactRemoved(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2) {
    }

    private void internal_OnContactRemoved(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_6 == null)
            CharacterVirtual_TEMP_STATIC_GEN_6 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_6.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_3 == null)
            BodyID_TEMP_STATIC_GEN_3 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_STATIC_GEN_3.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_4 == null)
            SubShapeID_TEMP_STATIC_GEN_4 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_4.internal_reset(inSubShapeID2_addr, false);
        OnContactRemoved(CharacterVirtual_TEMP_STATIC_GEN_6, BodyID_TEMP_STATIC_GEN_3, SubShapeID_TEMP_STATIC_GEN_4);
    }

    protected void OnCharacterContactAdded(CharacterVirtual inCharacter, CharacterVirtual inOtherCharacter, SubShapeID inSubShapeID2, Vec3 inContactPosition, Vec3 inContactNormal, CharacterContactSettings ioSettings) {
    }

    private void internal_OnCharacterContactAdded(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long ioSettings_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_7 == null)
            CharacterVirtual_TEMP_STATIC_GEN_7 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_7.internal_reset(inCharacter_addr, false);
        if (CharacterVirtual_TEMP_STATIC_GEN_8 == null)
            CharacterVirtual_TEMP_STATIC_GEN_8 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_8.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_5 == null)
            SubShapeID_TEMP_STATIC_GEN_5 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_5.internal_reset(inSubShapeID2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_6 == null)
            Vec3_TEMP_STATIC_GEN_6 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_6.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_7 == null)
            Vec3_TEMP_STATIC_GEN_7 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_7.internal_reset(inContactNormal_addr, false);
        if (CharacterContactSettings_TEMP_STATIC_GEN_2 == null)
            CharacterContactSettings_TEMP_STATIC_GEN_2 = new CharacterContactSettings((byte) 1, (char) 1);
        CharacterContactSettings_TEMP_STATIC_GEN_2.internal_reset(ioSettings_addr, false);
        OnCharacterContactAdded(CharacterVirtual_TEMP_STATIC_GEN_7, CharacterVirtual_TEMP_STATIC_GEN_8, SubShapeID_TEMP_STATIC_GEN_5, Vec3_TEMP_STATIC_GEN_6, Vec3_TEMP_STATIC_GEN_7, CharacterContactSettings_TEMP_STATIC_GEN_2);
    }

    protected void OnCharacterContactPersisted(CharacterVirtual inCharacter, CharacterVirtual inOtherCharacter, SubShapeID inSubShapeID2, Vec3 inContactPosition, Vec3 inContactNormal, CharacterContactSettings ioSettings) {
    }

    private void internal_OnCharacterContactPersisted(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long ioSettings_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_9 == null)
            CharacterVirtual_TEMP_STATIC_GEN_9 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_9.internal_reset(inCharacter_addr, false);
        if (CharacterVirtual_TEMP_STATIC_GEN_10 == null)
            CharacterVirtual_TEMP_STATIC_GEN_10 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_10.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_6 == null)
            SubShapeID_TEMP_STATIC_GEN_6 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_6.internal_reset(inSubShapeID2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_8 == null)
            Vec3_TEMP_STATIC_GEN_8 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_8.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_9 == null)
            Vec3_TEMP_STATIC_GEN_9 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_9.internal_reset(inContactNormal_addr, false);
        if (CharacterContactSettings_TEMP_STATIC_GEN_3 == null)
            CharacterContactSettings_TEMP_STATIC_GEN_3 = new CharacterContactSettings((byte) 1, (char) 1);
        CharacterContactSettings_TEMP_STATIC_GEN_3.internal_reset(ioSettings_addr, false);
        OnCharacterContactPersisted(CharacterVirtual_TEMP_STATIC_GEN_9, CharacterVirtual_TEMP_STATIC_GEN_10, SubShapeID_TEMP_STATIC_GEN_6, Vec3_TEMP_STATIC_GEN_8, Vec3_TEMP_STATIC_GEN_9, CharacterContactSettings_TEMP_STATIC_GEN_3);
    }

    protected void OnCharacterContactRemoved(CharacterVirtual inCharacter, CharacterID inOtherCharacter, SubShapeID inSubShapeID2) {
    }

    private void internal_OnCharacterContactRemoved(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_11 == null)
            CharacterVirtual_TEMP_STATIC_GEN_11 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_11.internal_reset(inCharacter_addr, false);
        if (CharacterID_TEMP_STATIC_GEN_0 == null)
            CharacterID_TEMP_STATIC_GEN_0 = new CharacterID((byte) 1, (char) 1);
        CharacterID_TEMP_STATIC_GEN_0.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_7 == null)
            SubShapeID_TEMP_STATIC_GEN_7 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_7.internal_reset(inSubShapeID2_addr, false);
        OnCharacterContactRemoved(CharacterVirtual_TEMP_STATIC_GEN_11, CharacterID_TEMP_STATIC_GEN_0, SubShapeID_TEMP_STATIC_GEN_7);
    }

    protected void OnContactSolve(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2, Vec3 inContactPosition, Vec3 inContactNormal, Vec3 inContactVelocity, PhysicsMaterial inContactMaterial, Vec3 inCharacterVelocity, Vec3 ioNewCharacterVelocity) {
    }

    private void internal_OnContactSolve(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long inContactVelocity_addr, long inContactMaterial_addr, long inCharacterVelocity_addr, long ioNewCharacterVelocity_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_12 == null)
            CharacterVirtual_TEMP_STATIC_GEN_12 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_12.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_4 == null)
            BodyID_TEMP_STATIC_GEN_4 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_STATIC_GEN_4.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_8 == null)
            SubShapeID_TEMP_STATIC_GEN_8 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_8.internal_reset(inSubShapeID2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_10 == null)
            Vec3_TEMP_STATIC_GEN_10 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_10.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_11 == null)
            Vec3_TEMP_STATIC_GEN_11 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_11.internal_reset(inContactNormal_addr, false);
        if (Vec3_TEMP_STATIC_GEN_12 == null)
            Vec3_TEMP_STATIC_GEN_12 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_12.internal_reset(inContactVelocity_addr, false);
        if (PhysicsMaterial_TEMP_STATIC_GEN_0 == null)
            PhysicsMaterial_TEMP_STATIC_GEN_0 = new PhysicsMaterial((byte) 1, (char) 1);
        PhysicsMaterial_TEMP_STATIC_GEN_0.internal_reset(inContactMaterial_addr, false);
        if (Vec3_TEMP_STATIC_GEN_13 == null)
            Vec3_TEMP_STATIC_GEN_13 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_13.internal_reset(inCharacterVelocity_addr, false);
        if (Vec3_TEMP_STATIC_GEN_14 == null)
            Vec3_TEMP_STATIC_GEN_14 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_14.internal_reset(ioNewCharacterVelocity_addr, false);
        OnContactSolve(CharacterVirtual_TEMP_STATIC_GEN_12, BodyID_TEMP_STATIC_GEN_4, SubShapeID_TEMP_STATIC_GEN_8, Vec3_TEMP_STATIC_GEN_10, Vec3_TEMP_STATIC_GEN_11, Vec3_TEMP_STATIC_GEN_12, PhysicsMaterial_TEMP_STATIC_GEN_0, Vec3_TEMP_STATIC_GEN_13, Vec3_TEMP_STATIC_GEN_14);
    }

    protected void OnCharacterContactSolve(CharacterVirtual inCharacter, CharacterVirtual inOtherCharacter, SubShapeID inSubShapeID2, Vec3 inContactPosition, Vec3 inContactNormal, Vec3 inContactVelocity, PhysicsMaterial inContactMaterial, Vec3 inCharacterVelocity, Vec3 ioNewCharacterVelocity) {
    }

    private void internal_OnCharacterContactSolve(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long inContactVelocity_addr, long inContactMaterial_addr, long inCharacterVelocity_addr, long ioNewCharacterVelocity_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_13 == null)
            CharacterVirtual_TEMP_STATIC_GEN_13 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_13.internal_reset(inCharacter_addr, false);
        if (CharacterVirtual_TEMP_STATIC_GEN_14 == null)
            CharacterVirtual_TEMP_STATIC_GEN_14 = new CharacterVirtual((byte) 1, (char) 1);
        CharacterVirtual_TEMP_STATIC_GEN_14.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_9 == null)
            SubShapeID_TEMP_STATIC_GEN_9 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_9.internal_reset(inSubShapeID2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_15 == null)
            Vec3_TEMP_STATIC_GEN_15 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_15.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_16 == null)
            Vec3_TEMP_STATIC_GEN_16 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_16.internal_reset(inContactNormal_addr, false);
        if (Vec3_TEMP_STATIC_GEN_17 == null)
            Vec3_TEMP_STATIC_GEN_17 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_17.internal_reset(inContactVelocity_addr, false);
        if (PhysicsMaterial_TEMP_STATIC_GEN_1 == null)
            PhysicsMaterial_TEMP_STATIC_GEN_1 = new PhysicsMaterial((byte) 1, (char) 1);
        PhysicsMaterial_TEMP_STATIC_GEN_1.internal_reset(inContactMaterial_addr, false);
        if (Vec3_TEMP_STATIC_GEN_18 == null)
            Vec3_TEMP_STATIC_GEN_18 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_18.internal_reset(inCharacterVelocity_addr, false);
        if (Vec3_TEMP_STATIC_GEN_19 == null)
            Vec3_TEMP_STATIC_GEN_19 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_19.internal_reset(ioNewCharacterVelocity_addr, false);
        OnCharacterContactSolve(CharacterVirtual_TEMP_STATIC_GEN_13, CharacterVirtual_TEMP_STATIC_GEN_14, SubShapeID_TEMP_STATIC_GEN_9, Vec3_TEMP_STATIC_GEN_15, Vec3_TEMP_STATIC_GEN_16, Vec3_TEMP_STATIC_GEN_17, PhysicsMaterial_TEMP_STATIC_GEN_1, Vec3_TEMP_STATIC_GEN_18, Vec3_TEMP_STATIC_GEN_19);
    }

    /*[-JNI;-NATIVE]
return (jlong)new CharacterContactListenerJS();
*/
    public static native long internal_native_create();

    /*[-JNI;-NATIVE]
CharacterContactListenerJS* nativeObject = (CharacterContactListenerJS*)this_addr;
nativeObject->setupCallback(env, object);
*/
    public native void internal_native_setupCallback(long this_addr);
}
