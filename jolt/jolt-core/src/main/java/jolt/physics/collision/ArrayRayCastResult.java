/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision;

import jolt.idl.IDLBase;

public class ArrayRayCastResult extends IDLBase {

    private RayCastResult RayCastResult_TEMP_GEN_0;

    static public final ArrayRayCastResult T_01 = new ArrayRayCastResult((byte) 1, (char) 1);

    static public final ArrayRayCastResult T_02 = new ArrayRayCastResult((byte) 1, (char) 1);

    static public final ArrayRayCastResult T_03 = new ArrayRayCastResult((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public ArrayRayCastResult(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
ArrayRayCastResult* nativeObject = (ArrayRayCastResult*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public boolean empty() {
        return internal_native_empty(native_address);
    }

    /*[-JNI;-NATIVE]
ArrayRayCastResult* nativeObject = (ArrayRayCastResult*)this_addr;
return nativeObject->empty();
*/
    public static native boolean internal_native_empty(long this_addr);

    public int size() {
        return internal_native_size(native_address);
    }

    /*[-JNI;-NATIVE]
ArrayRayCastResult* nativeObject = (ArrayRayCastResult*)this_addr;
return nativeObject->size();
*/
    public static native int internal_native_size(long this_addr);

    public RayCastResult at(int inIndex) {
        long pointer = internal_native_at(native_address, inIndex);
        if (pointer == 0)
            return null;
        if (RayCastResult_TEMP_GEN_0 == null)
            RayCastResult_TEMP_GEN_0 = new RayCastResult((byte) 1, (char) 1);
        RayCastResult_TEMP_GEN_0.internal_reset(pointer, false);
        return RayCastResult_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
ArrayRayCastResult* nativeObject = (ArrayRayCastResult*)this_addr;
return (jlong)&nativeObject->at((int)inIndex);
*/
    public static native long internal_native_at(long this_addr, int inIndex);

    public void push_back(RayCastResult inValue) {
        internal_native_push_back(native_address, (inValue != null ? inValue.native_address : 0));
    }

    /*[-JNI;-NATIVE]
ArrayRayCastResult* nativeObject = (ArrayRayCastResult*)this_addr;
nativeObject->push_back(*((RayCastResult* )inValue_addr));
*/
    public static native void internal_native_push_back(long this_addr, long inValue_addr);

    public void reserve(int inSize) {
        internal_native_reserve(native_address, inSize);
    }

    /*[-JNI;-NATIVE]
ArrayRayCastResult* nativeObject = (ArrayRayCastResult*)this_addr;
nativeObject->reserve(inSize);
*/
    public static native void internal_native_reserve(long this_addr, int inSize);

    public void resize(int inSize) {
        internal_native_resize(native_address, inSize);
    }

    /*[-JNI;-NATIVE]
ArrayRayCastResult* nativeObject = (ArrayRayCastResult*)this_addr;
nativeObject->resize(inSize);
*/
    public static native void internal_native_resize(long this_addr, int inSize);

    public void clear() {
        internal_native_clear(native_address);
    }

    /*[-JNI;-NATIVE]
ArrayRayCastResult* nativeObject = (ArrayRayCastResult*)this_addr;
nativeObject->clear();
*/
    public static native void internal_native_clear(long this_addr);
}
