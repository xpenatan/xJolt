/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision;

import jolt.idl.IDLBase;
import jolt.math.Vec3;
import jolt.physics.collision.shape.SubShapeID;
import jolt.physics.body.BodyID;

public class CollideShapeResult extends IDLBase {

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    private SubShapeID SubShapeID_TEMP_GEN_0;

    private SubShapeID SubShapeID_TEMP_GEN_1;

    private BodyID BodyID_TEMP_GEN_0;

    private CollideShapeResultFace CollideShapeResultFace_TEMP_GEN_0;

    private CollideShapeResultFace CollideShapeResultFace_TEMP_GEN_1;

    static public final CollideShapeResult T_01 = new CollideShapeResult((byte) 1, (char) 1);

    static public final CollideShapeResult T_02 = new CollideShapeResult((byte) 1, (char) 1);

    static public final CollideShapeResult T_03 = new CollideShapeResult((byte) 1, (char) 1);

    public CollideShapeResult() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new CollideShapeResult();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public CollideShapeResult(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public Vec3 get_mContactPointOn1() {
        long pointer = internal_native_get_mContactPointOn1(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
return (jlong)&nativeObject->mContactPointOn1;
*/
    public static native long internal_native_get_mContactPointOn1(long this_addr);

    public void set_mContactPointOn1(Vec3 mContactPointOn1) {
        internal_native_set_mContactPointOn1(native_address, (mContactPointOn1 != null ? mContactPointOn1.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
nativeObject->mContactPointOn1 = *((Vec3*)mContactPointOn1_addr);
*/
    public static native void internal_native_set_mContactPointOn1(long this_addr, long mContactPointOn1_addr);

    public Vec3 get_mContactPointOn2() {
        long pointer = internal_native_get_mContactPointOn2(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
return (jlong)&nativeObject->mContactPointOn2;
*/
    public static native long internal_native_get_mContactPointOn2(long this_addr);

    public void set_mContactPointOn2(Vec3 mContactPointOn2) {
        internal_native_set_mContactPointOn2(native_address, (mContactPointOn2 != null ? mContactPointOn2.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
nativeObject->mContactPointOn2 = *((Vec3*)mContactPointOn2_addr);
*/
    public static native void internal_native_set_mContactPointOn2(long this_addr, long mContactPointOn2_addr);

    public Vec3 get_mPenetrationAxis() {
        long pointer = internal_native_get_mPenetrationAxis(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
return (jlong)&nativeObject->mPenetrationAxis;
*/
    public static native long internal_native_get_mPenetrationAxis(long this_addr);

    public void set_mPenetrationAxis(Vec3 mPenetrationAxis) {
        internal_native_set_mPenetrationAxis(native_address, (mPenetrationAxis != null ? mPenetrationAxis.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
nativeObject->mPenetrationAxis = *((Vec3*)mPenetrationAxis_addr);
*/
    public static native void internal_native_set_mPenetrationAxis(long this_addr, long mPenetrationAxis_addr);

    public float get_mPenetrationDepth() {
        return internal_native_get_mPenetrationDepth(native_address);
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
return nativeObject->mPenetrationDepth;
*/
    public static native float internal_native_get_mPenetrationDepth(long this_addr);

    public void set_mPenetrationDepth(float mPenetrationDepth) {
        internal_native_set_mPenetrationDepth(native_address, mPenetrationDepth);
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
nativeObject->mPenetrationDepth = mPenetrationDepth;
*/
    public static native void internal_native_set_mPenetrationDepth(long this_addr, float mPenetrationDepth);

    public SubShapeID get_mSubShapeID1() {
        long pointer = internal_native_get_mSubShapeID1(native_address);
        if (pointer == 0)
            return null;
        if (SubShapeID_TEMP_GEN_0 == null)
            SubShapeID_TEMP_GEN_0 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_GEN_0.internal_reset(pointer, false);
        return SubShapeID_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
return (jlong)&nativeObject->mSubShapeID1;
*/
    public static native long internal_native_get_mSubShapeID1(long this_addr);

    public void set_mSubShapeID1(SubShapeID mSubShapeID1) {
        internal_native_set_mSubShapeID1(native_address, (mSubShapeID1 != null ? mSubShapeID1.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
nativeObject->mSubShapeID1 = *((SubShapeID*)mSubShapeID1_addr);
*/
    public static native void internal_native_set_mSubShapeID1(long this_addr, long mSubShapeID1_addr);

    public SubShapeID get_mSubShapeID2() {
        long pointer = internal_native_get_mSubShapeID2(native_address);
        if (pointer == 0)
            return null;
        if (SubShapeID_TEMP_GEN_1 == null)
            SubShapeID_TEMP_GEN_1 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_GEN_1.internal_reset(pointer, false);
        return SubShapeID_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
return (jlong)&nativeObject->mSubShapeID2;
*/
    public static native long internal_native_get_mSubShapeID2(long this_addr);

    public void set_mSubShapeID2(SubShapeID mSubShapeID2) {
        internal_native_set_mSubShapeID2(native_address, (mSubShapeID2 != null ? mSubShapeID2.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
nativeObject->mSubShapeID2 = *((SubShapeID*)mSubShapeID2_addr);
*/
    public static native void internal_native_set_mSubShapeID2(long this_addr, long mSubShapeID2_addr);

    public BodyID get_mBodyID2() {
        long pointer = internal_native_get_mBodyID2(native_address);
        if (pointer == 0)
            return null;
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
return (jlong)&nativeObject->mBodyID2;
*/
    public static native long internal_native_get_mBodyID2(long this_addr);

    public void set_mBodyID2(BodyID mBodyID2) {
        internal_native_set_mBodyID2(native_address, (mBodyID2 != null ? mBodyID2.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
nativeObject->mBodyID2 = *((BodyID*)mBodyID2_addr);
*/
    public static native void internal_native_set_mBodyID2(long this_addr, long mBodyID2_addr);

    public CollideShapeResultFace get_mShape1Face() {
        long pointer = internal_native_get_mShape1Face(native_address);
        if (pointer == 0)
            return null;
        if (CollideShapeResultFace_TEMP_GEN_0 == null)
            CollideShapeResultFace_TEMP_GEN_0 = new CollideShapeResultFace((byte) 1, (char) 1);
        CollideShapeResultFace_TEMP_GEN_0.internal_reset(pointer, false);
        return CollideShapeResultFace_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
return (jlong)&nativeObject->mShape1Face;
*/
    public static native long internal_native_get_mShape1Face(long this_addr);

    public void set_mShape1Face(CollideShapeResultFace mShape1Face) {
        internal_native_set_mShape1Face(native_address, (mShape1Face != null ? mShape1Face.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
nativeObject->mShape1Face = *((CollideShapeResultFace*)mShape1Face_addr);
*/
    public static native void internal_native_set_mShape1Face(long this_addr, long mShape1Face_addr);

    public CollideShapeResultFace get_mShape2Face() {
        long pointer = internal_native_get_mShape2Face(native_address);
        if (pointer == 0)
            return null;
        if (CollideShapeResultFace_TEMP_GEN_1 == null)
            CollideShapeResultFace_TEMP_GEN_1 = new CollideShapeResultFace((byte) 1, (char) 1);
        CollideShapeResultFace_TEMP_GEN_1.internal_reset(pointer, false);
        return CollideShapeResultFace_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
return (jlong)&nativeObject->mShape2Face;
*/
    public static native long internal_native_get_mShape2Face(long this_addr);

    public void set_mShape2Face(CollideShapeResultFace mShape2Face) {
        internal_native_set_mShape2Face(native_address, (mShape2Face != null ? mShape2Face.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CollideShapeResult* nativeObject = (CollideShapeResult*)this_addr;
nativeObject->mShape2Face = *((CollideShapeResultFace*)mShape2Face_addr);
*/
    public static native void internal_native_set_mShape2Face(long this_addr, long mShape2Face_addr);
}
