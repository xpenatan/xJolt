/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision;

import jolt.idl.IDLBase;

public class CollisionGroup extends IDLBase {

    private GroupFilter GroupFilter_TEMP_GEN_0;

    static public final CollisionGroup T_01 = new CollisionGroup((byte) 1, (char) 1);

    static public final CollisionGroup T_02 = new CollisionGroup((byte) 1, (char) 1);

    static public final CollisionGroup T_03 = new CollisionGroup((byte) 1, (char) 1);

    public CollisionGroup() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new CollisionGroup();
*/
    public static native long internal_native_create();

    public CollisionGroup(GroupFilter inFilter, int inGroupID, int inSubGroupID) {
        long addr = internal_native_create_GroupFilter_int_int((inFilter != null ? inFilter.native_address : 0), inGroupID, inSubGroupID);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new CollisionGroup((GroupFilter* )inFilter_addr, inGroupID, inSubGroupID);
*/
    public static native long internal_native_create_GroupFilter_int_int(long inFilter_addr, int inGroupID, int inSubGroupID);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public CollisionGroup(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void SetGroupFilter(GroupFilter inFilter) {
        internal_native_SetGroupFilter(native_address, (inFilter != null ? inFilter.native_address : 0));
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
nativeObject->SetGroupFilter((GroupFilter* )inFilter_addr);
*/
    public static native void internal_native_SetGroupFilter(long this_addr, long inFilter_addr);

    public GroupFilter GetGroupFilter() {
        long pointer = internal_native_GetGroupFilter(native_address);
        if (pointer == 0)
            return null;
        if (GroupFilter_TEMP_GEN_0 == null)
            GroupFilter_TEMP_GEN_0 = new GroupFilter((byte) 1, (char) 1);
        GroupFilter_TEMP_GEN_0.internal_reset(pointer, false);
        return GroupFilter_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
const GroupFilter* obj = nativeObject->GetGroupFilter();
return (jlong)obj;
*/
    public static native long internal_native_GetGroupFilter(long this_addr);

    public void SetGroupID(int inGroupID) {
        internal_native_SetGroupID(native_address, inGroupID);
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
nativeObject->SetGroupID(inGroupID);
*/
    public static native void internal_native_SetGroupID(long this_addr, int inGroupID);

    public int GetGroupID() {
        return internal_native_GetGroupID(native_address);
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
return nativeObject->GetGroupID();
*/
    public static native int internal_native_GetGroupID(long this_addr);

    public void SetSubGroupID(int inSubGroupID) {
        internal_native_SetSubGroupID(native_address, inSubGroupID);
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
nativeObject->SetSubGroupID(inSubGroupID);
*/
    public static native void internal_native_SetSubGroupID(long this_addr, int inSubGroupID);

    public int GetSubGroupID() {
        return internal_native_GetSubGroupID(native_address);
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
return nativeObject->GetSubGroupID();
*/
    public static native int internal_native_GetSubGroupID(long this_addr);
}
