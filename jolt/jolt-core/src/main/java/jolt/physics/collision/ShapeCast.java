/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision;

import jolt.idl.IDLBase;
import jolt.physics.collision.shape.Shape;
import jolt.math.Vec3;
import jolt.math.Mat44;

public class ShapeCast extends IDLBase {

    private Vec3 Vec3_TEMP_GEN_0;

    private Shape Shape_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Mat44 Mat44_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_2;

    static public final ShapeCast T_01 = new ShapeCast((byte) 1, (char) 1);

    static public final ShapeCast T_02 = new ShapeCast((byte) 1, (char) 1);

    static public final ShapeCast T_03 = new ShapeCast((byte) 1, (char) 1);

    public ShapeCast(Shape inShape, Vec3 inScale, Mat44 inCenterOfMassStart, Vec3 inDirection) {
        long addr = internal_native_create_Shape_Vec3_Mat44_Vec3((inShape != null ? inShape.native_address : 0), (inScale != null ? inScale.native_address : 0), (inCenterOfMassStart != null ? inCenterOfMassStart.native_address : 0), (inDirection != null ? inDirection.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new ShapeCast((Shape* )inShape_addr, *((Vec3* )inScale_addr), *((Mat44* )inCenterOfMassStart_addr), *((Vec3* )inDirection_addr));
*/
    public static native long internal_native_create_Shape_Vec3_Mat44_Vec3(long inShape_addr, long inScale_addr, long inCenterOfMassStart_addr, long inDirection_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public ShapeCast(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
ShapeCast* nativeObject = (ShapeCast*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public Vec3 GetPointOnRay(float inFraction) {
        long pointer = internal_native_GetPointOnRay(native_address, inFraction);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
ShapeCast* nativeObject = (ShapeCast*)this_addr;
static Vec3 copy_addr;
copy_addr = nativeObject->GetPointOnRay((float)inFraction);
return (jlong)&copy_addr;*/
    public static native long internal_native_GetPointOnRay(long this_addr, float inFraction);

    public Shape get_mShape() {
        long pointer = internal_native_get_mShape(native_address);
        if (pointer == 0)
            return null;
        if (Shape_TEMP_GEN_0 == null)
            Shape_TEMP_GEN_0 = new Shape((byte) 1, (char) 1);
        Shape_TEMP_GEN_0.internal_reset(pointer, false);
        return Shape_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
ShapeCast* nativeObject = (ShapeCast*)this_addr;
const Shape* attr = nativeObject->mShape;
return (jlong)attr;
*/
    public static native long internal_native_get_mShape(long this_addr);

    public Vec3 get_mScale() {
        long pointer = internal_native_get_mScale(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
ShapeCast* nativeObject = (ShapeCast*)this_addr;
return (jlong)&nativeObject->mScale;
*/
    public static native long internal_native_get_mScale(long this_addr);

    public Mat44 get_mCenterOfMassStart() {
        long pointer = internal_native_get_mCenterOfMassStart(native_address);
        if (pointer == 0)
            return null;
        if (Mat44_TEMP_GEN_0 == null)
            Mat44_TEMP_GEN_0 = new Mat44((byte) 1, (char) 1);
        Mat44_TEMP_GEN_0.internal_reset(pointer, false);
        return Mat44_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
ShapeCast* nativeObject = (ShapeCast*)this_addr;
return (jlong)&nativeObject->mCenterOfMassStart;
*/
    public static native long internal_native_get_mCenterOfMassStart(long this_addr);

    public Vec3 get_mDirection() {
        long pointer = internal_native_get_mDirection(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-JNI;-NATIVE]
ShapeCast* nativeObject = (ShapeCast*)this_addr;
return (jlong)&nativeObject->mDirection;
*/
    public static native long internal_native_get_mDirection(long this_addr);
}
