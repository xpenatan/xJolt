/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision.shape;

import jolt.geometry.Plane;
import jolt.physics.collision.PhysicsMaterial;

public class PlaneShape extends Shape {

    private Plane Plane_TEMP_GEN_0;

    static public final PlaneShape T_01 = new PlaneShape((byte) 1, (char) 1);

    static public final PlaneShape T_02 = new PlaneShape((byte) 1, (char) 1);

    static public final PlaneShape T_03 = new PlaneShape((byte) 1, (char) 1);

    public PlaneShape(Plane inPlane, PhysicsMaterial inMaterial, float inHalfExtent) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_Plane_PhysicsMaterial_float((inPlane != null ? inPlane.native_address : 0), (inMaterial != null ? inMaterial.native_address : 0), inHalfExtent);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new PlaneShape(*((Plane* )inPlane_addr), (PhysicsMaterial* )inMaterial_addr, (float)inHalfExtent);
*/
    public static native long internal_native_create_Plane_PhysicsMaterial_float(long inPlane_addr, long inMaterial_addr, float inHalfExtent);

    public PlaneShape(Plane inPlane, PhysicsMaterial inMaterial) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_Plane_PhysicsMaterial((inPlane != null ? inPlane.native_address : 0), (inMaterial != null ? inMaterial.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new PlaneShape(*((Plane* )inPlane_addr), (PhysicsMaterial* )inMaterial_addr);
*/
    public static native long internal_native_create_Plane_PhysicsMaterial(long inPlane_addr, long inMaterial_addr);

    public PlaneShape(Plane inPlane) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_Plane((inPlane != null ? inPlane.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new PlaneShape(*((Plane* )inPlane_addr));
*/
    public static native long internal_native_create_Plane(long inPlane_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public PlaneShape(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
PlaneShape* nativeObject = (PlaneShape*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void SetMaterial(PhysicsMaterial inMaterial) {
        internal_native_SetMaterial(native_address, (inMaterial != null ? inMaterial.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PlaneShape* nativeObject = (PlaneShape*)this_addr;
nativeObject->SetMaterial((PhysicsMaterial* )inMaterial_addr);
*/
    public static native void internal_native_SetMaterial(long this_addr, long inMaterial_addr);

    public Plane GetPlane() {
        long pointer = internal_native_GetPlane(native_address);
        if (pointer == 0)
            return null;
        if (Plane_TEMP_GEN_0 == null)
            Plane_TEMP_GEN_0 = new Plane((byte) 1, (char) 1);
        Plane_TEMP_GEN_0.internal_reset(pointer, false);
        return Plane_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PlaneShape* nativeObject = (PlaneShape*)this_addr;
static Plane copy_addr;
copy_addr = nativeObject->GetPlane();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetPlane(long this_addr);

    public float GetHalfExtent() {
        return internal_native_GetHalfExtent(native_address);
    }

    /*[-JNI;-NATIVE]
PlaneShape* nativeObject = (PlaneShape*)this_addr;
return nativeObject->GetHalfExtent();
*/
    public static native float internal_native_GetHalfExtent(long this_addr);
}
