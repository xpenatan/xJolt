/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision.shape;

import jolt.geometry.Plane;
import jolt.physics.collision.PhysicsMaterial;

public class PlaneShapeSettings extends ShapeSettings {

    private Plane Plane_TEMP_GEN_0;

    private PhysicsMaterial PhysicsMaterial_TEMP_GEN_0;

    static public final PlaneShapeSettings T_01 = new PlaneShapeSettings((byte) 1, (char) 1);

    static public final PlaneShapeSettings T_02 = new PlaneShapeSettings((byte) 1, (char) 1);

    static public final PlaneShapeSettings T_03 = new PlaneShapeSettings((byte) 1, (char) 1);

    public PlaneShapeSettings(Plane inPlane, PhysicsMaterial inMaterial, float inHalfExtent) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_Plane_PhysicsMaterial_float((inPlane != null ? inPlane.native_address : 0), (inMaterial != null ? inMaterial.native_address : 0), inHalfExtent);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new PlaneShapeSettings(*((Plane* )inPlane_addr), (PhysicsMaterial* )inMaterial_addr, (float)inHalfExtent);
*/
    public static native long internal_native_create_Plane_PhysicsMaterial_float(long inPlane_addr, long inMaterial_addr, float inHalfExtent);

    public PlaneShapeSettings(Plane inPlane, PhysicsMaterial inMaterial) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_Plane_PhysicsMaterial((inPlane != null ? inPlane.native_address : 0), (inMaterial != null ? inMaterial.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new PlaneShapeSettings(*((Plane* )inPlane_addr), (PhysicsMaterial* )inMaterial_addr);
*/
    public static native long internal_native_create_Plane_PhysicsMaterial(long inPlane_addr, long inMaterial_addr);

    public PlaneShapeSettings(Plane inPlane) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_Plane((inPlane != null ? inPlane.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new PlaneShapeSettings(*((Plane* )inPlane_addr));
*/
    public static native long internal_native_create_Plane(long inPlane_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public PlaneShapeSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
PlaneShapeSettings* nativeObject = (PlaneShapeSettings*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public Plane get_mPlane() {
        long pointer = internal_native_get_mPlane(native_address);
        if (pointer == 0)
            return null;
        if (Plane_TEMP_GEN_0 == null)
            Plane_TEMP_GEN_0 = new Plane((byte) 1, (char) 1);
        Plane_TEMP_GEN_0.internal_reset(pointer, false);
        return Plane_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PlaneShapeSettings* nativeObject = (PlaneShapeSettings*)this_addr;
return (jlong)&nativeObject->mPlane;
*/
    public static native long internal_native_get_mPlane(long this_addr);

    public void set_mPlane(Plane mPlane) {
        internal_native_set_mPlane(native_address, (mPlane != null ? mPlane.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PlaneShapeSettings* nativeObject = (PlaneShapeSettings*)this_addr;
nativeObject->mPlane = *((Plane*)mPlane_addr);
*/
    public static native void internal_native_set_mPlane(long this_addr, long mPlane_addr);

    public PhysicsMaterial get_mMaterial() {
        long pointer = internal_native_get_mMaterial(native_address);
        if (pointer == 0)
            return null;
        if (PhysicsMaterial_TEMP_GEN_0 == null)
            PhysicsMaterial_TEMP_GEN_0 = new PhysicsMaterial((byte) 1, (char) 1);
        PhysicsMaterial_TEMP_GEN_0.internal_reset(pointer, false);
        return PhysicsMaterial_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PlaneShapeSettings* nativeObject = (PlaneShapeSettings*)this_addr;
const PhysicsMaterial* attr = nativeObject->mMaterial;
return (jlong)attr;
*/
    public static native long internal_native_get_mMaterial(long this_addr);

    public void set_mMaterial(PhysicsMaterial mMaterial) {
        internal_native_set_mMaterial(native_address, (mMaterial != null ? mMaterial.native_address : 0));
    }

    /*[-JNI;-NATIVE]
PlaneShapeSettings* nativeObject = (PlaneShapeSettings*)this_addr;
nativeObject->mMaterial = (PhysicsMaterial*)mMaterial_addr;
*/
    public static native void internal_native_set_mMaterial(long this_addr, long mMaterial_addr);

    public float get_mHalfExtent() {
        return internal_native_get_mHalfExtent(native_address);
    }

    /*[-JNI;-NATIVE]
PlaneShapeSettings* nativeObject = (PlaneShapeSettings*)this_addr;
return nativeObject->mHalfExtent;
*/
    public static native float internal_native_get_mHalfExtent(long this_addr);

    public void set_mHalfExtent(float mHalfExtent) {
        internal_native_set_mHalfExtent(native_address, mHalfExtent);
    }

    /*[-JNI;-NATIVE]
PlaneShapeSettings* nativeObject = (PlaneShapeSettings*)this_addr;
nativeObject->mHalfExtent = mHalfExtent;
*/
    public static native void internal_native_set_mHalfExtent(long this_addr, float mHalfExtent);
}
