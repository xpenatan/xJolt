/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision.shape;

import jolt.physics.collision.PhysicsMaterial;

public class SphereShapeSettings extends ConvexShapeSettings {

    static public final SphereShapeSettings T_01 = new SphereShapeSettings((byte) 1, (char) 1);

    static public final SphereShapeSettings T_02 = new SphereShapeSettings((byte) 1, (char) 1);

    static public final SphereShapeSettings T_03 = new SphereShapeSettings((byte) 1, (char) 1);

    public SphereShapeSettings(float inRadius, PhysicsMaterial inMaterial) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_float_PhysicsMaterial(inRadius, (inMaterial != null ? inMaterial.native_address : 0));
        internal_reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new SphereShapeSettings((float)inRadius, (PhysicsMaterial* )inMaterial_addr);
*/
    public static native long internal_native_create_float_PhysicsMaterial(float inRadius, long inMaterial_addr);

    public SphereShapeSettings(float inRadius) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_float(inRadius);
        internal_reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new SphereShapeSettings((float)inRadius);
*/
    public static native long internal_native_create_float(float inRadius);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SphereShapeSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public float get_mRadius() {
        return internal_native_get_mRadius(native_address);
    }

    /*[-JNI;-NATIVE]
SphereShapeSettings* nativeObject = (SphereShapeSettings*)this_addr;
return nativeObject->mRadius;
*/
    public static native float internal_native_get_mRadius(long this_addr);

    public void set_mRadius(float mRadius) {
        internal_native_set_mRadius(native_address, mRadius);
    }

    /*[-JNI;-NATIVE]
SphereShapeSettings* nativeObject = (SphereShapeSettings*)this_addr;
nativeObject->mRadius = mRadius;
*/
    public static native void internal_native_set_mRadius(long this_addr, float mRadius);
}
