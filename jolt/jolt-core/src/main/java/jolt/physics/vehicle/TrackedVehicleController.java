/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.vehicle;

public class TrackedVehicleController extends VehicleController {

    private VehicleEngine VehicleEngine_TEMP_GEN_0;

    private VehicleTransmission VehicleTransmission_TEMP_GEN_0;

    static public final TrackedVehicleController T_01 = new TrackedVehicleController((byte) 1, (char) 1);

    static public final TrackedVehicleController T_02 = new TrackedVehicleController((byte) 1, (char) 1);

    static public final TrackedVehicleController T_03 = new TrackedVehicleController((byte) 1, (char) 1);

    public TrackedVehicleController(TrackedVehicleControllerSettings inSettings, VehicleConstraint inConstraint) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_TrackedVehicleControllerSettings_VehicleConstraint((inSettings != null ? inSettings.native_address : 0), (inConstraint != null ? inConstraint.native_address : 0));
        internal_reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new TrackedVehicleController(*((TrackedVehicleControllerSettings* )inSettings_addr), *((VehicleConstraint* )inConstraint_addr));
*/
    public static native long internal_native_create_TrackedVehicleControllerSettings_VehicleConstraint(long inSettings_addr, long inConstraint_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public TrackedVehicleController(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public void SetDriverInput(float inForward, float inLeftRatio, float inRightRatio, float inBrake) {
        internal_native_SetDriverInput(native_address, inForward, inLeftRatio, inRightRatio, inBrake);
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
nativeObject->SetDriverInput((float)inForward, (float)inLeftRatio, (float)inRightRatio, (float)inBrake);
*/
    public static native void internal_native_SetDriverInput(long this_addr, float inForward, float inLeftRatio, float inRightRatio, float inBrake);

    public void SetForwardInput(float inForward) {
        internal_native_SetForwardInput(native_address, inForward);
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
nativeObject->SetForwardInput((float)inForward);
*/
    public static native void internal_native_SetForwardInput(long this_addr, float inForward);

    public float GetForwardInput() {
        return internal_native_GetForwardInput(native_address);
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
return nativeObject->GetForwardInput();
*/
    public static native float internal_native_GetForwardInput(long this_addr);

    public void SetLeftRatio(float inLeftRatio) {
        internal_native_SetLeftRatio(native_address, inLeftRatio);
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
nativeObject->SetLeftRatio((float)inLeftRatio);
*/
    public static native void internal_native_SetLeftRatio(long this_addr, float inLeftRatio);

    public float GetLeftRatio() {
        return internal_native_GetLeftRatio(native_address);
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
return nativeObject->GetLeftRatio();
*/
    public static native float internal_native_GetLeftRatio(long this_addr);

    public void SetRightRatio(float inRightRatio) {
        internal_native_SetRightRatio(native_address, inRightRatio);
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
nativeObject->SetRightRatio((float)inRightRatio);
*/
    public static native void internal_native_SetRightRatio(long this_addr, float inRightRatio);

    public float GetRightRatio() {
        return internal_native_GetRightRatio(native_address);
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
return nativeObject->GetRightRatio();
*/
    public static native float internal_native_GetRightRatio(long this_addr);

    public void SetBrakeInput(float inBrake) {
        internal_native_SetBrakeInput(native_address, inBrake);
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
nativeObject->SetBrakeInput((float)inBrake);
*/
    public static native void internal_native_SetBrakeInput(long this_addr, float inBrake);

    public float GetBrakeInput() {
        return internal_native_GetBrakeInput(native_address);
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
return nativeObject->GetBrakeInput();
*/
    public static native float internal_native_GetBrakeInput(long this_addr);

    public VehicleEngine GetEngine() {
        long pointer = internal_native_GetEngine(native_address);
        if (pointer == 0)
            return null;
        if (VehicleEngine_TEMP_GEN_0 == null)
            VehicleEngine_TEMP_GEN_0 = new VehicleEngine((byte) 1, (char) 1);
        VehicleEngine_TEMP_GEN_0.internal_reset(pointer, false);
        return VehicleEngine_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
return (jlong)&nativeObject->GetEngine();
*/
    public static native long internal_native_GetEngine(long this_addr);

    public VehicleTransmission GetTransmission() {
        long pointer = internal_native_GetTransmission(native_address);
        if (pointer == 0)
            return null;
        if (VehicleTransmission_TEMP_GEN_0 == null)
            VehicleTransmission_TEMP_GEN_0 = new VehicleTransmission((byte) 1, (char) 1);
        VehicleTransmission_TEMP_GEN_0.internal_reset(pointer, false);
        return VehicleTransmission_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
TrackedVehicleController* nativeObject = (TrackedVehicleController*)this_addr;
return (jlong)&nativeObject->GetTransmission();
*/
    public static native long internal_native_GetTransmission(long this_addr);
}
