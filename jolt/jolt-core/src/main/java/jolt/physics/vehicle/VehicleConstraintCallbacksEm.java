/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.vehicle;

import jolt.idl.IDLBase;
import jolt.enums.ETireFrictionDirection;
import jolt.physics.body.Body;
import jolt.physics.collision.shape.SubShapeID;
import jolt.physics.PhysicsStepListenerContext;

public class VehicleConstraintCallbacksEm extends IDLBase {

    static private Body Body_TEMP_STATIC_GEN_0;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_0;

    static private VehicleConstraint VehicleConstraint_TEMP_STATIC_GEN_0;

    static private PhysicsStepListenerContext PhysicsStepListenerContext_TEMP_STATIC_GEN_0;

    static private VehicleConstraint VehicleConstraint_TEMP_STATIC_GEN_1;

    static private PhysicsStepListenerContext PhysicsStepListenerContext_TEMP_STATIC_GEN_1;

    static private VehicleConstraint VehicleConstraint_TEMP_STATIC_GEN_2;

    static private PhysicsStepListenerContext PhysicsStepListenerContext_TEMP_STATIC_GEN_2;

    /*[-JNI;-NATIVE]
class VehicleConstraintCallbacksJS : public VehicleConstraintCallbacksEm {
private:
	JNIEnv* env;
	jobject obj;
public:
	inline static jclass jClassID = 0;
	inline static jmethodID GetCombinedFrictionIIFJJ_ID = 0;
	inline static jmethodID OnPreStepCallbackJJ_ID = 0;
	inline static jmethodID OnPostCollideCallbackJJ_ID = 0;
	inline static jmethodID OnPostStepCallbackJJ_ID = 0;

void setupCallback(JNIEnv* env, jobject obj) {
	this->env = env;
	this->obj = env->NewGlobalRef(obj);
	if(VehicleConstraintCallbacksJS::jClassID == 0) {
		VehicleConstraintCallbacksJS::jClassID = (jclass)env->NewGlobalRef(env->GetObjectClass(obj));
		VehicleConstraintCallbacksJS::GetCombinedFrictionIIFJJ_ID = env->GetMethodID(jClassID, "internal_GetCombinedFriction", "(IIFJJ)F");
		VehicleConstraintCallbacksJS::OnPreStepCallbackJJ_ID = env->GetMethodID(jClassID, "internal_OnPreStepCallback", "(JJ)V");
		VehicleConstraintCallbacksJS::OnPostCollideCallbackJJ_ID = env->GetMethodID(jClassID, "internal_OnPostCollideCallback", "(JJ)V");
		VehicleConstraintCallbacksJS::OnPostStepCallbackJJ_ID = env->GetMethodID(jClassID, "internal_OnPostStepCallback", "(JJ)V");
	}
}
virtual float GetCombinedFriction(unsigned int inWheelIndex, ETireFrictionDirection inTireFrictionDirection, float inTireFriction, const Body& inBody2, const SubShapeID& inSubShapeID2) {
   return env->CallFloatMethod(obj, VehicleConstraintCallbacksJS::GetCombinedFrictionIIFJJ_ID, inWheelIndex, inTireFrictionDirection, inTireFriction, (jlong)&inBody2, (jlong)&inSubShapeID2);
}
virtual void OnPreStepCallback(VehicleConstraint& inVehicle, const PhysicsStepListenerContext& inContext) {
   env->CallVoidMethod(obj, VehicleConstraintCallbacksJS::OnPreStepCallbackJJ_ID, (jlong)&inVehicle, (jlong)&inContext);
}
virtual void OnPostCollideCallback(VehicleConstraint& inVehicle, const PhysicsStepListenerContext& inContext) {
   env->CallVoidMethod(obj, VehicleConstraintCallbacksJS::OnPostCollideCallbackJJ_ID, (jlong)&inVehicle, (jlong)&inContext);
}
virtual void OnPostStepCallback(VehicleConstraint& inVehicle, const PhysicsStepListenerContext& inContext) {
   env->CallVoidMethod(obj, VehicleConstraintCallbacksJS::OnPostStepCallbackJJ_ID, (jlong)&inVehicle, (jlong)&inContext);
}
};
*/
    @Deprecated()
    public VehicleConstraintCallbacksEm(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
VehicleConstraintCallbacksJS* nativeObject = (VehicleConstraintCallbacksJS*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void SetVehicleConstraint(VehicleConstraint inConstraint) {
        internal_native_SetVehicleConstraint(native_address, (inConstraint != null ? inConstraint.native_address : 0));
    }

    /*[-JNI;-NATIVE]
VehicleConstraintCallbacksEm* nativeObject = (VehicleConstraintCallbacksEm*)this_addr;
nativeObject->SetVehicleConstraint(*((VehicleConstraint* )inConstraint_addr));
*/
    public static native void internal_native_SetVehicleConstraint(long this_addr, long inConstraint_addr);

    public VehicleConstraintCallbacksEm() {
        long addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        internal_native_setupCallback(native_address);
    }

    protected float GetCombinedFriction(int inWheelIndex, ETireFrictionDirection inTireFrictionDirection, float inTireFriction, Body inBody2, SubShapeID inSubShapeID2) {
        return 0;
    }

    private float internal_GetCombinedFriction(int inWheelIndex, int inTireFrictionDirection_addr, float inTireFriction, long inBody2_addr, long inSubShapeID2_addr) {
        if (Body_TEMP_STATIC_GEN_0 == null)
            Body_TEMP_STATIC_GEN_0 = new Body((byte) 1, (char) 1);
        Body_TEMP_STATIC_GEN_0.internal_reset(inBody2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_0 == null)
            SubShapeID_TEMP_STATIC_GEN_0 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_0.internal_reset(inSubShapeID2_addr, false);
        return GetCombinedFriction(inWheelIndex, ETireFrictionDirection.MAP.get(inTireFrictionDirection_addr), inTireFriction, Body_TEMP_STATIC_GEN_0, SubShapeID_TEMP_STATIC_GEN_0);
    }

    protected void OnPreStepCallback(VehicleConstraint inVehicle, PhysicsStepListenerContext inContext) {
    }

    private void internal_OnPreStepCallback(long inVehicle_addr, long inContext_addr) {
        if (VehicleConstraint_TEMP_STATIC_GEN_0 == null)
            VehicleConstraint_TEMP_STATIC_GEN_0 = new VehicleConstraint((byte) 1, (char) 1);
        VehicleConstraint_TEMP_STATIC_GEN_0.internal_reset(inVehicle_addr, false);
        if (PhysicsStepListenerContext_TEMP_STATIC_GEN_0 == null)
            PhysicsStepListenerContext_TEMP_STATIC_GEN_0 = new PhysicsStepListenerContext((byte) 1, (char) 1);
        PhysicsStepListenerContext_TEMP_STATIC_GEN_0.internal_reset(inContext_addr, false);
        OnPreStepCallback(VehicleConstraint_TEMP_STATIC_GEN_0, PhysicsStepListenerContext_TEMP_STATIC_GEN_0);
    }

    protected void OnPostCollideCallback(VehicleConstraint inVehicle, PhysicsStepListenerContext inContext) {
    }

    private void internal_OnPostCollideCallback(long inVehicle_addr, long inContext_addr) {
        if (VehicleConstraint_TEMP_STATIC_GEN_1 == null)
            VehicleConstraint_TEMP_STATIC_GEN_1 = new VehicleConstraint((byte) 1, (char) 1);
        VehicleConstraint_TEMP_STATIC_GEN_1.internal_reset(inVehicle_addr, false);
        if (PhysicsStepListenerContext_TEMP_STATIC_GEN_1 == null)
            PhysicsStepListenerContext_TEMP_STATIC_GEN_1 = new PhysicsStepListenerContext((byte) 1, (char) 1);
        PhysicsStepListenerContext_TEMP_STATIC_GEN_1.internal_reset(inContext_addr, false);
        OnPostCollideCallback(VehicleConstraint_TEMP_STATIC_GEN_1, PhysicsStepListenerContext_TEMP_STATIC_GEN_1);
    }

    protected void OnPostStepCallback(VehicleConstraint inVehicle, PhysicsStepListenerContext inContext) {
    }

    private void internal_OnPostStepCallback(long inVehicle_addr, long inContext_addr) {
        if (VehicleConstraint_TEMP_STATIC_GEN_2 == null)
            VehicleConstraint_TEMP_STATIC_GEN_2 = new VehicleConstraint((byte) 1, (char) 1);
        VehicleConstraint_TEMP_STATIC_GEN_2.internal_reset(inVehicle_addr, false);
        if (PhysicsStepListenerContext_TEMP_STATIC_GEN_2 == null)
            PhysicsStepListenerContext_TEMP_STATIC_GEN_2 = new PhysicsStepListenerContext((byte) 1, (char) 1);
        PhysicsStepListenerContext_TEMP_STATIC_GEN_2.internal_reset(inContext_addr, false);
        OnPostStepCallback(VehicleConstraint_TEMP_STATIC_GEN_2, PhysicsStepListenerContext_TEMP_STATIC_GEN_2);
    }

    /*[-JNI;-NATIVE]
return (jlong)new VehicleConstraintCallbacksJS();
*/
    public static native long internal_native_create();

    /*[-JNI;-NATIVE]
VehicleConstraintCallbacksJS* nativeObject = (VehicleConstraintCallbacksJS*)this_addr;
nativeObject->setupCallback(env, object);
*/
    public native void internal_native_setupCallback(long this_addr);
}
