/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.vehicle;

public class WheeledVehicleControllerSettings extends VehicleControllerSettings {

    private VehicleEngineSettings VehicleEngineSettings_TEMP_GEN_0;

    private VehicleTransmissionSettings VehicleTransmissionSettings_TEMP_GEN_0;

    private ArrayVehicleDifferentialSettings ArrayVehicleDifferentialSettings_TEMP_GEN_0;

    static public final WheeledVehicleControllerSettings T_01 = new WheeledVehicleControllerSettings((byte) 1, (char) 1);

    static public final WheeledVehicleControllerSettings T_02 = new WheeledVehicleControllerSettings((byte) 1, (char) 1);

    static public final WheeledVehicleControllerSettings T_03 = new WheeledVehicleControllerSettings((byte) 1, (char) 1);

    public WheeledVehicleControllerSettings() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        internal_reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new WheeledVehicleControllerSettings();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public WheeledVehicleControllerSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public VehicleEngineSettings get_mEngine() {
        long pointer = internal_native_get_mEngine(native_address);
        if (pointer == 0)
            return null;
        if (VehicleEngineSettings_TEMP_GEN_0 == null)
            VehicleEngineSettings_TEMP_GEN_0 = new VehicleEngineSettings((byte) 1, (char) 1);
        VehicleEngineSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return VehicleEngineSettings_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
WheeledVehicleControllerSettings* nativeObject = (WheeledVehicleControllerSettings*)this_addr;
return (jlong)&nativeObject->mEngine;
*/
    public static native long internal_native_get_mEngine(long this_addr);

    public void set_mEngine(VehicleEngineSettings mEngine) {
        internal_native_set_mEngine(native_address, (mEngine != null ? mEngine.native_address : 0));
    }

    /*[-JNI;-NATIVE]
WheeledVehicleControllerSettings* nativeObject = (WheeledVehicleControllerSettings*)this_addr;
nativeObject->mEngine = *((VehicleEngineSettings*)mEngine_addr);
*/
    public static native void internal_native_set_mEngine(long this_addr, long mEngine_addr);

    public VehicleTransmissionSettings get_mTransmission() {
        long pointer = internal_native_get_mTransmission(native_address);
        if (pointer == 0)
            return null;
        if (VehicleTransmissionSettings_TEMP_GEN_0 == null)
            VehicleTransmissionSettings_TEMP_GEN_0 = new VehicleTransmissionSettings((byte) 1, (char) 1);
        VehicleTransmissionSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return VehicleTransmissionSettings_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
WheeledVehicleControllerSettings* nativeObject = (WheeledVehicleControllerSettings*)this_addr;
return (jlong)&nativeObject->mTransmission;
*/
    public static native long internal_native_get_mTransmission(long this_addr);

    public void set_mTransmission(VehicleTransmissionSettings mTransmission) {
        internal_native_set_mTransmission(native_address, (mTransmission != null ? mTransmission.native_address : 0));
    }

    /*[-JNI;-NATIVE]
WheeledVehicleControllerSettings* nativeObject = (WheeledVehicleControllerSettings*)this_addr;
nativeObject->mTransmission = *((VehicleTransmissionSettings*)mTransmission_addr);
*/
    public static native void internal_native_set_mTransmission(long this_addr, long mTransmission_addr);

    public ArrayVehicleDifferentialSettings get_mDifferentials() {
        long pointer = internal_native_get_mDifferentials(native_address);
        if (pointer == 0)
            return null;
        if (ArrayVehicleDifferentialSettings_TEMP_GEN_0 == null)
            ArrayVehicleDifferentialSettings_TEMP_GEN_0 = new ArrayVehicleDifferentialSettings((byte) 1, (char) 1);
        ArrayVehicleDifferentialSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return ArrayVehicleDifferentialSettings_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
WheeledVehicleControllerSettings* nativeObject = (WheeledVehicleControllerSettings*)this_addr;
return (jlong)&nativeObject->mDifferentials;
*/
    public static native long internal_native_get_mDifferentials(long this_addr);

    public void set_mDifferentials(ArrayVehicleDifferentialSettings mDifferentials) {
        internal_native_set_mDifferentials(native_address, (mDifferentials != null ? mDifferentials.native_address : 0));
    }

    /*[-JNI;-NATIVE]
WheeledVehicleControllerSettings* nativeObject = (WheeledVehicleControllerSettings*)this_addr;
nativeObject->mDifferentials = *((ArrayVehicleDifferentialSettings*)mDifferentials_addr);
*/
    public static native void internal_native_set_mDifferentials(long this_addr, long mDifferentials_addr);

    public float get_mDifferentialLimitedSlipRatio() {
        return internal_native_get_mDifferentialLimitedSlipRatio(native_address);
    }

    /*[-JNI;-NATIVE]
WheeledVehicleControllerSettings* nativeObject = (WheeledVehicleControllerSettings*)this_addr;
return nativeObject->mDifferentialLimitedSlipRatio;
*/
    public static native float internal_native_get_mDifferentialLimitedSlipRatio(long this_addr);

    public void set_mDifferentialLimitedSlipRatio(float mDifferentialLimitedSlipRatio) {
        internal_native_set_mDifferentialLimitedSlipRatio(native_address, mDifferentialLimitedSlipRatio);
    }

    /*[-JNI;-NATIVE]
WheeledVehicleControllerSettings* nativeObject = (WheeledVehicleControllerSettings*)this_addr;
nativeObject->mDifferentialLimitedSlipRatio = mDifferentialLimitedSlipRatio;
*/
    public static native void internal_native_set_mDifferentialLimitedSlipRatio(long this_addr, float mDifferentialLimitedSlipRatio);
}
