/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.renderer;

import jolt.idl.IDLBase;

public class DebugArrayTriangle extends IDLBase {

    private DebugRendererTriangle DebugRendererTriangle_TEMP_GEN_0;

    static public final DebugArrayTriangle T_01 = new DebugArrayTriangle((byte) 1, (char) 1);

    static public final DebugArrayTriangle T_02 = new DebugArrayTriangle((byte) 1, (char) 1);

    static public final DebugArrayTriangle T_03 = new DebugArrayTriangle((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public DebugArrayTriangle(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
DebugArrayTriangle* nativeObject = (DebugArrayTriangle*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public int size() {
        return internal_native_size(native_address);
    }

    /*[-JNI;-NATIVE]
DebugArrayTriangle* nativeObject = (DebugArrayTriangle*)this_addr;
return nativeObject->size();
*/
    public static native int internal_native_size(long this_addr);

    public DebugRendererTriangle at(int inIndex) {
        long pointer = internal_native_at(native_address, inIndex);
        if (pointer == 0)
            return null;
        if (DebugRendererTriangle_TEMP_GEN_0 == null)
            DebugRendererTriangle_TEMP_GEN_0 = new DebugRendererTriangle((byte) 1, (char) 1);
        DebugRendererTriangle_TEMP_GEN_0.internal_reset(pointer, false);
        return DebugRendererTriangle_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
DebugArrayTriangle* nativeObject = (DebugArrayTriangle*)this_addr;
return (jlong)&nativeObject->at((int)inIndex);
*/
    public static native long internal_native_at(long this_addr, int inIndex);
}
