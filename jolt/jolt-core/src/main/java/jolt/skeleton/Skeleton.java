/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.skeleton;

import jolt.idl.IDLBase;
import jolt.idl.helper.IDLString;

public class Skeleton extends IDLBase {

    static public final Skeleton T_01 = new Skeleton((byte) 1, (char) 1);

    static public final Skeleton T_02 = new Skeleton((byte) 1, (char) 1);

    static public final Skeleton T_03 = new Skeleton((byte) 1, (char) 1);

    public Skeleton() {
        long addr = internal_native_create();
        internal_reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new Skeleton();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Skeleton(byte b, char c) {
    }

    public int AddJoint(IDLString inName, int inParentIndex) {
        return internal_native_AddJoint(native_address, (inName != null ? inName.native_address : 0), inParentIndex);
    }

    /*[-JNI;-NATIVE]
Skeleton* nativeObject = (Skeleton*)this_addr;
return nativeObject->AddJoint(*((IDLString* )inName_addr), (int)inParentIndex);
*/
    public static native int internal_native_AddJoint(long this_addr, long inName_addr, int inParentIndex);

    public int GetJointCount() {
        return internal_native_GetJointCount(native_address);
    }

    /*[-JNI;-NATIVE]
Skeleton* nativeObject = (Skeleton*)this_addr;
return nativeObject->GetJointCount();
*/
    public static native int internal_native_GetJointCount(long this_addr);

    public boolean AreJointsCorrectlyOrdered() {
        return internal_native_AreJointsCorrectlyOrdered(native_address);
    }

    /*[-JNI;-NATIVE]
Skeleton* nativeObject = (Skeleton*)this_addr;
return nativeObject->AreJointsCorrectlyOrdered();
*/
    public static native boolean internal_native_AreJointsCorrectlyOrdered(long this_addr);

    public void CalculateParentJointIndices() {
        internal_native_CalculateParentJointIndices(native_address);
    }

    /*[-JNI;-NATIVE]
Skeleton* nativeObject = (Skeleton*)this_addr;
nativeObject->CalculateParentJointIndices();
*/
    public static native void internal_native_CalculateParentJointIndices(long this_addr);
}
