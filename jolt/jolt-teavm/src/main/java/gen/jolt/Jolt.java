/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt;

import gen.jolt.idl.IDLBase;
import gen.jolt.physics.PhysicsSystem;
import gen.jolt.core.Factory;
import gen.jolt.core.TempAllocatorImpl;
import gen.jolt.core.JobSystemThreadPool;
import gen.jolt.physics.body.BodyCreationSettings;
import gen.jolt.physics.collision.shape.ShapeSettings;
import gen.jolt.math.Vec3;
import gen.jolt.math.Quat;
import gen.jolt.enums.EMotionType;
import gen.jolt.physics.collision.shape.Shape;
import gen.jolt.math.Mat44;
import gen.jolt.math.Vec4;
import gen.jolt.math.Float3;

public class Jolt extends IDLBase {

    static private JobSystemThreadPool JobSystemThreadPool_TEMP_STATIC_GEN_0;

    static private JobSystemThreadPool JobSystemThreadPool_TEMP_STATIC_GEN_1;

    static private JobSystemThreadPool JobSystemThreadPool_TEMP_STATIC_GEN_2;

    static public final Jolt T_01 = new Jolt((byte) 1, (char) 1);

    static public final Jolt T_02 = new Jolt((byte) 1, (char) 1);

    static public final Jolt T_03 = new Jolt((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Jolt(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Jolt);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Jolt);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public static PhysicsSystem New_PhysicsSystem() {
        int pointer = internal_native_New_PhysicsSystem();
        if (pointer == 0)
            return null;
        PhysicsSystem PhysicsSystem_NEW = new PhysicsSystem((byte) 1, (char) 1);
        PhysicsSystem_NEW.internal_reset(pointer, true);
        return PhysicsSystem_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_PhysicsSystem();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jolt.Jolt.prototype.New_PhysicsSystem();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_PhysicsSystem();

    public static Factory New_Factory() {
        int pointer = internal_native_New_Factory();
        if (pointer == 0)
            return null;
        Factory Factory_NEW = new Factory((byte) 1, (char) 1);
        Factory_NEW.internal_reset(pointer, true);
        return Factory_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Factory();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jolt.Jolt.prototype.New_Factory();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Factory();

    public static TempAllocatorImpl New_TempAllocatorImpl(int inSize) {
        int pointer = internal_native_New_TempAllocatorImpl(inSize);
        if (pointer == 0)
            return null;
        TempAllocatorImpl TempAllocatorImpl_NEW = new TempAllocatorImpl((byte) 1, (char) 1);
        TempAllocatorImpl_NEW.internal_reset(pointer, true);
        return TempAllocatorImpl_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_TempAllocatorImpl(inSize);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inSize"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_TempAllocatorImpl(inSize);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_TempAllocatorImpl(int inSize);

    public static JobSystemThreadPool New_JobSystemThreadPool(int inNumThreads, int inMaxJobs, int inMaxBarriers) {
        int pointer = internal_native_New_JobSystemThreadPool(inNumThreads, inMaxJobs, inMaxBarriers);
        if (pointer == 0)
            return null;
        JobSystemThreadPool JobSystemThreadPool_NEW = new JobSystemThreadPool((byte) 1, (char) 1);
        JobSystemThreadPool_NEW.internal_reset(pointer, true);
        return JobSystemThreadPool_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_JobSystemThreadPool(inNumThreads, inMaxJobs, inMaxBarriers);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inNumThreads", "inMaxJobs", "inMaxBarriers"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_JobSystemThreadPool(inNumThreads, inMaxJobs, inMaxBarriers);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_JobSystemThreadPool(int inNumThreads, int inMaxJobs, int inMaxBarriers);

    public static JobSystemThreadPool New_JobSystemThreadPool(int inNumThreads, int inMaxJobs) {
        int pointer = internal_native_New_JobSystemThreadPool(inNumThreads, inMaxJobs);
        if (pointer == 0)
            return null;
        if (JobSystemThreadPool_TEMP_STATIC_GEN_0 == null)
            JobSystemThreadPool_TEMP_STATIC_GEN_0 = new JobSystemThreadPool((byte) 1, (char) 1);
        JobSystemThreadPool_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return JobSystemThreadPool_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_JobSystemThreadPool(inNumThreads, inMaxJobs);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inNumThreads", "inMaxJobs"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_JobSystemThreadPool(inNumThreads, inMaxJobs);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_JobSystemThreadPool(int inNumThreads, int inMaxJobs);

    public static JobSystemThreadPool New_JobSystemThreadPool(int inNumThreads) {
        int pointer = internal_native_New_JobSystemThreadPool(inNumThreads);
        if (pointer == 0)
            return null;
        if (JobSystemThreadPool_TEMP_STATIC_GEN_1 == null)
            JobSystemThreadPool_TEMP_STATIC_GEN_1 = new JobSystemThreadPool((byte) 1, (char) 1);
        JobSystemThreadPool_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return JobSystemThreadPool_TEMP_STATIC_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_JobSystemThreadPool(inNumThreads);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inNumThreads"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_JobSystemThreadPool(inNumThreads);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_JobSystemThreadPool(int inNumThreads);

    public static JobSystemThreadPool New_JobSystemThreadPool() {
        int pointer = internal_native_New_JobSystemThreadPool();
        if (pointer == 0)
            return null;
        if (JobSystemThreadPool_TEMP_STATIC_GEN_2 == null)
            JobSystemThreadPool_TEMP_STATIC_GEN_2 = new JobSystemThreadPool((byte) 1, (char) 1);
        JobSystemThreadPool_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return JobSystemThreadPool_TEMP_STATIC_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_JobSystemThreadPool();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jolt.Jolt.prototype.New_JobSystemThreadPool();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_JobSystemThreadPool();

    public static BodyCreationSettings New_BodyCreationSettings() {
        int pointer = internal_native_New_BodyCreationSettings_0();
        if (pointer == 0)
            return null;
        BodyCreationSettings BodyCreationSettings_NEW = new BodyCreationSettings((byte) 1, (char) 1);
        BodyCreationSettings_NEW.internal_reset(pointer, true);
        return BodyCreationSettings_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_BodyCreationSettings_0();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jolt.Jolt.prototype.New_BodyCreationSettings_0();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_BodyCreationSettings_0();

    public static BodyCreationSettings New_BodyCreationSettings(ShapeSettings inShape, Vec3 inPosition, Quat inRotation, EMotionType inMotionType, int inObjectLayer) {
        int pointer = internal_native_New_BodyCreationSettings_1((inShape != null ? inShape.native_address : 0), (inPosition != null ? inPosition.native_address : 0), (inRotation != null ? inRotation.native_address : 0), (int) (inMotionType != null ? inMotionType.getValue() : 0), inObjectLayer);
        if (pointer == 0)
            return null;
        BodyCreationSettings BodyCreationSettings_NEW = new BodyCreationSettings((byte) 1, (char) 1);
        BodyCreationSettings_NEW.internal_reset(pointer, true);
        return BodyCreationSettings_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_BodyCreationSettings_1(inShape_addr, inPosition_addr, inRotation_addr, inMotionType, inObjectLayer);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inShape_addr", "inPosition_addr", "inRotation_addr", "inMotionType", "inObjectLayer"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_BodyCreationSettings_1(inShape_addr, inPosition_addr, inRotation_addr, inMotionType, inObjectLayer);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_BodyCreationSettings_1(int inShape_addr, int inPosition_addr, int inRotation_addr, int inMotionType, int inObjectLayer);

    public static BodyCreationSettings New_BodyCreationSettings(Shape inShape, Vec3 inPosition, Quat inRotation, EMotionType inMotionType, int inObjectLayer) {
        int pointer = internal_native_New_BodyCreationSettings_2((inShape != null ? inShape.native_address : 0), (inPosition != null ? inPosition.native_address : 0), (inRotation != null ? inRotation.native_address : 0), (int) (inMotionType != null ? inMotionType.getValue() : 0), inObjectLayer);
        if (pointer == 0)
            return null;
        BodyCreationSettings BodyCreationSettings_NEW = new BodyCreationSettings((byte) 1, (char) 1);
        BodyCreationSettings_NEW.internal_reset(pointer, true);
        return BodyCreationSettings_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_BodyCreationSettings_2(inShape_addr, inPosition_addr, inRotation_addr, inMotionType, inObjectLayer);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inShape_addr", "inPosition_addr", "inRotation_addr", "inMotionType", "inObjectLayer"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_BodyCreationSettings_2(inShape_addr, inPosition_addr, inRotation_addr, inMotionType, inObjectLayer);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_BodyCreationSettings_2(int inShape_addr, int inPosition_addr, int inRotation_addr, int inMotionType, int inObjectLayer);

    public static Mat44 New_Mat44() {
        int pointer = internal_native_New_Mat44_0();
        if (pointer == 0)
            return null;
        Mat44 Mat44_NEW = new Mat44((byte) 1, (char) 1);
        Mat44_NEW.internal_reset(pointer, true);
        return Mat44_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Mat44_0();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jolt.Jolt.prototype.New_Mat44_0();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Mat44_0();

    public static Mat44 New_Mat44(Vec4 inC1, Vec4 inC2, Vec4 inC3, Vec4 inC4) {
        int pointer = internal_native_New_Mat44_1((inC1 != null ? inC1.native_address : 0), (inC2 != null ? inC2.native_address : 0), (inC3 != null ? inC3.native_address : 0), (inC4 != null ? inC4.native_address : 0));
        if (pointer == 0)
            return null;
        Mat44 Mat44_NEW = new Mat44((byte) 1, (char) 1);
        Mat44_NEW.internal_reset(pointer, true);
        return Mat44_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Mat44_1(inC1_addr, inC2_addr, inC3_addr, inC4_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inC1_addr", "inC2_addr", "inC3_addr", "inC4_addr"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_Mat44_1(inC1_addr, inC2_addr, inC3_addr, inC4_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Mat44_1(int inC1_addr, int inC2_addr, int inC3_addr, int inC4_addr);

    public static Mat44 New_Mat44(Vec4 inC1, Vec4 inC2, Vec4 inC3, Vec3 inC4) {
        int pointer = internal_native_New_Mat44_2((inC1 != null ? inC1.native_address : 0), (inC2 != null ? inC2.native_address : 0), (inC3 != null ? inC3.native_address : 0), (inC4 != null ? inC4.native_address : 0));
        if (pointer == 0)
            return null;
        Mat44 Mat44_NEW = new Mat44((byte) 1, (char) 1);
        Mat44_NEW.internal_reset(pointer, true);
        return Mat44_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Mat44_2(inC1_addr, inC2_addr, inC3_addr, inC4_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inC1_addr", "inC2_addr", "inC3_addr", "inC4_addr"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_Mat44_2(inC1_addr, inC2_addr, inC3_addr, inC4_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Mat44_2(int inC1_addr, int inC2_addr, int inC3_addr, int inC4_addr);

    public static Vec3 New_Vec3() {
        int pointer = internal_native_New_Vec3_0();
        if (pointer == 0)
            return null;
        Vec3 Vec3_NEW = new Vec3((byte) 1, (char) 1);
        Vec3_NEW.internal_reset(pointer, true);
        return Vec3_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Vec3_0();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jolt.Jolt.prototype.New_Vec3_0();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Vec3_0();

    public static Vec3 New_Vec3(float inX, float inY, float inZ) {
        int pointer = internal_native_New_Vec3_1(inX, inY, inZ);
        if (pointer == 0)
            return null;
        Vec3 Vec3_NEW = new Vec3((byte) 1, (char) 1);
        Vec3_NEW.internal_reset(pointer, true);
        return Vec3_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Vec3_1(inX, inY, inZ);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inX", "inY", "inZ"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_Vec3_1(inX, inY, inZ);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Vec3_1(float inX, float inY, float inZ);

    public static Vec3 New_Vec3(Vec3 inRHS) {
        int pointer = internal_native_New_Vec3_2((inRHS != null ? inRHS.native_address : 0));
        if (pointer == 0)
            return null;
        Vec3 Vec3_NEW = new Vec3((byte) 1, (char) 1);
        Vec3_NEW.internal_reset(pointer, true);
        return Vec3_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Vec3_2(inRHS_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inRHS_addr"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_Vec3_2(inRHS_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Vec3_2(int inRHS_addr);

    public static Vec3 New_Vec3(Float3 inV) {
        int pointer = internal_native_New_Vec3_3((inV != null ? inV.native_address : 0));
        if (pointer == 0)
            return null;
        Vec3 Vec3_NEW = new Vec3((byte) 1, (char) 1);
        Vec3_NEW.internal_reset(pointer, true);
        return Vec3_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Vec3_3(inV_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inV_addr"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_Vec3_3(inV_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Vec3_3(int inV_addr);

    public static Vec4 New_Vec4() {
        int pointer = internal_native_New_Vec4_0();
        if (pointer == 0)
            return null;
        Vec4 Vec4_NEW = new Vec4((byte) 1, (char) 1);
        Vec4_NEW.internal_reset(pointer, true);
        return Vec4_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Vec4_0();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jolt.Jolt.prototype.New_Vec4_0();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Vec4_0();

    public static Vec4 New_Vec4(float inX, float inY, float inZ, float inW) {
        int pointer = internal_native_New_Vec4_1(inX, inY, inZ, inW);
        if (pointer == 0)
            return null;
        Vec4 Vec4_NEW = new Vec4((byte) 1, (char) 1);
        Vec4_NEW.internal_reset(pointer, true);
        return Vec4_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Vec4_1(inX, inY, inZ, inW);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inX", "inY", "inZ", "inW"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_Vec4_1(inX, inY, inZ, inW);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Vec4_1(float inX, float inY, float inZ, float inW);

    public static Vec4 New_Vec4(Vec4 inV) {
        int pointer = internal_native_New_Vec4_2((inV != null ? inV.native_address : 0));
        if (pointer == 0)
            return null;
        Vec4 Vec4_NEW = new Vec4((byte) 1, (char) 1);
        Vec4_NEW.internal_reset(pointer, true);
        return Vec4_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Vec4_2(inV_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inV_addr"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_Vec4_2(inV_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Vec4_2(int inV_addr);

    public static Vec4 New_Vec4(Vec3 inV, float inW) {
        int pointer = internal_native_New_Vec4_3((inV != null ? inV.native_address : 0), inW);
        if (pointer == 0)
            return null;
        Vec4 Vec4_NEW = new Vec4((byte) 1, (char) 1);
        Vec4_NEW.internal_reset(pointer, true);
        return Vec4_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Jolt.prototype.New_Vec4_3(inV_addr, inW);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"inV_addr", "inW"}, script = "var returnedJSObj = jolt.Jolt.prototype.New_Vec4_3(inV_addr, inW);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_New_Vec4_3(int inV_addr, float inW);

    public static void Init() {
        internal_native_Init();
    }

    /*[-TEAVM;-NATIVE]
jolt.Jolt.prototype.Init();
*/
    @org.teavm.jso.JSBody(script = "jolt.Jolt.prototype.Init();")
    public static native void internal_native_Init();

    public static void RegisterTypes() {
        internal_native_RegisterTypes();
    }

    /*[-TEAVM;-NATIVE]
jolt.Jolt.prototype.RegisterTypes();
*/
    @org.teavm.jso.JSBody(script = "jolt.Jolt.prototype.RegisterTypes();")
    public static native void internal_native_RegisterTypes();

    public static void UnregisterTypes() {
        internal_native_UnregisterTypes();
    }

    /*[-TEAVM;-NATIVE]
jolt.Jolt.prototype.UnregisterTypes();
*/
    @org.teavm.jso.JSBody(script = "jolt.Jolt.prototype.UnregisterTypes();")
    public static native void internal_native_UnregisterTypes();

    public static void ClearWorld(PhysicsSystem physicsSystem) {
        internal_native_ClearWorld((physicsSystem != null ? physicsSystem.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
jolt.Jolt.prototype.ClearWorld(physicsSystem_addr);
*/
    @org.teavm.jso.JSBody(params = {"physicsSystem_addr"}, script = "jolt.Jolt.prototype.ClearWorld(physicsSystem_addr);")
    public static native void internal_native_ClearWorld(int physicsSystem_addr);
}
