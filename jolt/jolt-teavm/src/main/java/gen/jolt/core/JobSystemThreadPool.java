/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.core;

public class JobSystemThreadPool extends JobSystemWithBarrier {

    static public final JobSystemThreadPool T_01 = new JobSystemThreadPool((byte) 1, (char) 1);

    static public final JobSystemThreadPool T_02 = new JobSystemThreadPool((byte) 1, (char) 1);

    static public final JobSystemThreadPool T_03 = new JobSystemThreadPool((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public JobSystemThreadPool(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.JobSystemThreadPool);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.JobSystemThreadPool);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public int GetMaxConcurrency() {
        return internal_native_GetMaxConcurrency(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.JobSystemThreadPool);
var returnedJSObj = jsObj.GetMaxConcurrency();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.JobSystemThreadPool);var returnedJSObj = jsObj.GetMaxConcurrency();return returnedJSObj;")
    public static native int internal_native_GetMaxConcurrency(int this_addr);

    public void SetNumThreads(int inNumThreads) {
        internal_native_SetNumThreads(native_address, inNumThreads);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.JobSystemThreadPool);
jsObj.SetNumThreads(inNumThreads);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inNumThreads"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.JobSystemThreadPool);jsObj.SetNumThreads(inNumThreads);")
    public static native void internal_native_SetNumThreads(int this_addr, int inNumThreads);
}
