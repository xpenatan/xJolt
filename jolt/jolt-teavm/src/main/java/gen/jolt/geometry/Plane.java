/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.geometry;

import gen.jolt.idl.IDLBase;
import gen.jolt.math.Vec3;
import gen.jolt.math.Mat44;

public class Plane extends IDLBase {

    private Vec3 Vec3_TEMP_GEN_0;

    private Plane Plane_TEMP_GEN_0;

    private Plane Plane_TEMP_GEN_1;

    private Plane Plane_TEMP_GEN_2;

    private Plane Plane_TEMP_GEN_3;

    static public final Plane T_01 = new Plane((byte) 1, (char) 1);

    static public final Plane T_02 = new Plane((byte) 1, (char) 1);

    static public final Plane T_03 = new Plane((byte) 1, (char) 1);

    public Plane(Vec3 inNormal, float inConstant) {
        int addr = internal_native_create_Vec3_float((inNormal != null ? inNormal.native_address : 0), inConstant);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.Plane(inNormal_addr, inConstant);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inNormal_addr", "inConstant"}, script = "var jsObj = new jolt.Plane(inNormal_addr, inConstant);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_Vec3_float(int inNormal_addr, float inConstant);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Plane(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public Vec3 GetNormal() {
        int pointer = internal_native_GetNormal(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);
var returnedJSObj = jsObj.GetNormal();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);var returnedJSObj = jsObj.GetNormal();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetNormal(int this_addr);

    public void SetNormal(Vec3 inNormal) {
        internal_native_SetNormal(native_address, (inNormal != null ? inNormal.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);
jsObj.SetNormal(inNormal_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inNormal_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);jsObj.SetNormal(inNormal_addr);")
    public static native void internal_native_SetNormal(int this_addr, int inNormal_addr);

    public float GetConstant() {
        return internal_native_GetConstant(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);
var returnedJSObj = jsObj.GetConstant();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);var returnedJSObj = jsObj.GetConstant();return returnedJSObj;")
    public static native float internal_native_GetConstant(int this_addr);

    public void SetConstant(float inConstant) {
        internal_native_SetConstant(native_address, inConstant);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);
jsObj.SetConstant(inConstant);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inConstant"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);jsObj.SetConstant(inConstant);")
    public static native void internal_native_SetConstant(int this_addr, float inConstant);

    public Plane sFromPointAndNormal(Vec3 inPoint, Vec3 inNormal) {
        int pointer = internal_native_sFromPointAndNormal(native_address, (inPoint != null ? inPoint.native_address : 0), (inNormal != null ? inNormal.native_address : 0));
        if (pointer == 0)
            return null;
        if (Plane_TEMP_GEN_0 == null)
            Plane_TEMP_GEN_0 = new Plane((byte) 1, (char) 1);
        Plane_TEMP_GEN_0.internal_reset(pointer, false);
        return Plane_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);
var returnedJSObj = jsObj.sFromPointAndNormal(inPoint_addr, inNormal_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPoint_addr", "inNormal_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);var returnedJSObj = jsObj.sFromPointAndNormal(inPoint_addr, inNormal_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_sFromPointAndNormal(int this_addr, int inPoint_addr, int inNormal_addr);

    public Plane sFromPointsCCW(Vec3 inPoint1, Vec3 inPoint2, Vec3 inPoint3) {
        int pointer = internal_native_sFromPointsCCW(native_address, (inPoint1 != null ? inPoint1.native_address : 0), (inPoint2 != null ? inPoint2.native_address : 0), (inPoint3 != null ? inPoint3.native_address : 0));
        if (pointer == 0)
            return null;
        if (Plane_TEMP_GEN_1 == null)
            Plane_TEMP_GEN_1 = new Plane((byte) 1, (char) 1);
        Plane_TEMP_GEN_1.internal_reset(pointer, false);
        return Plane_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);
var returnedJSObj = jsObj.sFromPointsCCW(inPoint1_addr, inPoint2_addr, inPoint3_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPoint1_addr", "inPoint2_addr", "inPoint3_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);var returnedJSObj = jsObj.sFromPointsCCW(inPoint1_addr, inPoint2_addr, inPoint3_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_sFromPointsCCW(int this_addr, int inPoint1_addr, int inPoint2_addr, int inPoint3_addr);

    public Plane Offset(float inDistance) {
        int pointer = internal_native_Offset(native_address, inDistance);
        if (pointer == 0)
            return null;
        if (Plane_TEMP_GEN_2 == null)
            Plane_TEMP_GEN_2 = new Plane((byte) 1, (char) 1);
        Plane_TEMP_GEN_2.internal_reset(pointer, false);
        return Plane_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);
var returnedJSObj = jsObj.Offset(inDistance);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inDistance"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);var returnedJSObj = jsObj.Offset(inDistance);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_Offset(int this_addr, float inDistance);

    public Plane GetTransformed(Mat44 inTransform) {
        int pointer = internal_native_GetTransformed(native_address, (inTransform != null ? inTransform.native_address : 0));
        if (pointer == 0)
            return null;
        if (Plane_TEMP_GEN_3 == null)
            Plane_TEMP_GEN_3 = new Plane((byte) 1, (char) 1);
        Plane_TEMP_GEN_3.internal_reset(pointer, false);
        return Plane_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);
var returnedJSObj = jsObj.GetTransformed(inTransform_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inTransform_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);var returnedJSObj = jsObj.GetTransformed(inTransform_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTransformed(int this_addr, int inTransform_addr);

    public float SignedDistance(Vec3 inPoint) {
        return internal_native_SignedDistance(native_address, (inPoint != null ? inPoint.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);
var returnedJSObj = jsObj.SignedDistance(inPoint_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPoint_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Plane);var returnedJSObj = jsObj.SignedDistance(inPoint_addr);return returnedJSObj;")
    public static native float internal_native_SignedDistance(int this_addr, int inPoint_addr);
}
