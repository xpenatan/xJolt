/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package gen.jolt.idl.helper;

import gen.com.github.xpenatan.jParser.idl.IDLBase;

public class IDLArray extends IDLBase {

    private IDLBase IDLBase_TEMP_GEN_0;

    public static final IDLArray NULL = native_new();

    public static IDLArray native_new() {
        return new IDLArray((byte) 1, (char) 1);
    }

    protected IDLArray() {
    }

    protected IDLArray(byte b, char c) {
    }

    @Override
    protected void onNativeAddressChanged() {
        IDLBase voidData = getVoidData();
        native_void_address = voidData.native_void_address;
    }

    public void resize(int size) {
        internal_native_resize(native_address, size);
        IDLBase voidData = getVoidData();
        native_void_address = voidData.native_void_address;
    }

    /*
      [-TEAVM;-NATIVE]
            var jsObj = [MODULE].wrapPointer(this_addr, [MODULE].IDLArray);
            jsObj.resize(size);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "size"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLArray); jsObj.resize(size);")
    public static native void internal_native_resize(int this_addr, int size);

    public void clear() {
        internal_native_clear(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLArray);
      jsObj.clear();
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLArray);jsObj.clear();")
    public static native void internal_native_clear(int this_addr);

    public int getSize() {
        return internal_native_getSize(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLArray);
      var returnedJSObj = jsObj.getSize();
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLArray);var returnedJSObj = jsObj.getSize();return returnedJSObj;")
    public static native int internal_native_getSize(int this_addr);

    public IDLBase getVoidData() {
        int pointer = internal_native_getVoidData(native_address);
        if (pointer == 0)
            return IDLBase.NULL;
        if (IDLBase_TEMP_GEN_0 == null)
            IDLBase_TEMP_GEN_0 = IDLBase.native_new();
        IDLBase_TEMP_GEN_0.internal_reset(pointer, false);
        return IDLBase_TEMP_GEN_0;
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLArray);
      var returnedJSObj = jsObj.getVoidData();
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLArray);var returnedJSObj = jsObj.getVoidData();return returnedJSObj;")
    public static native int internal_native_getVoidData(int this_addr);
}
