/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package gen.jolt.idl.helper;

import gen.jolt.idl.IDLBase;

public class IDLByteArray extends IDLBase {

    public IDLByteArray(int size) {
        int addr = internal_native_create_int(size);
        internal_reset(addr, true);
    }

    public void copy(byte[] array) {
        int length = array.length;
        resize(length);
        for (int i = 0; i < length; i++) {
            byte value = array[i];
            setValue(i, value);
        }
    }

    public static void arraycopy(byte[] src, int srcPos, IDLByteArray dest, int destPos, int length) {
        int srcP = srcPos;
        int destP = destPos;
        int count = 0;
        while (count < length) {
            byte srcByte = src[srcP];
            srcP++;
            dest.setValue(destP, srcByte);
            destP++;
            count++;
        }
    }

    public static void arraycopy(IDLByteArray src, int srcPos, byte[] dest, int destPos, int length) {
        int srcP = srcPos;
        int destP = destPos;
        int count = 0;
        while (count < length) {
            byte srcByte = src.getValue(srcP);
            srcP++;
            dest[destP] = srcByte;
            destP++;
            count++;
        }
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = new jolt.IDLByteArray(size);
      return jolt.getPointer(jsObj);
    */
    @org.teavm.jso.JSBody(params = {"size"}, script = "var jsObj = new jolt.IDLByteArray(size);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_int(int size);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public IDLByteArray(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);
      jolt.destroy(jsObj);
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void resize(int size) {
        internal_native_resize(native_address, size);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);
      jsObj.resize(size);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "size"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);jsObj.resize(size);")
    public static native void internal_native_resize(int this_addr, int size);

    public void clear() {
        internal_native_clear(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);
      jsObj.clear();
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);jsObj.clear();")
    public static native void internal_native_clear(int this_addr);

    public byte getValue(int index) {
        return internal_native_getValue(native_address, index);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);
      var returnedJSObj = jsObj.getValue(index);
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "index"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);var returnedJSObj = jsObj.getValue(index);return returnedJSObj;")
    public static native byte internal_native_getValue(int this_addr, int index);

    public void setValue(int index, byte value) {
        internal_native_setValue(native_address, index, value);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);
      jsObj.setValue(index, value);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "index", "value"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);jsObj.setValue(index, value);")
    public static native void internal_native_setValue(int this_addr, int index, byte value);

    public int getSize() {
        return internal_native_getSize(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);
      var returnedJSObj = jsObj.getSize();
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);var returnedJSObj = jsObj.getSize();return returnedJSObj;")
    public static native int internal_native_getSize(int this_addr);

    public int getPointer() {
        return internal_native_getPointer(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);
      var returnedJSObj = jsObj.getPointer();
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);var returnedJSObj = jsObj.getPointer();return returnedJSObj;")
    public static native int internal_native_getPointer(int this_addr);

    public void copy(IDLByteArray src, int srcOffset, int destOffset, int length) {
        internal_native_copy(native_address, (src != null ? src.native_address : 0), srcOffset, destOffset, length);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);
      jsObj.copy(src_addr, srcOffset, destOffset, length);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "src_addr", "srcOffset", "destOffset", "length"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLByteArray);jsObj.copy(src_addr, srcOffset, destOffset, length);")
    public static native void internal_native_copy(int this_addr, int src_addr, int srcOffset, int destOffset, int length);
}
