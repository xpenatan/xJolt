/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.body;

import gen.jolt.idl.IDLBase;

public class BodyFilter extends IDLBase {

    static private BodyID BodyID_TEMP_STATIC_GEN_0;

    static private Body Body_TEMP_STATIC_GEN_0;

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public BodyFilter(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyFilterJS);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyFilterJS);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public BodyFilter() {
        int addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        ShouldCollide ShouldCollide = new ShouldCollide() {

            public boolean ShouldCollide(int inBodyID_addr) {
                return internal_ShouldCollide(inBodyID_addr);
            }
        };
        ShouldCollideLocked ShouldCollideLocked = new ShouldCollideLocked() {

            public boolean ShouldCollideLocked(int inBody_addr) {
                return internal_ShouldCollideLocked(inBody_addr);
            }
        };
        internal_native_setupCallback(native_address, ShouldCollide, ShouldCollideLocked);
    }

    protected boolean ShouldCollide(BodyID inBodyID) {
        return false;
    }

    private boolean internal_ShouldCollide(int inBodyID_addr) {
        if (BodyID_TEMP_STATIC_GEN_0 == null)
            BodyID_TEMP_STATIC_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_STATIC_GEN_0.internal_reset(inBodyID_addr, false);
        return ShouldCollide(BodyID_TEMP_STATIC_GEN_0);
    }

    protected boolean ShouldCollideLocked(Body inBody) {
        return false;
    }

    private boolean internal_ShouldCollideLocked(int inBody_addr) {
        if (Body_TEMP_STATIC_GEN_0 == null)
            Body_TEMP_STATIC_GEN_0 = new Body((byte) 1, (char) 1);
        Body_TEMP_STATIC_GEN_0.internal_reset(inBody_addr, false);
        return ShouldCollideLocked(Body_TEMP_STATIC_GEN_0);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.BodyFilterJS();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.BodyFilterJS();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    @org.teavm.jso.JSBody(params = { "this_addr", "ShouldCollide", "ShouldCollideLocked" }, script = "var BodyFilterJS = jolt.wrapPointer(this_addr, jolt.BodyFilterJS); BodyFilterJS.ShouldCollide = ShouldCollide; BodyFilterJS.ShouldCollideLocked = ShouldCollideLocked;")
    public static native void internal_native_setupCallback(int this_addr, ShouldCollide ShouldCollide, ShouldCollideLocked ShouldCollideLocked);

    @org.teavm.jso.JSFunctor()
    public interface ShouldCollide extends org.teavm.jso.JSObject {

        boolean ShouldCollide(int inBodyID_addr);
    }

    @org.teavm.jso.JSFunctor()
    public interface ShouldCollideLocked extends org.teavm.jso.JSObject {

        boolean ShouldCollideLocked(int inBody_addr);
    }
}
