/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.body;

import gen.jolt.idl.IDLBase;
import gen.jolt.physics.softbody.SoftBodyCreationSettings;
import gen.jolt.enums.EActivation;
import gen.jolt.physics.collision.broadphase.BodyInterface_AddState;
import gen.jolt.math.TwoBodyConstraintSettings;
import gen.jolt.physics.constraints.TwoBodyConstraint;
import gen.jolt.physics.collision.shape.Shape;
import gen.jolt.math.Vec3;
import gen.jolt.math.Quat;
import gen.jolt.math.Mat44;
import gen.jolt.geometry.AABox;
import gen.jolt.physics.collision.broadphase.BroadPhaseLayerFilter;
import gen.jolt.physics.collision.ObjectLayerFilter;
import gen.jolt.enums.EBodyType;
import gen.jolt.enums.EMotionType;
import gen.jolt.enums.EMotionQuality;
import gen.jolt.physics.collision.CollisionGroup;
import gen.jolt.physics.collision.TransformedShape;
import gen.jolt.physics.collision.shape.SubShapeID;
import gen.jolt.physics.collision.PhysicsMaterial;

public class BodyInterface extends IDLBase {

    private Body Body_TEMP_GEN_0;

    private BodyID BodyID_TEMP_GEN_0;

    private BodyID BodyID_TEMP_GEN_1;

    private BodyInterface_AddState BodyInterface_AddState_TEMP_GEN_0;

    private TwoBodyConstraint TwoBodyConstraint_TEMP_GEN_0;

    private Shape Shape_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    private Quat Quat_TEMP_GEN_0;

    private Mat44 Mat44_TEMP_GEN_0;

    private Mat44 Mat44_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    private Vec3 Vec3_TEMP_GEN_3;

    private Mat44 Mat44_TEMP_GEN_2;

    private CollisionGroup CollisionGroup_TEMP_GEN_0;

    private TransformedShape TransformedShape_TEMP_GEN_0;

    private PhysicsMaterial PhysicsMaterial_TEMP_GEN_0;

    static public final BodyInterface T_01 = new BodyInterface((byte) 1, (char) 1);

    static public final BodyInterface T_02 = new BodyInterface((byte) 1, (char) 1);

    static public final BodyInterface T_03 = new BodyInterface((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public BodyInterface(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public Body CreateBody(BodyCreationSettings inSettings) {
        int pointer = internal_native_CreateBody(native_address, (inSettings != null ? inSettings.native_address : 0));
        if (pointer == 0)
            return null;
        Body Body_NEW = new Body((byte) 1, (char) 1);
        Body_NEW.internal_reset(pointer, false);
        return Body_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.CreateBody(inSettings_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.CreateBody(inSettings_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_CreateBody(int this_addr, int inSettings_addr);

    public Body CreateSoftBody(SoftBodyCreationSettings inSettings) {
        int pointer = internal_native_CreateSoftBody(native_address, (inSettings != null ? inSettings.native_address : 0));
        if (pointer == 0)
            return null;
        Body Body_NEW = new Body((byte) 1, (char) 1);
        Body_NEW.internal_reset(pointer, false);
        return Body_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.CreateSoftBody(inSettings_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.CreateSoftBody(inSettings_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_CreateSoftBody(int this_addr, int inSettings_addr);

    public Body CreateBodyWithID(BodyID inBodyID, BodyCreationSettings inSettings) {
        int pointer = internal_native_CreateBodyWithID(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inSettings != null ? inSettings.native_address : 0));
        if (pointer == 0)
            return null;
        Body Body_NEW = new Body((byte) 1, (char) 1);
        Body_NEW.internal_reset(pointer, false);
        return Body_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.CreateBodyWithID(inBodyID_addr, inSettings_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.CreateBodyWithID(inBodyID_addr, inSettings_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_CreateBodyWithID(int this_addr, int inBodyID_addr, int inSettings_addr);

    public Body CreateSoftBodyWithID(BodyID inBodyID, SoftBodyCreationSettings inSettings) {
        int pointer = internal_native_CreateSoftBodyWithID(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inSettings != null ? inSettings.native_address : 0));
        if (pointer == 0)
            return null;
        Body Body_NEW = new Body((byte) 1, (char) 1);
        Body_NEW.internal_reset(pointer, false);
        return Body_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.CreateSoftBodyWithID(inBodyID_addr, inSettings_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.CreateSoftBodyWithID(inBodyID_addr, inSettings_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_CreateSoftBodyWithID(int this_addr, int inBodyID_addr, int inSettings_addr);

    public Body CreateBodyWithoutID(BodyCreationSettings inSettings) {
        int pointer = internal_native_CreateBodyWithoutID(native_address, (inSettings != null ? inSettings.native_address : 0));
        if (pointer == 0)
            return null;
        Body Body_NEW = new Body((byte) 1, (char) 1);
        Body_NEW.internal_reset(pointer, false);
        return Body_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.CreateBodyWithoutID(inSettings_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.CreateBodyWithoutID(inSettings_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_CreateBodyWithoutID(int this_addr, int inSettings_addr);

    public Body CreateSoftBodyWithoutID(SoftBodyCreationSettings inSettings) {
        int pointer = internal_native_CreateSoftBodyWithoutID(native_address, (inSettings != null ? inSettings.native_address : 0));
        if (pointer == 0)
            return null;
        Body Body_NEW = new Body((byte) 1, (char) 1);
        Body_NEW.internal_reset(pointer, false);
        return Body_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.CreateSoftBodyWithoutID(inSettings_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.CreateSoftBodyWithoutID(inSettings_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_CreateSoftBodyWithoutID(int this_addr, int inSettings_addr);

    public void DestroyBodyWithoutID(Body inBody) {
        internal_native_DestroyBodyWithoutID(native_address, (inBody != null ? inBody.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.DestroyBodyWithoutID(inBody_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBody_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.DestroyBodyWithoutID(inBody_addr);")
    public static native void internal_native_DestroyBodyWithoutID(int this_addr, int inBody_addr);

    public boolean AssignBodyID(Body ioBody) {
        return internal_native_AssignBodyID(native_address, (ioBody != null ? ioBody.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.AssignBodyID(ioBody_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ioBody_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.AssignBodyID(ioBody_addr);return returnedJSObj;")
    public static native boolean internal_native_AssignBodyID(int this_addr, int ioBody_addr);

    public boolean AssignBodyID(Body ioBody, BodyID inBodyID) {
        return internal_native_AssignBodyID(native_address, (ioBody != null ? ioBody.native_address : 0), (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.AssignBodyID(ioBody_addr, inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ioBody_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.AssignBodyID(ioBody_addr, inBodyID_addr);return returnedJSObj;")
    public static native boolean internal_native_AssignBodyID(int this_addr, int ioBody_addr, int inBodyID_addr);

    public Body UnassignBodyID(BodyID inBodyID) {
        int pointer = internal_native_UnassignBodyID(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (Body_TEMP_GEN_0 == null)
            Body_TEMP_GEN_0 = new Body((byte) 1, (char) 1);
        Body_TEMP_GEN_0.internal_reset(pointer, false);
        return Body_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.UnassignBodyID(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.UnassignBodyID(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_UnassignBodyID(int this_addr, int inBodyID_addr);

    public void UnassignBodyIDs(BodyIDMemRef inBodyIDs, int inNumber, BodyPtrMemRef outBodies) {
        internal_native_UnassignBodyIDs(native_address, (inBodyIDs != null ? inBodyIDs.native_address : 0), inNumber, (outBodies != null ? outBodies.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.UnassignBodyIDs(inBodyIDs_addr, inNumber, outBodies_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyIDs_addr", "inNumber", "outBodies_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.UnassignBodyIDs(inBodyIDs_addr, inNumber, outBodies_addr);")
    public static native void internal_native_UnassignBodyIDs(int this_addr, int inBodyIDs_addr, int inNumber, int outBodies_addr);

    public void DestroyBody(BodyID inBodyID) {
        internal_native_DestroyBody(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.DestroyBody(inBodyID_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.DestroyBody(inBodyID_addr);")
    public static native void internal_native_DestroyBody(int this_addr, int inBodyID_addr);

    public void DestroyBodies(BodyIDMemRef inBodyIDs, int inNumber) {
        internal_native_DestroyBodies(native_address, (inBodyIDs != null ? inBodyIDs.native_address : 0), inNumber);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.DestroyBodies(inBodyIDs_addr, inNumber);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyIDs_addr", "inNumber"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.DestroyBodies(inBodyIDs_addr, inNumber);")
    public static native void internal_native_DestroyBodies(int this_addr, int inBodyIDs_addr, int inNumber);

    public void AddBody(BodyID inBodyID, EActivation inActivationMode) {
        internal_native_AddBody(native_address, (inBodyID != null ? inBodyID.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddBody(inBodyID_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddBody(inBodyID_addr, inActivationMode);")
    public static native void internal_native_AddBody(int this_addr, int inBodyID_addr, int inActivationMode);

    public void RemoveBody(BodyID inBodyID) {
        internal_native_RemoveBody(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.RemoveBody(inBodyID_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.RemoveBody(inBodyID_addr);")
    public static native void internal_native_RemoveBody(int this_addr, int inBodyID_addr);

    public boolean IsAdded(BodyID inBodyID) {
        return internal_native_IsAdded(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.IsAdded(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.IsAdded(inBodyID_addr);return returnedJSObj;")
    public static native boolean internal_native_IsAdded(int this_addr, int inBodyID_addr);

    public BodyID CreateAndAddBody(BodyCreationSettings inSettings, EActivation inActivationMode) {
        int pointer = internal_native_CreateAndAddBody(native_address, (inSettings != null ? inSettings.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
        if (pointer == 0)
            return null;
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.CreateAndAddBody(inSettings_addr, inActivationMode);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSettings_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.CreateAndAddBody(inSettings_addr, inActivationMode);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_CreateAndAddBody(int this_addr, int inSettings_addr, int inActivationMode);

    public BodyID CreateAndAddSoftBody(SoftBodyCreationSettings inSettings, EActivation inActivationMode) {
        int pointer = internal_native_CreateAndAddSoftBody(native_address, (inSettings != null ? inSettings.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
        if (pointer == 0)
            return null;
        if (BodyID_TEMP_GEN_1 == null)
            BodyID_TEMP_GEN_1 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_GEN_1.internal_reset(pointer, false);
        return BodyID_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.CreateAndAddSoftBody(inSettings_addr, inActivationMode);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSettings_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.CreateAndAddSoftBody(inSettings_addr, inActivationMode);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_CreateAndAddSoftBody(int this_addr, int inSettings_addr, int inActivationMode);

    public BodyInterface_AddState AddBodiesPrepare(BodyIDMemRef ioBodies, int inNumber) {
        int pointer = internal_native_AddBodiesPrepare(native_address, (ioBodies != null ? ioBodies.native_address : 0), inNumber);
        if (pointer == 0)
            return null;
        if (BodyInterface_AddState_TEMP_GEN_0 == null)
            BodyInterface_AddState_TEMP_GEN_0 = new BodyInterface_AddState((byte) 1, (char) 1);
        BodyInterface_AddState_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyInterface_AddState_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.AddBodiesPrepare(ioBodies_addr, inNumber);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ioBodies_addr", "inNumber"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.AddBodiesPrepare(ioBodies_addr, inNumber);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_AddBodiesPrepare(int this_addr, int ioBodies_addr, int inNumber);

    public void AddBodiesFinalize(BodyIDMemRef ioBodies, int inNumber, BodyInterface_AddState inAddState, EActivation inActivationMode) {
        internal_native_AddBodiesFinalize(native_address, (ioBodies != null ? ioBodies.native_address : 0), inNumber, (inAddState != null ? inAddState.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddBodiesFinalize(ioBodies_addr, inNumber, inAddState_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ioBodies_addr", "inNumber", "inAddState_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddBodiesFinalize(ioBodies_addr, inNumber, inAddState_addr, inActivationMode);")
    public static native void internal_native_AddBodiesFinalize(int this_addr, int ioBodies_addr, int inNumber, int inAddState_addr, int inActivationMode);

    public void AddBodiesAbort(BodyIDMemRef ioBodies, int inNumber, BodyInterface_AddState inAddState) {
        internal_native_AddBodiesAbort(native_address, (ioBodies != null ? ioBodies.native_address : 0), inNumber, (inAddState != null ? inAddState.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddBodiesAbort(ioBodies_addr, inNumber, inAddState_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ioBodies_addr", "inNumber", "inAddState_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddBodiesAbort(ioBodies_addr, inNumber, inAddState_addr);")
    public static native void internal_native_AddBodiesAbort(int this_addr, int ioBodies_addr, int inNumber, int inAddState_addr);

    public void RemoveBodies(BodyIDMemRef ioBodies, int inNumber) {
        internal_native_RemoveBodies(native_address, (ioBodies != null ? ioBodies.native_address : 0), inNumber);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.RemoveBodies(ioBodies_addr, inNumber);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ioBodies_addr", "inNumber"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.RemoveBodies(ioBodies_addr, inNumber);")
    public static native void internal_native_RemoveBodies(int this_addr, int ioBodies_addr, int inNumber);

    public TwoBodyConstraint CreateConstraint(TwoBodyConstraintSettings inSettings, BodyID inBodyID1, BodyID inBodyID2) {
        int pointer = internal_native_CreateConstraint(native_address, (inSettings != null ? inSettings.native_address : 0), (inBodyID1 != null ? inBodyID1.native_address : 0), (inBodyID2 != null ? inBodyID2.native_address : 0));
        if (pointer == 0)
            return null;
        if (TwoBodyConstraint_TEMP_GEN_0 == null)
            TwoBodyConstraint_TEMP_GEN_0 = new TwoBodyConstraint((byte) 1, (char) 1);
        TwoBodyConstraint_TEMP_GEN_0.internal_reset(pointer, false);
        return TwoBodyConstraint_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.CreateConstraint(inSettings_addr, inBodyID1_addr, inBodyID2_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSettings_addr", "inBodyID1_addr", "inBodyID2_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.CreateConstraint(inSettings_addr, inBodyID1_addr, inBodyID2_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_CreateConstraint(int this_addr, int inSettings_addr, int inBodyID1_addr, int inBodyID2_addr);

    public void ActivateConstraint(TwoBodyConstraint inConstraint) {
        internal_native_ActivateConstraint(native_address, (inConstraint != null ? inConstraint.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.ActivateConstraint(inConstraint_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inConstraint_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.ActivateConstraint(inConstraint_addr);")
    public static native void internal_native_ActivateConstraint(int this_addr, int inConstraint_addr);

    public Shape GetShape(BodyID inBodyID) {
        int pointer = internal_native_GetShape(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (Shape_TEMP_GEN_0 == null)
            Shape_TEMP_GEN_0 = new Shape((byte) 1, (char) 1);
        Shape_TEMP_GEN_0.internal_reset(pointer, false);
        return Shape_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetShape(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetShape(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetShape(int this_addr, int inBodyID_addr);

    public void SetShape(BodyID inBodyID, Shape inShape, boolean inUpdateMassProperties, EActivation inActivationMode) {
        internal_native_SetShape(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inShape != null ? inShape.native_address : 0), inUpdateMassProperties, (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetShape(inBodyID_addr, inShape_addr, inUpdateMassProperties, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inShape_addr", "inUpdateMassProperties", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetShape(inBodyID_addr, inShape_addr, inUpdateMassProperties, inActivationMode);")
    public static native void internal_native_SetShape(int this_addr, int inBodyID_addr, int inShape_addr, boolean inUpdateMassProperties, int inActivationMode);

    public void NotifyShapeChanged(BodyID inBodyID, Vec3 inPreviousCenterOfMass, boolean inUpdateMassProperties, EActivation inActivationMode) {
        internal_native_NotifyShapeChanged(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inPreviousCenterOfMass != null ? inPreviousCenterOfMass.native_address : 0), inUpdateMassProperties, (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.NotifyShapeChanged(inBodyID_addr, inPreviousCenterOfMass_addr, inUpdateMassProperties, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inPreviousCenterOfMass_addr", "inUpdateMassProperties", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.NotifyShapeChanged(inBodyID_addr, inPreviousCenterOfMass_addr, inUpdateMassProperties, inActivationMode);")
    public static native void internal_native_NotifyShapeChanged(int this_addr, int inBodyID_addr, int inPreviousCenterOfMass_addr, boolean inUpdateMassProperties, int inActivationMode);

    public void SetObjectLayer(BodyID inBodyID, int inLayer) {
        internal_native_SetObjectLayer(native_address, (inBodyID != null ? inBodyID.native_address : 0), inLayer);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetObjectLayer(inBodyID_addr, inLayer);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inLayer"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetObjectLayer(inBodyID_addr, inLayer);")
    public static native void internal_native_SetObjectLayer(int this_addr, int inBodyID_addr, int inLayer);

    public int GetObjectLayer(BodyID inBodyID) {
        return internal_native_GetObjectLayer(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetObjectLayer(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetObjectLayer(inBodyID_addr);return returnedJSObj;")
    public static native int internal_native_GetObjectLayer(int this_addr, int inBodyID_addr);

    public void SetPositionAndRotation(BodyID inBodyID, Vec3 inPosition, Quat inRotation, EActivation inActivationMode) {
        internal_native_SetPositionAndRotation(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inPosition != null ? inPosition.native_address : 0), (inRotation != null ? inRotation.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetPositionAndRotation(inBodyID_addr, inPosition_addr, inRotation_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inPosition_addr", "inRotation_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetPositionAndRotation(inBodyID_addr, inPosition_addr, inRotation_addr, inActivationMode);")
    public static native void internal_native_SetPositionAndRotation(int this_addr, int inBodyID_addr, int inPosition_addr, int inRotation_addr, int inActivationMode);

    public void SetPositionAndRotationWhenChanged(BodyID inBodyID, Vec3 inPosition, Quat inRotation, EActivation inActivationMode) {
        internal_native_SetPositionAndRotationWhenChanged(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inPosition != null ? inPosition.native_address : 0), (inRotation != null ? inRotation.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetPositionAndRotationWhenChanged(inBodyID_addr, inPosition_addr, inRotation_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inPosition_addr", "inRotation_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetPositionAndRotationWhenChanged(inBodyID_addr, inPosition_addr, inRotation_addr, inActivationMode);")
    public static native void internal_native_SetPositionAndRotationWhenChanged(int this_addr, int inBodyID_addr, int inPosition_addr, int inRotation_addr, int inActivationMode);

    public void GetPositionAndRotation(BodyID inBodyID, Vec3 outPosition, Quat outRotation) {
        internal_native_GetPositionAndRotation(native_address, (inBodyID != null ? inBodyID.native_address : 0), (outPosition != null ? outPosition.native_address : 0), (outRotation != null ? outRotation.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.GetPositionAndRotation(inBodyID_addr, outPosition_addr, outRotation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "outPosition_addr", "outRotation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.GetPositionAndRotation(inBodyID_addr, outPosition_addr, outRotation_addr);")
    public static native void internal_native_GetPositionAndRotation(int this_addr, int inBodyID_addr, int outPosition_addr, int outRotation_addr);

    public void SetPosition(BodyID inBodyID, Vec3 inPosition, EActivation inActivationMode) {
        internal_native_SetPosition(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inPosition != null ? inPosition.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetPosition(inBodyID_addr, inPosition_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inPosition_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetPosition(inBodyID_addr, inPosition_addr, inActivationMode);")
    public static native void internal_native_SetPosition(int this_addr, int inBodyID_addr, int inPosition_addr, int inActivationMode);

    public Vec3 GetPosition(BodyID inBodyID) {
        int pointer = internal_native_GetPosition(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetPosition(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetPosition(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetPosition(int this_addr, int inBodyID_addr);

    public void SetRotation(BodyID inBodyID, Quat inRotation, EActivation inActivationMode) {
        internal_native_SetRotation(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inRotation != null ? inRotation.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetRotation(inBodyID_addr, inRotation_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inRotation_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetRotation(inBodyID_addr, inRotation_addr, inActivationMode);")
    public static native void internal_native_SetRotation(int this_addr, int inBodyID_addr, int inRotation_addr, int inActivationMode);

    public Quat GetRotation(BodyID inBodyID) {
        int pointer = internal_native_GetRotation(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (Quat_TEMP_GEN_0 == null)
            Quat_TEMP_GEN_0 = new Quat((byte) 1, (char) 1);
        Quat_TEMP_GEN_0.internal_reset(pointer, false);
        return Quat_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetRotation(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetRotation(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetRotation(int this_addr, int inBodyID_addr);

    public Mat44 GetWorldTransform(BodyID inBodyID) {
        int pointer = internal_native_GetWorldTransform(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (Mat44_TEMP_GEN_0 == null)
            Mat44_TEMP_GEN_0 = new Mat44((byte) 1, (char) 1);
        Mat44_TEMP_GEN_0.internal_reset(pointer, false);
        return Mat44_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetWorldTransform(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetWorldTransform(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWorldTransform(int this_addr, int inBodyID_addr);

    public Mat44 GetCenterOfMassTransform(BodyID inBodyID) {
        int pointer = internal_native_GetCenterOfMassTransform(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (Mat44_TEMP_GEN_1 == null)
            Mat44_TEMP_GEN_1 = new Mat44((byte) 1, (char) 1);
        Mat44_TEMP_GEN_1.internal_reset(pointer, false);
        return Mat44_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetCenterOfMassTransform(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetCenterOfMassTransform(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetCenterOfMassTransform(int this_addr, int inBodyID_addr);

    public void SetLinearAndAngularVelocity(BodyID inBodyID, Vec3 inLinearVelocity, Vec3 inAngularVelocity) {
        internal_native_SetLinearAndAngularVelocity(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inLinearVelocity != null ? inLinearVelocity.native_address : 0), (inAngularVelocity != null ? inAngularVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetLinearAndAngularVelocity(inBodyID_addr, inLinearVelocity_addr, inAngularVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inLinearVelocity_addr", "inAngularVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetLinearAndAngularVelocity(inBodyID_addr, inLinearVelocity_addr, inAngularVelocity_addr);")
    public static native void internal_native_SetLinearAndAngularVelocity(int this_addr, int inBodyID_addr, int inLinearVelocity_addr, int inAngularVelocity_addr);

    public void GetLinearAndAngularVelocity(BodyID inBodyID, Vec3 outLinearVelocity, Vec3 outAngularVelocity) {
        internal_native_GetLinearAndAngularVelocity(native_address, (inBodyID != null ? inBodyID.native_address : 0), (outLinearVelocity != null ? outLinearVelocity.native_address : 0), (outAngularVelocity != null ? outAngularVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.GetLinearAndAngularVelocity(inBodyID_addr, outLinearVelocity_addr, outAngularVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "outLinearVelocity_addr", "outAngularVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.GetLinearAndAngularVelocity(inBodyID_addr, outLinearVelocity_addr, outAngularVelocity_addr);")
    public static native void internal_native_GetLinearAndAngularVelocity(int this_addr, int inBodyID_addr, int outLinearVelocity_addr, int outAngularVelocity_addr);

    public void SetLinearVelocity(BodyID inBodyID, Vec3 inLinearVelocity) {
        internal_native_SetLinearVelocity(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inLinearVelocity != null ? inLinearVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetLinearVelocity(inBodyID_addr, inLinearVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inLinearVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetLinearVelocity(inBodyID_addr, inLinearVelocity_addr);")
    public static native void internal_native_SetLinearVelocity(int this_addr, int inBodyID_addr, int inLinearVelocity_addr);

    public Vec3 GetLinearVelocity(BodyID inBodyID) {
        int pointer = internal_native_GetLinearVelocity(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetLinearVelocity(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetLinearVelocity(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLinearVelocity(int this_addr, int inBodyID_addr);

    public void AddLinearVelocity(BodyID inBodyID, Vec3 inLinearVelocity) {
        internal_native_AddLinearVelocity(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inLinearVelocity != null ? inLinearVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddLinearVelocity(inBodyID_addr, inLinearVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inLinearVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddLinearVelocity(inBodyID_addr, inLinearVelocity_addr);")
    public static native void internal_native_AddLinearVelocity(int this_addr, int inBodyID_addr, int inLinearVelocity_addr);

    public void AddLinearAndAngularVelocity(BodyID inBodyID, Vec3 inLinearVelocity, Vec3 inAngularVelocity) {
        internal_native_AddLinearAndAngularVelocity(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inLinearVelocity != null ? inLinearVelocity.native_address : 0), (inAngularVelocity != null ? inAngularVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddLinearAndAngularVelocity(inBodyID_addr, inLinearVelocity_addr, inAngularVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inLinearVelocity_addr", "inAngularVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddLinearAndAngularVelocity(inBodyID_addr, inLinearVelocity_addr, inAngularVelocity_addr);")
    public static native void internal_native_AddLinearAndAngularVelocity(int this_addr, int inBodyID_addr, int inLinearVelocity_addr, int inAngularVelocity_addr);

    public void SetAngularVelocity(BodyID inBodyID, Vec3 inAngularVelocity) {
        internal_native_SetAngularVelocity(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inAngularVelocity != null ? inAngularVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetAngularVelocity(inBodyID_addr, inAngularVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inAngularVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetAngularVelocity(inBodyID_addr, inAngularVelocity_addr);")
    public static native void internal_native_SetAngularVelocity(int this_addr, int inBodyID_addr, int inAngularVelocity_addr);

    public Vec3 GetAngularVelocity(BodyID inBodyID) {
        int pointer = internal_native_GetAngularVelocity(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetAngularVelocity(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetAngularVelocity(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetAngularVelocity(int this_addr, int inBodyID_addr);

    public Vec3 GetPointVelocity(BodyID inBodyID, Vec3 inPoint) {
        int pointer = internal_native_GetPointVelocity(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inPoint != null ? inPoint.native_address : 0));
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_3 == null)
            Vec3_TEMP_GEN_3 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_3.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetPointVelocity(inBodyID_addr, inPoint_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inPoint_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetPointVelocity(inBodyID_addr, inPoint_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetPointVelocity(int this_addr, int inBodyID_addr, int inPoint_addr);

    public void SetPositionRotationAndVelocity(BodyID inBodyID, Vec3 inPosition, Quat inRotation, Vec3 inLinearVelocity, Vec3 inAngularVelocity) {
        internal_native_SetPositionRotationAndVelocity(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inPosition != null ? inPosition.native_address : 0), (inRotation != null ? inRotation.native_address : 0), (inLinearVelocity != null ? inLinearVelocity.native_address : 0), (inAngularVelocity != null ? inAngularVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetPositionRotationAndVelocity(inBodyID_addr, inPosition_addr, inRotation_addr, inLinearVelocity_addr, inAngularVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inPosition_addr", "inRotation_addr", "inLinearVelocity_addr", "inAngularVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetPositionRotationAndVelocity(inBodyID_addr, inPosition_addr, inRotation_addr, inLinearVelocity_addr, inAngularVelocity_addr);")
    public static native void internal_native_SetPositionRotationAndVelocity(int this_addr, int inBodyID_addr, int inPosition_addr, int inRotation_addr, int inLinearVelocity_addr, int inAngularVelocity_addr);

    public void MoveKinematic(BodyID inBodyID, Vec3 inPosition, Quat inRotation, float inDeltaTime) {
        internal_native_MoveKinematic(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inPosition != null ? inPosition.native_address : 0), (inRotation != null ? inRotation.native_address : 0), inDeltaTime);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.MoveKinematic(inBodyID_addr, inPosition_addr, inRotation_addr, inDeltaTime);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inPosition_addr", "inRotation_addr", "inDeltaTime"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.MoveKinematic(inBodyID_addr, inPosition_addr, inRotation_addr, inDeltaTime);")
    public static native void internal_native_MoveKinematic(int this_addr, int inBodyID_addr, int inPosition_addr, int inRotation_addr, float inDeltaTime);

    public void ActivateBody(BodyID inBodyID) {
        internal_native_ActivateBody(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.ActivateBody(inBodyID_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.ActivateBody(inBodyID_addr);")
    public static native void internal_native_ActivateBody(int this_addr, int inBodyID_addr);

    public void ActivateBodies(BodyIDMemRef inBodyIDs, int inNumber) {
        internal_native_ActivateBodies(native_address, (inBodyIDs != null ? inBodyIDs.native_address : 0), inNumber);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.ActivateBodies(inBodyIDs_addr, inNumber);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyIDs_addr", "inNumber"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.ActivateBodies(inBodyIDs_addr, inNumber);")
    public static native void internal_native_ActivateBodies(int this_addr, int inBodyIDs_addr, int inNumber);

    public void ActivateBodiesInAABox(AABox inBox, BroadPhaseLayerFilter inBroadPhaseLayerFilter, ObjectLayerFilter inObjectLayerFilter) {
        internal_native_ActivateBodiesInAABox(native_address, (inBox != null ? inBox.native_address : 0), (inBroadPhaseLayerFilter != null ? inBroadPhaseLayerFilter.native_address : 0), (inObjectLayerFilter != null ? inObjectLayerFilter.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.ActivateBodiesInAABox(inBox_addr, inBroadPhaseLayerFilter_addr, inObjectLayerFilter_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBox_addr", "inBroadPhaseLayerFilter_addr", "inObjectLayerFilter_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.ActivateBodiesInAABox(inBox_addr, inBroadPhaseLayerFilter_addr, inObjectLayerFilter_addr);")
    public static native void internal_native_ActivateBodiesInAABox(int this_addr, int inBox_addr, int inBroadPhaseLayerFilter_addr, int inObjectLayerFilter_addr);

    public void DeactivateBody(BodyID inBodyID) {
        internal_native_DeactivateBody(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.DeactivateBody(inBodyID_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.DeactivateBody(inBodyID_addr);")
    public static native void internal_native_DeactivateBody(int this_addr, int inBodyID_addr);

    public void DeactivateBodies(BodyIDMemRef inBodyIDs, int inNumber) {
        internal_native_DeactivateBodies(native_address, (inBodyIDs != null ? inBodyIDs.native_address : 0), inNumber);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.DeactivateBodies(inBodyIDs_addr, inNumber);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyIDs_addr", "inNumber"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.DeactivateBodies(inBodyIDs_addr, inNumber);")
    public static native void internal_native_DeactivateBodies(int this_addr, int inBodyIDs_addr, int inNumber);

    public boolean IsActive(BodyID inBodyID) {
        return internal_native_IsActive(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.IsActive(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.IsActive(inBodyID_addr);return returnedJSObj;")
    public static native boolean internal_native_IsActive(int this_addr, int inBodyID_addr);

    public void ResetSleepTimer(BodyID inBodyID) {
        internal_native_ResetSleepTimer(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.ResetSleepTimer(inBodyID_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.ResetSleepTimer(inBodyID_addr);")
    public static native void internal_native_ResetSleepTimer(int this_addr, int inBodyID_addr);

    public EBodyType GetBodyType(BodyID inBodyID) {
        int value = internal_native_GetBodyType(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        return EBodyType.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetBodyType(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetBodyType(inBodyID_addr);return returnedJSObj;")
    public static native int internal_native_GetBodyType(int this_addr, int inBodyID_addr);

    public void SetMotionType(BodyID inBodyID, EMotionType inMotionType, EActivation inActivationMode) {
        internal_native_SetMotionType(native_address, (inBodyID != null ? inBodyID.native_address : 0), (int) (inMotionType != null ? inMotionType.getValue() : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetMotionType(inBodyID_addr, inMotionType, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inMotionType", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetMotionType(inBodyID_addr, inMotionType, inActivationMode);")
    public static native void internal_native_SetMotionType(int this_addr, int inBodyID_addr, int inMotionType, int inActivationMode);

    public EMotionType GetMotionType(BodyID inBodyID) {
        int value = internal_native_GetMotionType(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        return EMotionType.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetMotionType(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetMotionType(inBodyID_addr);return returnedJSObj;")
    public static native int internal_native_GetMotionType(int this_addr, int inBodyID_addr);

    public void SetMotionQuality(BodyID inBodyID, EMotionQuality inMotionQuality) {
        internal_native_SetMotionQuality(native_address, (inBodyID != null ? inBodyID.native_address : 0), (int) (inMotionQuality != null ? inMotionQuality.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetMotionQuality(inBodyID_addr, inMotionQuality);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inMotionQuality"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetMotionQuality(inBodyID_addr, inMotionQuality);")
    public static native void internal_native_SetMotionQuality(int this_addr, int inBodyID_addr, int inMotionQuality);

    public EMotionQuality GetMotionQuality(BodyID inBodyID) {
        int value = internal_native_GetMotionQuality(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        return EMotionQuality.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetMotionQuality(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetMotionQuality(inBodyID_addr);return returnedJSObj;")
    public static native int internal_native_GetMotionQuality(int this_addr, int inBodyID_addr);

    public Mat44 GetInverseInertia(BodyID inBodyID) {
        int pointer = internal_native_GetInverseInertia(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (Mat44_TEMP_GEN_2 == null)
            Mat44_TEMP_GEN_2 = new Mat44((byte) 1, (char) 1);
        Mat44_TEMP_GEN_2.internal_reset(pointer, false);
        return Mat44_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetInverseInertia(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetInverseInertia(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetInverseInertia(int this_addr, int inBodyID_addr);

    public void SetRestitution(BodyID inBodyID, float inRestitution) {
        internal_native_SetRestitution(native_address, (inBodyID != null ? inBodyID.native_address : 0), inRestitution);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetRestitution(inBodyID_addr, inRestitution);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inRestitution"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetRestitution(inBodyID_addr, inRestitution);")
    public static native void internal_native_SetRestitution(int this_addr, int inBodyID_addr, float inRestitution);

    public float GetRestitution(BodyID inBodyID) {
        return internal_native_GetRestitution(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetRestitution(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetRestitution(inBodyID_addr);return returnedJSObj;")
    public static native float internal_native_GetRestitution(int this_addr, int inBodyID_addr);

    public void SetFriction(BodyID inBodyID, float inFriction) {
        internal_native_SetFriction(native_address, (inBodyID != null ? inBodyID.native_address : 0), inFriction);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetFriction(inBodyID_addr, inFriction);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inFriction"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetFriction(inBodyID_addr, inFriction);")
    public static native void internal_native_SetFriction(int this_addr, int inBodyID_addr, float inFriction);

    public float GetFriction(BodyID inBodyID) {
        return internal_native_GetFriction(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetFriction(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetFriction(inBodyID_addr);return returnedJSObj;")
    public static native float internal_native_GetFriction(int this_addr, int inBodyID_addr);

    public void SetGravityFactor(BodyID inBodyID, float inFactor) {
        internal_native_SetGravityFactor(native_address, (inBodyID != null ? inBodyID.native_address : 0), inFactor);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetGravityFactor(inBodyID_addr, inFactor);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inFactor"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetGravityFactor(inBodyID_addr, inFactor);")
    public static native void internal_native_SetGravityFactor(int this_addr, int inBodyID_addr, float inFactor);

    public float GetGravityFactor(BodyID inBodyID) {
        return internal_native_GetGravityFactor(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetGravityFactor(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetGravityFactor(inBodyID_addr);return returnedJSObj;")
    public static native float internal_native_GetGravityFactor(int this_addr, int inBodyID_addr);

    public void SetUseManifoldReduction(BodyID inBodyID, boolean inUseReduction) {
        internal_native_SetUseManifoldReduction(native_address, (inBodyID != null ? inBodyID.native_address : 0), inUseReduction);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetUseManifoldReduction(inBodyID_addr, inUseReduction);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inUseReduction"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetUseManifoldReduction(inBodyID_addr, inUseReduction);")
    public static native void internal_native_SetUseManifoldReduction(int this_addr, int inBodyID_addr, boolean inUseReduction);

    public boolean GetUseManifoldReduction(BodyID inBodyID) {
        return internal_native_GetUseManifoldReduction(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetUseManifoldReduction(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetUseManifoldReduction(inBodyID_addr);return returnedJSObj;")
    public static native boolean internal_native_GetUseManifoldReduction(int this_addr, int inBodyID_addr);

    public void SetCollisionGroup(BodyID inBodyID, CollisionGroup inCollisionGroup) {
        internal_native_SetCollisionGroup(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inCollisionGroup != null ? inCollisionGroup.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetCollisionGroup(inBodyID_addr, inCollisionGroup_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inCollisionGroup_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetCollisionGroup(inBodyID_addr, inCollisionGroup_addr);")
    public static native void internal_native_SetCollisionGroup(int this_addr, int inBodyID_addr, int inCollisionGroup_addr);

    public CollisionGroup GetCollisionGroup(BodyID inBodyID) {
        int pointer = internal_native_GetCollisionGroup(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (CollisionGroup_TEMP_GEN_0 == null)
            CollisionGroup_TEMP_GEN_0 = new CollisionGroup((byte) 1, (char) 1);
        CollisionGroup_TEMP_GEN_0.internal_reset(pointer, false);
        return CollisionGroup_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetCollisionGroup(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetCollisionGroup(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetCollisionGroup(int this_addr, int inBodyID_addr);

    public void AddForce(BodyID inBodyID, Vec3 inForce, EActivation inActivationMode) {
        internal_native_AddForce(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inForce != null ? inForce.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddForce(inBodyID_addr, inForce_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inForce_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddForce(inBodyID_addr, inForce_addr, inActivationMode);")
    public static native void internal_native_AddForce(int this_addr, int inBodyID_addr, int inForce_addr, int inActivationMode);

    public void AddForce(BodyID inBodyID, Vec3 inForce, Vec3 inPoint, EActivation inActivationMode) {
        internal_native_AddForce(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inForce != null ? inForce.native_address : 0), (inPoint != null ? inPoint.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddForce(inBodyID_addr, inForce_addr, inPoint_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inForce_addr", "inPoint_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddForce(inBodyID_addr, inForce_addr, inPoint_addr, inActivationMode);")
    public static native void internal_native_AddForce(int this_addr, int inBodyID_addr, int inForce_addr, int inPoint_addr, int inActivationMode);

    public void AddTorque(BodyID inBodyID, Vec3 inTorque, EActivation inActivationMode) {
        internal_native_AddTorque(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inTorque != null ? inTorque.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddTorque(inBodyID_addr, inTorque_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inTorque_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddTorque(inBodyID_addr, inTorque_addr, inActivationMode);")
    public static native void internal_native_AddTorque(int this_addr, int inBodyID_addr, int inTorque_addr, int inActivationMode);

    public void AddForceAndTorque(BodyID inBodyID, Vec3 inForce, Vec3 inTorque, EActivation inActivationMode) {
        internal_native_AddForceAndTorque(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inForce != null ? inForce.native_address : 0), (inTorque != null ? inTorque.native_address : 0), (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddForceAndTorque(inBodyID_addr, inForce_addr, inTorque_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inForce_addr", "inTorque_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddForceAndTorque(inBodyID_addr, inForce_addr, inTorque_addr, inActivationMode);")
    public static native void internal_native_AddForceAndTorque(int this_addr, int inBodyID_addr, int inForce_addr, int inTorque_addr, int inActivationMode);

    public boolean ApplyBuoyancyImpulse(BodyID inBodyID, Vec3 inSurfacePosition, Vec3 inSurfaceNormal, float inBuoyancy, float inLinearDrag, float inAngularDrag, Vec3 inFluidVelocity, Vec3 inGravity, float inDeltaTime) {
        return internal_native_ApplyBuoyancyImpulse(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inSurfacePosition != null ? inSurfacePosition.native_address : 0), (inSurfaceNormal != null ? inSurfaceNormal.native_address : 0), inBuoyancy, inLinearDrag, inAngularDrag, (inFluidVelocity != null ? inFluidVelocity.native_address : 0), (inGravity != null ? inGravity.native_address : 0), inDeltaTime);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.ApplyBuoyancyImpulse(inBodyID_addr, inSurfacePosition_addr, inSurfaceNormal_addr, inBuoyancy, inLinearDrag, inAngularDrag, inFluidVelocity_addr, inGravity_addr, inDeltaTime);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inSurfacePosition_addr", "inSurfaceNormal_addr", "inBuoyancy", "inLinearDrag", "inAngularDrag", "inFluidVelocity_addr", "inGravity_addr", "inDeltaTime"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.ApplyBuoyancyImpulse(inBodyID_addr, inSurfacePosition_addr, inSurfaceNormal_addr, inBuoyancy, inLinearDrag, inAngularDrag, inFluidVelocity_addr, inGravity_addr, inDeltaTime);return returnedJSObj;")
    public static native boolean internal_native_ApplyBuoyancyImpulse(int this_addr, int inBodyID_addr, int inSurfacePosition_addr, int inSurfaceNormal_addr, float inBuoyancy, float inLinearDrag, float inAngularDrag, int inFluidVelocity_addr, int inGravity_addr, float inDeltaTime);

    public void AddImpulse(BodyID inBodyID, Vec3 inImpulse) {
        internal_native_AddImpulse(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inImpulse != null ? inImpulse.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddImpulse(inBodyID_addr, inImpulse_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inImpulse_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddImpulse(inBodyID_addr, inImpulse_addr);")
    public static native void internal_native_AddImpulse(int this_addr, int inBodyID_addr, int inImpulse_addr);

    public void AddImpulse(BodyID inBodyID, Vec3 inImpulse, Vec3 inPosition) {
        internal_native_AddImpulse(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inImpulse != null ? inImpulse.native_address : 0), (inPosition != null ? inPosition.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddImpulse(inBodyID_addr, inImpulse_addr, inPosition_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inImpulse_addr", "inPosition_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddImpulse(inBodyID_addr, inImpulse_addr, inPosition_addr);")
    public static native void internal_native_AddImpulse(int this_addr, int inBodyID_addr, int inImpulse_addr, int inPosition_addr);

    public void AddAngularImpulse(BodyID inBodyID, Vec3 inAngularImpulse) {
        internal_native_AddAngularImpulse(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inAngularImpulse != null ? inAngularImpulse.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.AddAngularImpulse(inBodyID_addr, inAngularImpulse_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inAngularImpulse_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.AddAngularImpulse(inBodyID_addr, inAngularImpulse_addr);")
    public static native void internal_native_AddAngularImpulse(int this_addr, int inBodyID_addr, int inAngularImpulse_addr);

    public TransformedShape GetTransformedShape(BodyID inBodyID) {
        int pointer = internal_native_GetTransformedShape(native_address, (inBodyID != null ? inBodyID.native_address : 0));
        if (pointer == 0)
            return null;
        if (TransformedShape_TEMP_GEN_0 == null)
            TransformedShape_TEMP_GEN_0 = new TransformedShape((byte) 1, (char) 1);
        TransformedShape_TEMP_GEN_0.internal_reset(pointer, false);
        return TransformedShape_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetTransformedShape(inBodyID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetTransformedShape(inBodyID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTransformedShape(int this_addr, int inBodyID_addr);

    public long GetUserData(BodyID inBodyID) {
        return internal_native_GetUserData(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetUserData(inBodyID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetUserData(inBodyID_addr);return returnedJSObj;")
    public static native int internal_native_GetUserData(int this_addr, int inBodyID_addr);

    public void SetUserData(BodyID inBodyID, long inUserData) {
        internal_native_SetUserData(native_address, (inBodyID != null ? inBodyID.native_address : 0), (int) inUserData);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.SetUserData(inBodyID_addr, inUserData);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inUserData"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.SetUserData(inBodyID_addr, inUserData);")
    public static native void internal_native_SetUserData(int this_addr, int inBodyID_addr, int inUserData);

    public PhysicsMaterial GetMaterial(BodyID inBodyID, SubShapeID inSubShapeID) {
        int pointer = internal_native_GetMaterial(native_address, (inBodyID != null ? inBodyID.native_address : 0), (inSubShapeID != null ? inSubShapeID.native_address : 0));
        if (pointer == 0)
            return null;
        if (PhysicsMaterial_TEMP_GEN_0 == null)
            PhysicsMaterial_TEMP_GEN_0 = new PhysicsMaterial((byte) 1, (char) 1);
        PhysicsMaterial_TEMP_GEN_0.internal_reset(pointer, false);
        return PhysicsMaterial_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
var returnedJSObj = jsObj.GetMaterial(inBodyID_addr, inSubShapeID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr", "inSubShapeID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);var returnedJSObj = jsObj.GetMaterial(inBodyID_addr, inSubShapeID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetMaterial(int this_addr, int inBodyID_addr, int inSubShapeID_addr);

    public void InvalidateContactCache(BodyID inBodyID) {
        internal_native_InvalidateContactCache(native_address, (inBodyID != null ? inBodyID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);
jsObj.InvalidateContactCache(inBodyID_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.BodyInterface);jsObj.InvalidateContactCache(inBodyID_addr);")
    public static native void internal_native_InvalidateContactCache(int this_addr, int inBodyID_addr);
}
