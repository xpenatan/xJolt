/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.body;

import gen.jolt.idl.IDLBase;
import gen.jolt.enums.EMotionQuality;
import gen.jolt.enums.EAllowedDOFs;
import gen.jolt.math.Vec3;
import gen.jolt.math.Quat;
import gen.jolt.math.Mat44;

public class MotionProperties extends IDLBase {

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    private Quat Quat_TEMP_GEN_0;

    private Mat44 Mat44_TEMP_GEN_0;

    private Mat44 Mat44_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_3;

    private Vec3 Vec3_TEMP_GEN_4;

    private Vec3 Vec3_TEMP_GEN_5;

    private Vec3 Vec3_TEMP_GEN_6;

    private Vec3 Vec3_TEMP_GEN_7;

    private Vec3 Vec3_TEMP_GEN_8;

    static public final MotionProperties T_01 = new MotionProperties((byte) 1, (char) 1);

    static public final MotionProperties T_02 = new MotionProperties((byte) 1, (char) 1);

    static public final MotionProperties T_03 = new MotionProperties((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public MotionProperties(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public EMotionQuality GetMotionQuality() {
        int value = internal_native_GetMotionQuality(native_address);
        return EMotionQuality.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetMotionQuality();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetMotionQuality();return returnedJSObj;")
    public static native int internal_native_GetMotionQuality(int this_addr);

    public EAllowedDOFs GetAllowedDOFs() {
        int value = internal_native_GetAllowedDOFs(native_address);
        return EAllowedDOFs.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetAllowedDOFs();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetAllowedDOFs();return returnedJSObj;")
    public static native int internal_native_GetAllowedDOFs(int this_addr);

    public boolean GetAllowSleeping() {
        return internal_native_GetAllowSleeping(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetAllowSleeping();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetAllowSleeping();return returnedJSObj;")
    public static native boolean internal_native_GetAllowSleeping(int this_addr);

    public Vec3 GetLinearVelocity() {
        int pointer = internal_native_GetLinearVelocity(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetLinearVelocity();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetLinearVelocity();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLinearVelocity(int this_addr);

    public void SetLinearVelocity(Vec3 inVelocity) {
        internal_native_SetLinearVelocity(native_address, (inVelocity != null ? inVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetLinearVelocity(inVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetLinearVelocity(inVelocity_addr);")
    public static native void internal_native_SetLinearVelocity(int this_addr, int inVelocity_addr);

    public void SetLinearVelocityClamped(Vec3 inVelocity) {
        internal_native_SetLinearVelocityClamped(native_address, (inVelocity != null ? inVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetLinearVelocityClamped(inVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetLinearVelocityClamped(inVelocity_addr);")
    public static native void internal_native_SetLinearVelocityClamped(int this_addr, int inVelocity_addr);

    public Vec3 GetAngularVelocity() {
        int pointer = internal_native_GetAngularVelocity(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetAngularVelocity();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetAngularVelocity();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetAngularVelocity(int this_addr);

    public void SetAngularVelocity(Vec3 inVelocity) {
        internal_native_SetAngularVelocity(native_address, (inVelocity != null ? inVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetAngularVelocity(inVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetAngularVelocity(inVelocity_addr);")
    public static native void internal_native_SetAngularVelocity(int this_addr, int inVelocity_addr);

    public void SetAngularVelocityClamped(Vec3 inVelocity) {
        internal_native_SetAngularVelocityClamped(native_address, (inVelocity != null ? inVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetAngularVelocityClamped(inVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetAngularVelocityClamped(inVelocity_addr);")
    public static native void internal_native_SetAngularVelocityClamped(int this_addr, int inVelocity_addr);

    public void MoveKinematic(Vec3 inPosition, Quat inRotation, float inDeltaTime) {
        internal_native_MoveKinematic(native_address, (inPosition != null ? inPosition.native_address : 0), (inRotation != null ? inRotation.native_address : 0), inDeltaTime);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.MoveKinematic(inPosition_addr, inRotation_addr, inDeltaTime);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPosition_addr", "inRotation_addr", "inDeltaTime"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.MoveKinematic(inPosition_addr, inRotation_addr, inDeltaTime);")
    public static native void internal_native_MoveKinematic(int this_addr, int inPosition_addr, int inRotation_addr, float inDeltaTime);

    public float GetMaxLinearVelocity() {
        return internal_native_GetMaxLinearVelocity(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetMaxLinearVelocity();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetMaxLinearVelocity();return returnedJSObj;")
    public static native float internal_native_GetMaxLinearVelocity(int this_addr);

    public void SetMaxLinearVelocity(float inVelocity) {
        internal_native_SetMaxLinearVelocity(native_address, inVelocity);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetMaxLinearVelocity(inVelocity);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inVelocity"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetMaxLinearVelocity(inVelocity);")
    public static native void internal_native_SetMaxLinearVelocity(int this_addr, float inVelocity);

    public float GetMaxAngularVelocity() {
        return internal_native_GetMaxAngularVelocity(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetMaxAngularVelocity();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetMaxAngularVelocity();return returnedJSObj;")
    public static native float internal_native_GetMaxAngularVelocity(int this_addr);

    public void SetMaxAngularVelocity(float inVelocity) {
        internal_native_SetMaxAngularVelocity(native_address, inVelocity);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetMaxAngularVelocity(inVelocity);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inVelocity"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetMaxAngularVelocity(inVelocity);")
    public static native void internal_native_SetMaxAngularVelocity(int this_addr, float inVelocity);

    public void ClampLinearVelocity() {
        internal_native_ClampLinearVelocity(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.ClampLinearVelocity();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.ClampLinearVelocity();")
    public static native void internal_native_ClampLinearVelocity(int this_addr);

    public void ClampAngularVelocity() {
        internal_native_ClampAngularVelocity(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.ClampAngularVelocity();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.ClampAngularVelocity();")
    public static native void internal_native_ClampAngularVelocity(int this_addr);

    public float GetLinearDamping() {
        return internal_native_GetLinearDamping(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetLinearDamping();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetLinearDamping();return returnedJSObj;")
    public static native float internal_native_GetLinearDamping(int this_addr);

    public void SetLinearDamping(float inDamping) {
        internal_native_SetLinearDamping(native_address, inDamping);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetLinearDamping(inDamping);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inDamping"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetLinearDamping(inDamping);")
    public static native void internal_native_SetLinearDamping(int this_addr, float inDamping);

    public float GetAngularDamping() {
        return internal_native_GetAngularDamping(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetAngularDamping();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetAngularDamping();return returnedJSObj;")
    public static native float internal_native_GetAngularDamping(int this_addr);

    public void SetAngularDamping(float inDamping) {
        internal_native_SetAngularDamping(native_address, inDamping);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetAngularDamping(inDamping);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inDamping"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetAngularDamping(inDamping);")
    public static native void internal_native_SetAngularDamping(int this_addr, float inDamping);

    public float GetGravityFactor() {
        return internal_native_GetGravityFactor(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetGravityFactor();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetGravityFactor();return returnedJSObj;")
    public static native float internal_native_GetGravityFactor(int this_addr);

    public void SetGravityFactor(float inFactor) {
        internal_native_SetGravityFactor(native_address, inFactor);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetGravityFactor(inFactor);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inFactor"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetGravityFactor(inFactor);")
    public static native void internal_native_SetGravityFactor(int this_addr, float inFactor);

    public void SetMassProperties(EAllowedDOFs inAllowedDOFs, MassProperties inMassProperties) {
        internal_native_SetMassProperties(native_address, (int) (inAllowedDOFs != null ? inAllowedDOFs.getValue() : 0), (inMassProperties != null ? inMassProperties.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetMassProperties(inAllowedDOFs, inMassProperties_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAllowedDOFs", "inMassProperties_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetMassProperties(inAllowedDOFs, inMassProperties_addr);")
    public static native void internal_native_SetMassProperties(int this_addr, int inAllowedDOFs, int inMassProperties_addr);

    public float GetInverseMass() {
        return internal_native_GetInverseMass(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetInverseMass();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetInverseMass();return returnedJSObj;")
    public static native float internal_native_GetInverseMass(int this_addr);

    public float GetInverseMassUnchecked() {
        return internal_native_GetInverseMassUnchecked(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetInverseMassUnchecked();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetInverseMassUnchecked();return returnedJSObj;")
    public static native float internal_native_GetInverseMassUnchecked(int this_addr);

    public void SetInverseMass(float inInvM) {
        internal_native_SetInverseMass(native_address, inInvM);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetInverseMass(inInvM);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inInvM"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetInverseMass(inInvM);")
    public static native void internal_native_SetInverseMass(int this_addr, float inInvM);

    public Vec3 GetInverseInertiaDiagonal() {
        int pointer = internal_native_GetInverseInertiaDiagonal(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetInverseInertiaDiagonal();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetInverseInertiaDiagonal();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetInverseInertiaDiagonal(int this_addr);

    public Quat GetInertiaRotation() {
        int pointer = internal_native_GetInertiaRotation(native_address);
        if (pointer == 0)
            return null;
        if (Quat_TEMP_GEN_0 == null)
            Quat_TEMP_GEN_0 = new Quat((byte) 1, (char) 1);
        Quat_TEMP_GEN_0.internal_reset(pointer, false);
        return Quat_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetInertiaRotation();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetInertiaRotation();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetInertiaRotation(int this_addr);

    public void SetInverseInertia(Vec3 inInvI, Quat inRotation) {
        internal_native_SetInverseInertia(native_address, (inInvI != null ? inInvI.native_address : 0), (inRotation != null ? inRotation.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetInverseInertia(inInvI_addr, inRotation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inInvI_addr", "inRotation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetInverseInertia(inInvI_addr, inRotation_addr);")
    public static native void internal_native_SetInverseInertia(int this_addr, int inInvI_addr, int inRotation_addr);

    public Mat44 GetLocalSpaceInverseInertia() {
        int pointer = internal_native_GetLocalSpaceInverseInertia(native_address);
        if (pointer == 0)
            return null;
        if (Mat44_TEMP_GEN_0 == null)
            Mat44_TEMP_GEN_0 = new Mat44((byte) 1, (char) 1);
        Mat44_TEMP_GEN_0.internal_reset(pointer, false);
        return Mat44_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetLocalSpaceInverseInertia();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetLocalSpaceInverseInertia();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLocalSpaceInverseInertia(int this_addr);

    public Mat44 GetInverseInertiaForRotation(Mat44 inRotation) {
        int pointer = internal_native_GetInverseInertiaForRotation(native_address, (inRotation != null ? inRotation.native_address : 0));
        if (pointer == 0)
            return null;
        if (Mat44_TEMP_GEN_1 == null)
            Mat44_TEMP_GEN_1 = new Mat44((byte) 1, (char) 1);
        Mat44_TEMP_GEN_1.internal_reset(pointer, false);
        return Mat44_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetInverseInertiaForRotation(inRotation_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inRotation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetInverseInertiaForRotation(inRotation_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetInverseInertiaForRotation(int this_addr, int inRotation_addr);

    public Vec3 MultiplyWorldSpaceInverseInertiaByVector(Quat inRotation, Vec3 inV) {
        int pointer = internal_native_MultiplyWorldSpaceInverseInertiaByVector(native_address, (inRotation != null ? inRotation.native_address : 0), (inV != null ? inV.native_address : 0));
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_3 == null)
            Vec3_TEMP_GEN_3 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_3.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.MultiplyWorldSpaceInverseInertiaByVector(inRotation_addr, inV_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inRotation_addr", "inV_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.MultiplyWorldSpaceInverseInertiaByVector(inRotation_addr, inV_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_MultiplyWorldSpaceInverseInertiaByVector(int this_addr, int inRotation_addr, int inV_addr);

    public Vec3 GetPointVelocityCOM(Vec3 inPointRelativeToCOM) {
        int pointer = internal_native_GetPointVelocityCOM(native_address, (inPointRelativeToCOM != null ? inPointRelativeToCOM.native_address : 0));
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_4 == null)
            Vec3_TEMP_GEN_4 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_4.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_4;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetPointVelocityCOM(inPointRelativeToCOM_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPointRelativeToCOM_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetPointVelocityCOM(inPointRelativeToCOM_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetPointVelocityCOM(int this_addr, int inPointRelativeToCOM_addr);

    public Vec3 GetAccumulatedForce() {
        int pointer = internal_native_GetAccumulatedForce(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_5 == null)
            Vec3_TEMP_GEN_5 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_5.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_5;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetAccumulatedForce();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetAccumulatedForce();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetAccumulatedForce(int this_addr);

    public Vec3 GetAccumulatedTorque() {
        int pointer = internal_native_GetAccumulatedTorque(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_6 == null)
            Vec3_TEMP_GEN_6 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_6.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_6;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetAccumulatedTorque();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetAccumulatedTorque();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetAccumulatedTorque(int this_addr);

    public void ResetForce() {
        internal_native_ResetForce(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.ResetForce();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.ResetForce();")
    public static native void internal_native_ResetForce(int this_addr);

    public void ResetTorque() {
        internal_native_ResetTorque(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.ResetTorque();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.ResetTorque();")
    public static native void internal_native_ResetTorque(int this_addr);

    public void ResetMotion() {
        internal_native_ResetMotion(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.ResetMotion();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.ResetMotion();")
    public static native void internal_native_ResetMotion(int this_addr);

    public Vec3 LockTranslation(Vec3 inV) {
        int pointer = internal_native_LockTranslation(native_address, (inV != null ? inV.native_address : 0));
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_7 == null)
            Vec3_TEMP_GEN_7 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_7.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_7;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.LockTranslation(inV_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inV_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.LockTranslation(inV_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_LockTranslation(int this_addr, int inV_addr);

    public Vec3 LockAngular(Vec3 inV) {
        int pointer = internal_native_LockAngular(native_address, (inV != null ? inV.native_address : 0));
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_8 == null)
            Vec3_TEMP_GEN_8 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_8.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_8;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.LockAngular(inV_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inV_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.LockAngular(inV_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_LockAngular(int this_addr, int inV_addr);

    public void SetNumVelocityStepsOverride(int inN) {
        internal_native_SetNumVelocityStepsOverride(native_address, inN);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetNumVelocityStepsOverride(inN);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inN"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetNumVelocityStepsOverride(inN);")
    public static native void internal_native_SetNumVelocityStepsOverride(int this_addr, int inN);

    public int GetNumVelocityStepsOverride() {
        return internal_native_GetNumVelocityStepsOverride(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetNumVelocityStepsOverride();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetNumVelocityStepsOverride();return returnedJSObj;")
    public static native int internal_native_GetNumVelocityStepsOverride(int this_addr);

    public void SetNumPositionStepsOverride(int inN) {
        internal_native_SetNumPositionStepsOverride(native_address, inN);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
jsObj.SetNumPositionStepsOverride(inN);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inN"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);jsObj.SetNumPositionStepsOverride(inN);")
    public static native void internal_native_SetNumPositionStepsOverride(int this_addr, int inN);

    public int GetNumPositionStepsOverride() {
        return internal_native_GetNumPositionStepsOverride(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);
var returnedJSObj = jsObj.GetNumPositionStepsOverride();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotionProperties);var returnedJSObj = jsObj.GetNumPositionStepsOverride();return returnedJSObj;")
    public static native int internal_native_GetNumPositionStepsOverride(int this_addr);
}
