/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.collision;

import gen.jolt.physics.body.Body;
import gen.jolt.math.Vec3;
import gen.jolt.physics.collision.shape.SubShapeIDPair;

public class ContactListenerEm extends ContactListener {

    static private Body Body_TEMP_STATIC_GEN_0;

    static private Body Body_TEMP_STATIC_GEN_1;

    static private Vec3 Vec3_TEMP_STATIC_GEN_0;

    static private CollideShapeResult CollideShapeResult_TEMP_STATIC_GEN_0;

    static private Body Body_TEMP_STATIC_GEN_2;

    static private Body Body_TEMP_STATIC_GEN_3;

    static private ContactManifold ContactManifold_TEMP_STATIC_GEN_0;

    static private ContactSettings ContactSettings_TEMP_STATIC_GEN_0;

    static private Body Body_TEMP_STATIC_GEN_4;

    static private Body Body_TEMP_STATIC_GEN_5;

    static private ContactManifold ContactManifold_TEMP_STATIC_GEN_1;

    static private ContactSettings ContactSettings_TEMP_STATIC_GEN_1;

    static private SubShapeIDPair SubShapeIDPair_TEMP_STATIC_GEN_0;

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public ContactListenerEm(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactListenerJS);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactListenerJS);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public ContactListenerEm() {
        super((byte) 1, (char) 1);
        int addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        OnContactValidate OnContactValidate = new OnContactValidate() {

            public int OnContactValidate(int inBody1_addr, int inBody2_addr, int inBaseOffset_addr, int inCollisionResult_addr) {
                return internal_OnContactValidate(inBody1_addr, inBody2_addr, inBaseOffset_addr, inCollisionResult_addr);
            }
        };
        OnContactAdded OnContactAdded = new OnContactAdded() {

            public void OnContactAdded(int inBody1_addr, int inBody2_addr, int inManifold_addr, int ioSettings_addr) {
                internal_OnContactAdded(inBody1_addr, inBody2_addr, inManifold_addr, ioSettings_addr);
            }
        };
        OnContactPersisted OnContactPersisted = new OnContactPersisted() {

            public void OnContactPersisted(int inBody1_addr, int inBody2_addr, int inManifold_addr, int ioSettings_addr) {
                internal_OnContactPersisted(inBody1_addr, inBody2_addr, inManifold_addr, ioSettings_addr);
            }
        };
        OnContactRemoved OnContactRemoved = new OnContactRemoved() {

            public void OnContactRemoved(int inSubShapePair_addr) {
                internal_OnContactRemoved(inSubShapePair_addr);
            }
        };
        internal_native_setupCallback(native_address, OnContactValidate, OnContactAdded, OnContactPersisted, OnContactRemoved);
    }

    protected int OnContactValidate(Body inBody1, Body inBody2, Vec3 inBaseOffset, CollideShapeResult inCollisionResult) {
        return 0;
    }

    private int internal_OnContactValidate(int inBody1_addr, int inBody2_addr, int inBaseOffset_addr, int inCollisionResult_addr) {
        if (Body_TEMP_STATIC_GEN_0 == null)
            Body_TEMP_STATIC_GEN_0 = new Body((byte) 1, (char) 1);
        Body_TEMP_STATIC_GEN_0.internal_reset(inBody1_addr, false);
        if (Body_TEMP_STATIC_GEN_1 == null)
            Body_TEMP_STATIC_GEN_1 = new Body((byte) 1, (char) 1);
        Body_TEMP_STATIC_GEN_1.internal_reset(inBody2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_0 == null)
            Vec3_TEMP_STATIC_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_STATIC_GEN_0.internal_reset(inBaseOffset_addr, false);
        if (CollideShapeResult_TEMP_STATIC_GEN_0 == null)
            CollideShapeResult_TEMP_STATIC_GEN_0 = new CollideShapeResult((byte) 1, (char) 1);
        CollideShapeResult_TEMP_STATIC_GEN_0.internal_reset(inCollisionResult_addr, false);
        return OnContactValidate(Body_TEMP_STATIC_GEN_0, Body_TEMP_STATIC_GEN_1, Vec3_TEMP_STATIC_GEN_0, CollideShapeResult_TEMP_STATIC_GEN_0);
    }

    protected void OnContactAdded(Body inBody1, Body inBody2, ContactManifold inManifold, ContactSettings ioSettings) {
    }

    private void internal_OnContactAdded(int inBody1_addr, int inBody2_addr, int inManifold_addr, int ioSettings_addr) {
        if (Body_TEMP_STATIC_GEN_2 == null)
            Body_TEMP_STATIC_GEN_2 = new Body((byte) 1, (char) 1);
        Body_TEMP_STATIC_GEN_2.internal_reset(inBody1_addr, false);
        if (Body_TEMP_STATIC_GEN_3 == null)
            Body_TEMP_STATIC_GEN_3 = new Body((byte) 1, (char) 1);
        Body_TEMP_STATIC_GEN_3.internal_reset(inBody2_addr, false);
        if (ContactManifold_TEMP_STATIC_GEN_0 == null)
            ContactManifold_TEMP_STATIC_GEN_0 = new ContactManifold((byte) 1, (char) 1);
        ContactManifold_TEMP_STATIC_GEN_0.internal_reset(inManifold_addr, false);
        if (ContactSettings_TEMP_STATIC_GEN_0 == null)
            ContactSettings_TEMP_STATIC_GEN_0 = new ContactSettings((byte) 1, (char) 1);
        ContactSettings_TEMP_STATIC_GEN_0.internal_reset(ioSettings_addr, false);
        OnContactAdded(Body_TEMP_STATIC_GEN_2, Body_TEMP_STATIC_GEN_3, ContactManifold_TEMP_STATIC_GEN_0, ContactSettings_TEMP_STATIC_GEN_0);
    }

    protected void OnContactPersisted(Body inBody1, Body inBody2, ContactManifold inManifold, ContactSettings ioSettings) {
    }

    private void internal_OnContactPersisted(int inBody1_addr, int inBody2_addr, int inManifold_addr, int ioSettings_addr) {
        if (Body_TEMP_STATIC_GEN_4 == null)
            Body_TEMP_STATIC_GEN_4 = new Body((byte) 1, (char) 1);
        Body_TEMP_STATIC_GEN_4.internal_reset(inBody1_addr, false);
        if (Body_TEMP_STATIC_GEN_5 == null)
            Body_TEMP_STATIC_GEN_5 = new Body((byte) 1, (char) 1);
        Body_TEMP_STATIC_GEN_5.internal_reset(inBody2_addr, false);
        if (ContactManifold_TEMP_STATIC_GEN_1 == null)
            ContactManifold_TEMP_STATIC_GEN_1 = new ContactManifold((byte) 1, (char) 1);
        ContactManifold_TEMP_STATIC_GEN_1.internal_reset(inManifold_addr, false);
        if (ContactSettings_TEMP_STATIC_GEN_1 == null)
            ContactSettings_TEMP_STATIC_GEN_1 = new ContactSettings((byte) 1, (char) 1);
        ContactSettings_TEMP_STATIC_GEN_1.internal_reset(ioSettings_addr, false);
        OnContactPersisted(Body_TEMP_STATIC_GEN_4, Body_TEMP_STATIC_GEN_5, ContactManifold_TEMP_STATIC_GEN_1, ContactSettings_TEMP_STATIC_GEN_1);
    }

    protected void OnContactRemoved(SubShapeIDPair inSubShapePair) {
    }

    private void internal_OnContactRemoved(int inSubShapePair_addr) {
        if (SubShapeIDPair_TEMP_STATIC_GEN_0 == null)
            SubShapeIDPair_TEMP_STATIC_GEN_0 = new SubShapeIDPair((byte) 1, (char) 1);
        SubShapeIDPair_TEMP_STATIC_GEN_0.internal_reset(inSubShapePair_addr, false);
        OnContactRemoved(SubShapeIDPair_TEMP_STATIC_GEN_0);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.ContactListenerJS();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.ContactListenerJS();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    @org.teavm.jso.JSBody(params = { "this_addr", "OnContactValidate", "OnContactAdded", "OnContactPersisted", "OnContactRemoved" }, script = "var ContactListenerJS = jolt.wrapPointer(this_addr, jolt.ContactListenerJS); ContactListenerJS.OnContactValidate = OnContactValidate; ContactListenerJS.OnContactAdded = OnContactAdded; ContactListenerJS.OnContactPersisted = OnContactPersisted; ContactListenerJS.OnContactRemoved = OnContactRemoved;")
    public static native void internal_native_setupCallback(int this_addr, OnContactValidate OnContactValidate, OnContactAdded OnContactAdded, OnContactPersisted OnContactPersisted, OnContactRemoved OnContactRemoved);

    @org.teavm.jso.JSFunctor()
    public interface OnContactValidate extends org.teavm.jso.JSObject {

        int OnContactValidate(int inBody1_addr, int inBody2_addr, int inBaseOffset_addr, int inCollisionResult_addr);
    }

    @org.teavm.jso.JSFunctor()
    public interface OnContactAdded extends org.teavm.jso.JSObject {

        void OnContactAdded(int inBody1_addr, int inBody2_addr, int inManifold_addr, int ioSettings_addr);
    }

    @org.teavm.jso.JSFunctor()
    public interface OnContactPersisted extends org.teavm.jso.JSObject {

        void OnContactPersisted(int inBody1_addr, int inBody2_addr, int inManifold_addr, int ioSettings_addr);
    }

    @org.teavm.jso.JSFunctor()
    public interface OnContactRemoved extends org.teavm.jso.JSObject {

        void OnContactRemoved(int inSubShapePair_addr);
    }
}
