/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.collision;

import gen.jolt.idl.IDLBase;
import gen.jolt.math.Vec3;
import gen.jolt.physics.collision.shape.SubShapeID;

public class ContactManifold extends IDLBase {

    private ContactManifold ContactManifold_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    private Vec3 Vec3_TEMP_GEN_3;

    private SubShapeID SubShapeID_TEMP_GEN_0;

    private SubShapeID SubShapeID_TEMP_GEN_1;

    private ContactPoints ContactPoints_TEMP_GEN_0;

    private ContactPoints ContactPoints_TEMP_GEN_1;

    static public final ContactManifold T_01 = new ContactManifold((byte) 1, (char) 1);

    static public final ContactManifold T_02 = new ContactManifold((byte) 1, (char) 1);

    static public final ContactManifold T_03 = new ContactManifold((byte) 1, (char) 1);

    public ContactManifold() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.ContactManifold();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.ContactManifold();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public ContactManifold(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public ContactManifold SwapShapes() {
        int pointer = internal_native_SwapShapes(native_address);
        if (pointer == 0)
            return null;
        if (ContactManifold_TEMP_GEN_0 == null)
            ContactManifold_TEMP_GEN_0 = new ContactManifold((byte) 1, (char) 1);
        ContactManifold_TEMP_GEN_0.internal_reset(pointer, false);
        return ContactManifold_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
var returnedJSObj = jsObj.SwapShapes();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);var returnedJSObj = jsObj.SwapShapes();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_SwapShapes(int this_addr);

    public Vec3 GetWorldSpaceContactPointOn1(int inIndex) {
        int pointer = internal_native_GetWorldSpaceContactPointOn1(native_address, inIndex);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
var returnedJSObj = jsObj.GetWorldSpaceContactPointOn1(inIndex);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inIndex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);var returnedJSObj = jsObj.GetWorldSpaceContactPointOn1(inIndex);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWorldSpaceContactPointOn1(int this_addr, int inIndex);

    public Vec3 GetWorldSpaceContactPointOn2(int inIndex) {
        int pointer = internal_native_GetWorldSpaceContactPointOn2(native_address, inIndex);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
var returnedJSObj = jsObj.GetWorldSpaceContactPointOn2(inIndex);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inIndex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);var returnedJSObj = jsObj.GetWorldSpaceContactPointOn2(inIndex);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWorldSpaceContactPointOn2(int this_addr, int inIndex);

    public Vec3 get_mBaseOffset() {
        int pointer = internal_native_get_mBaseOffset(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
var returnedJSObj = jsObj.get_mBaseOffset();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);var returnedJSObj = jsObj.get_mBaseOffset();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mBaseOffset(int this_addr);

    public void set_mBaseOffset(Vec3 mBaseOffset) {
        internal_native_set_mBaseOffset(native_address, (mBaseOffset != null ? mBaseOffset.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
jsObj.set_mBaseOffset(mBaseOffset_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mBaseOffset_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);jsObj.set_mBaseOffset(mBaseOffset_addr);")
    public static native void internal_native_set_mBaseOffset(int this_addr, int mBaseOffset_addr);

    public Vec3 get_mWorldSpaceNormal() {
        int pointer = internal_native_get_mWorldSpaceNormal(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_3 == null)
            Vec3_TEMP_GEN_3 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_3.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
var returnedJSObj = jsObj.get_mWorldSpaceNormal();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);var returnedJSObj = jsObj.get_mWorldSpaceNormal();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mWorldSpaceNormal(int this_addr);

    public void set_mWorldSpaceNormal(Vec3 mWorldSpaceNormal) {
        internal_native_set_mWorldSpaceNormal(native_address, (mWorldSpaceNormal != null ? mWorldSpaceNormal.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
jsObj.set_mWorldSpaceNormal(mWorldSpaceNormal_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mWorldSpaceNormal_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);jsObj.set_mWorldSpaceNormal(mWorldSpaceNormal_addr);")
    public static native void internal_native_set_mWorldSpaceNormal(int this_addr, int mWorldSpaceNormal_addr);

    public float get_mPenetrationDepth() {
        return internal_native_get_mPenetrationDepth(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
return jsObj.get_mPenetrationDepth();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);return jsObj.get_mPenetrationDepth();")
    public static native float internal_native_get_mPenetrationDepth(int this_addr);

    public void set_mPenetrationDepth(float mPenetrationDepth) {
        internal_native_set_mPenetrationDepth(native_address, mPenetrationDepth);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
jsObj.set_mPenetrationDepth(mPenetrationDepth);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPenetrationDepth"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);jsObj.set_mPenetrationDepth(mPenetrationDepth);")
    public static native void internal_native_set_mPenetrationDepth(int this_addr, float mPenetrationDepth);

    public SubShapeID get_mSubShapeID1() {
        int pointer = internal_native_get_mSubShapeID1(native_address);
        if (pointer == 0)
            return null;
        if (SubShapeID_TEMP_GEN_0 == null)
            SubShapeID_TEMP_GEN_0 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_GEN_0.internal_reset(pointer, false);
        return SubShapeID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
var returnedJSObj = jsObj.get_mSubShapeID1();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);var returnedJSObj = jsObj.get_mSubShapeID1();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mSubShapeID1(int this_addr);

    public void set_mSubShapeID1(SubShapeID mSubShapeID1) {
        internal_native_set_mSubShapeID1(native_address, (mSubShapeID1 != null ? mSubShapeID1.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
jsObj.set_mSubShapeID1(mSubShapeID1_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mSubShapeID1_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);jsObj.set_mSubShapeID1(mSubShapeID1_addr);")
    public static native void internal_native_set_mSubShapeID1(int this_addr, int mSubShapeID1_addr);

    public SubShapeID get_mSubShapeID2() {
        int pointer = internal_native_get_mSubShapeID2(native_address);
        if (pointer == 0)
            return null;
        if (SubShapeID_TEMP_GEN_1 == null)
            SubShapeID_TEMP_GEN_1 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_GEN_1.internal_reset(pointer, false);
        return SubShapeID_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
var returnedJSObj = jsObj.get_mSubShapeID2();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);var returnedJSObj = jsObj.get_mSubShapeID2();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mSubShapeID2(int this_addr);

    public void set_mSubShapeID2(SubShapeID mSubShapeID2) {
        internal_native_set_mSubShapeID2(native_address, (mSubShapeID2 != null ? mSubShapeID2.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
jsObj.set_mSubShapeID2(mSubShapeID2_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mSubShapeID2_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);jsObj.set_mSubShapeID2(mSubShapeID2_addr);")
    public static native void internal_native_set_mSubShapeID2(int this_addr, int mSubShapeID2_addr);

    public ContactPoints get_mRelativeContactPointsOn1() {
        int pointer = internal_native_get_mRelativeContactPointsOn1(native_address);
        if (pointer == 0)
            return null;
        if (ContactPoints_TEMP_GEN_0 == null)
            ContactPoints_TEMP_GEN_0 = new ContactPoints((byte) 1, (char) 1);
        ContactPoints_TEMP_GEN_0.internal_reset(pointer, false);
        return ContactPoints_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
var returnedJSObj = jsObj.get_mRelativeContactPointsOn1();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);var returnedJSObj = jsObj.get_mRelativeContactPointsOn1();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mRelativeContactPointsOn1(int this_addr);

    public void set_mRelativeContactPointsOn1(ContactPoints mRelativeContactPointsOn1) {
        internal_native_set_mRelativeContactPointsOn1(native_address, (mRelativeContactPointsOn1 != null ? mRelativeContactPointsOn1.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
jsObj.set_mRelativeContactPointsOn1(mRelativeContactPointsOn1_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mRelativeContactPointsOn1_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);jsObj.set_mRelativeContactPointsOn1(mRelativeContactPointsOn1_addr);")
    public static native void internal_native_set_mRelativeContactPointsOn1(int this_addr, int mRelativeContactPointsOn1_addr);

    public ContactPoints get_mRelativeContactPointsOn2() {
        int pointer = internal_native_get_mRelativeContactPointsOn2(native_address);
        if (pointer == 0)
            return null;
        if (ContactPoints_TEMP_GEN_1 == null)
            ContactPoints_TEMP_GEN_1 = new ContactPoints((byte) 1, (char) 1);
        ContactPoints_TEMP_GEN_1.internal_reset(pointer, false);
        return ContactPoints_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
var returnedJSObj = jsObj.get_mRelativeContactPointsOn2();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);var returnedJSObj = jsObj.get_mRelativeContactPointsOn2();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mRelativeContactPointsOn2(int this_addr);

    public void set_mRelativeContactPointsOn2(ContactPoints mRelativeContactPointsOn2) {
        internal_native_set_mRelativeContactPointsOn2(native_address, (mRelativeContactPointsOn2 != null ? mRelativeContactPointsOn2.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);
jsObj.set_mRelativeContactPointsOn2(mRelativeContactPointsOn2_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mRelativeContactPointsOn2_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ContactManifold);jsObj.set_mRelativeContactPointsOn2(mRelativeContactPointsOn2_addr);")
    public static native void internal_native_set_mRelativeContactPointsOn2(int this_addr, int mRelativeContactPointsOn2_addr);
}
