/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.collision.shape;

import gen.jolt.geometry.TriangleList;
import gen.jolt.physics.collision.PhysicsMaterialList;
import gen.jolt.math.VertexList;
import gen.jolt.geometry.IndexedTriangleList;
import gen.jolt.enums.MeshShapeSettings_EBuildQuality;

public class MeshShapeSettings extends ShapeSettings {

    private VertexList VertexList_TEMP_GEN_0;

    private IndexedTriangleList IndexedTriangleList_TEMP_GEN_0;

    private PhysicsMaterialList PhysicsMaterialList_TEMP_GEN_0;

    static public final MeshShapeSettings NULL = MeshShapeSettings.native_new();

    public MeshShapeSettings() {
        super((byte) 1, (char) 1);
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.MeshShapeSettings();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.MeshShapeSettings();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    public MeshShapeSettings(TriangleList inTriangleList, PhysicsMaterialList inMaterialList) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_TriangleList_PhysicsMaterialList(inTriangleList.native_address, inMaterialList.native_address);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.MeshShapeSettings(inTriangleList_addr, inMaterialList_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inTriangleList_addr", "inMaterialList_addr"}, script = "var jsObj = new jolt.MeshShapeSettings(inTriangleList_addr, inMaterialList_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_TriangleList_PhysicsMaterialList(int inTriangleList_addr, int inMaterialList_addr);

    public MeshShapeSettings(TriangleList inTriangleList) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_TriangleList(inTriangleList.native_address);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.MeshShapeSettings(inTriangleList_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inTriangleList_addr"}, script = "var jsObj = new jolt.MeshShapeSettings(inTriangleList_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_TriangleList(int inTriangleList_addr);

    public MeshShapeSettings(VertexList inVertices, IndexedTriangleList inTriangles, PhysicsMaterialList inMaterialList) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_VertexList_IndexedTriangleList_PhysicsMaterialList(inVertices.native_address, inTriangles.native_address, inMaterialList.native_address);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.MeshShapeSettings(inVertices_addr, inTriangles_addr, inMaterialList_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inVertices_addr", "inTriangles_addr", "inMaterialList_addr"}, script = "var jsObj = new jolt.MeshShapeSettings(inVertices_addr, inTriangles_addr, inMaterialList_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_VertexList_IndexedTriangleList_PhysicsMaterialList(int inVertices_addr, int inTriangles_addr, int inMaterialList_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected MeshShapeSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static MeshShapeSettings native_new() {
        return new MeshShapeSettings((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void Sanitize() {
        internal_native_Sanitize(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
jsObj.Sanitize();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);jsObj.Sanitize();")
    public static native void internal_native_Sanitize(int this_addr);

    public VertexList get_mTriangleVertices() {
        int pointer = internal_native_get_mTriangleVertices(native_address);
        if (pointer == 0)
            return VertexList.NULL;
        if (VertexList_TEMP_GEN_0 == null)
            VertexList_TEMP_GEN_0 = VertexList.native_new();
        VertexList_TEMP_GEN_0.internal_reset(pointer, false);
        return VertexList_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
var returnedJSObj = jsObj.get_mTriangleVertices();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);var returnedJSObj = jsObj.get_mTriangleVertices();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mTriangleVertices(int this_addr);

    public void set_mTriangleVertices(VertexList mTriangleVertices) {
        internal_native_set_mTriangleVertices(native_address, mTriangleVertices.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
jsObj.set_mTriangleVertices(mTriangleVertices_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mTriangleVertices_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);jsObj.set_mTriangleVertices(mTriangleVertices_addr);")
    public static native void internal_native_set_mTriangleVertices(int this_addr, int mTriangleVertices_addr);

    public IndexedTriangleList get_mIndexedTriangles() {
        int pointer = internal_native_get_mIndexedTriangles(native_address);
        if (pointer == 0)
            return IndexedTriangleList.NULL;
        if (IndexedTriangleList_TEMP_GEN_0 == null)
            IndexedTriangleList_TEMP_GEN_0 = IndexedTriangleList.native_new();
        IndexedTriangleList_TEMP_GEN_0.internal_reset(pointer, false);
        return IndexedTriangleList_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
var returnedJSObj = jsObj.get_mIndexedTriangles();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);var returnedJSObj = jsObj.get_mIndexedTriangles();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mIndexedTriangles(int this_addr);

    public void set_mIndexedTriangles(IndexedTriangleList mIndexedTriangles) {
        internal_native_set_mIndexedTriangles(native_address, mIndexedTriangles.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
jsObj.set_mIndexedTriangles(mIndexedTriangles_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mIndexedTriangles_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);jsObj.set_mIndexedTriangles(mIndexedTriangles_addr);")
    public static native void internal_native_set_mIndexedTriangles(int this_addr, int mIndexedTriangles_addr);

    public PhysicsMaterialList get_mMaterials() {
        int pointer = internal_native_get_mMaterials(native_address);
        if (pointer == 0)
            return PhysicsMaterialList.NULL;
        if (PhysicsMaterialList_TEMP_GEN_0 == null)
            PhysicsMaterialList_TEMP_GEN_0 = PhysicsMaterialList.native_new();
        PhysicsMaterialList_TEMP_GEN_0.internal_reset(pointer, false);
        return PhysicsMaterialList_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
var returnedJSObj = jsObj.get_mMaterials();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);var returnedJSObj = jsObj.get_mMaterials();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mMaterials(int this_addr);

    public void set_mMaterials(PhysicsMaterialList mMaterials) {
        internal_native_set_mMaterials(native_address, mMaterials.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
jsObj.set_mMaterials(mMaterials_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaterials_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);jsObj.set_mMaterials(mMaterials_addr);")
    public static native void internal_native_set_mMaterials(int this_addr, int mMaterials_addr);

    public int get_mMaxTrianglesPerLeaf() {
        return internal_native_get_mMaxTrianglesPerLeaf(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
return jsObj.get_mMaxTrianglesPerLeaf();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);return jsObj.get_mMaxTrianglesPerLeaf();")
    public static native int internal_native_get_mMaxTrianglesPerLeaf(int this_addr);

    public void set_mMaxTrianglesPerLeaf(int mMaxTrianglesPerLeaf) {
        internal_native_set_mMaxTrianglesPerLeaf(native_address, mMaxTrianglesPerLeaf);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
jsObj.set_mMaxTrianglesPerLeaf(mMaxTrianglesPerLeaf);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaxTrianglesPerLeaf"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);jsObj.set_mMaxTrianglesPerLeaf(mMaxTrianglesPerLeaf);")
    public static native void internal_native_set_mMaxTrianglesPerLeaf(int this_addr, int mMaxTrianglesPerLeaf);

    public float get_mActiveEdgeCosThresholdAngle() {
        return internal_native_get_mActiveEdgeCosThresholdAngle(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
return jsObj.get_mActiveEdgeCosThresholdAngle();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);return jsObj.get_mActiveEdgeCosThresholdAngle();")
    public static native float internal_native_get_mActiveEdgeCosThresholdAngle(int this_addr);

    public void set_mActiveEdgeCosThresholdAngle(float mActiveEdgeCosThresholdAngle) {
        internal_native_set_mActiveEdgeCosThresholdAngle(native_address, mActiveEdgeCosThresholdAngle);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
jsObj.set_mActiveEdgeCosThresholdAngle(mActiveEdgeCosThresholdAngle);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mActiveEdgeCosThresholdAngle"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);jsObj.set_mActiveEdgeCosThresholdAngle(mActiveEdgeCosThresholdAngle);")
    public static native void internal_native_set_mActiveEdgeCosThresholdAngle(int this_addr, float mActiveEdgeCosThresholdAngle);

    public boolean get_mPerTriangleUserData() {
        return internal_native_get_mPerTriangleUserData(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
return jsObj.get_mPerTriangleUserData();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);return jsObj.get_mPerTriangleUserData();")
    public static native boolean internal_native_get_mPerTriangleUserData(int this_addr);

    public void set_mPerTriangleUserData(boolean mPerTriangleUserData) {
        internal_native_set_mPerTriangleUserData(native_address, mPerTriangleUserData);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
jsObj.set_mPerTriangleUserData(mPerTriangleUserData);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPerTriangleUserData"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);jsObj.set_mPerTriangleUserData(mPerTriangleUserData);")
    public static native void internal_native_set_mPerTriangleUserData(int this_addr, boolean mPerTriangleUserData);

    public MeshShapeSettings_EBuildQuality get_mBuildQuality() {
        int value = internal_native_get_mBuildQuality(native_address);
        MeshShapeSettings_EBuildQuality[] values = MeshShapeSettings_EBuildQuality.values();
        for (int i = 0; i < values.length; i++) {
            MeshShapeSettings_EBuildQuality enumVal = values[i];
            if (enumVal != MeshShapeSettings_EBuildQuality.CUSTOM && enumVal.getValue() == value)
                return enumVal;
        }
        return MeshShapeSettings_EBuildQuality.CUSTOM.setValue(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
return jsObj.get_mBuildQuality();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);return jsObj.get_mBuildQuality();")
    public static native int internal_native_get_mBuildQuality(int this_addr);

    public void set_mBuildQuality(MeshShapeSettings_EBuildQuality mBuildQuality) {
        internal_native_set_mBuildQuality(native_address, (int) mBuildQuality.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);
jsObj.set_mBuildQuality(mBuildQuality);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mBuildQuality"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MeshShapeSettings);jsObj.set_mBuildQuality(mBuildQuality);")
    public static native void internal_native_set_mBuildQuality(int this_addr, int mBuildQuality);
}
