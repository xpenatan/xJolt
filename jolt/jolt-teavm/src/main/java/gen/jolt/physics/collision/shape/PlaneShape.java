/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.collision.shape;

import gen.jolt.geometry.Plane;
import gen.jolt.physics.collision.PhysicsMaterial;

public class PlaneShape extends Shape {

    private Plane Plane_TEMP_GEN_0;

    static public final PlaneShape T_01 = new PlaneShape((byte) 1, (char) 1);

    static public final PlaneShape T_02 = new PlaneShape((byte) 1, (char) 1);

    static public final PlaneShape T_03 = new PlaneShape((byte) 1, (char) 1);

    public PlaneShape(Plane inPlane, PhysicsMaterial inMaterial, float inHalfExtent) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_Plane_PhysicsMaterial_float((inPlane != null ? inPlane.native_address : 0), (inMaterial != null ? inMaterial.native_address : 0), inHalfExtent);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.PlaneShape(inPlane_addr, inMaterial_addr, inHalfExtent);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inPlane_addr", "inMaterial_addr", "inHalfExtent"}, script = "var jsObj = new jolt.PlaneShape(inPlane_addr, inMaterial_addr, inHalfExtent);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_Plane_PhysicsMaterial_float(int inPlane_addr, int inMaterial_addr, float inHalfExtent);

    public PlaneShape(Plane inPlane, PhysicsMaterial inMaterial) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_Plane_PhysicsMaterial((inPlane != null ? inPlane.native_address : 0), (inMaterial != null ? inMaterial.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.PlaneShape(inPlane_addr, inMaterial_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inPlane_addr", "inMaterial_addr"}, script = "var jsObj = new jolt.PlaneShape(inPlane_addr, inMaterial_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_Plane_PhysicsMaterial(int inPlane_addr, int inMaterial_addr);

    public PlaneShape(Plane inPlane) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_Plane((inPlane != null ? inPlane.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.PlaneShape(inPlane_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inPlane_addr"}, script = "var jsObj = new jolt.PlaneShape(inPlane_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_Plane(int inPlane_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public PlaneShape(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PlaneShape);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PlaneShape);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void SetMaterial(PhysicsMaterial inMaterial) {
        internal_native_SetMaterial(native_address, (inMaterial != null ? inMaterial.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PlaneShape);
jsObj.SetMaterial(inMaterial_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inMaterial_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PlaneShape);jsObj.SetMaterial(inMaterial_addr);")
    public static native void internal_native_SetMaterial(int this_addr, int inMaterial_addr);

    public Plane GetPlane() {
        int pointer = internal_native_GetPlane(native_address);
        if (pointer == 0)
            return null;
        if (Plane_TEMP_GEN_0 == null)
            Plane_TEMP_GEN_0 = new Plane((byte) 1, (char) 1);
        Plane_TEMP_GEN_0.internal_reset(pointer, false);
        return Plane_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PlaneShape);
var returnedJSObj = jsObj.GetPlane();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PlaneShape);var returnedJSObj = jsObj.GetPlane();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetPlane(int this_addr);

    public float GetHalfExtent() {
        return internal_native_GetHalfExtent(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PlaneShape);
var returnedJSObj = jsObj.GetHalfExtent();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PlaneShape);var returnedJSObj = jsObj.GetHalfExtent();return returnedJSObj;")
    public static native float internal_native_GetHalfExtent(int this_addr);
}
