/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.collision.shape;

import gen.jolt.idl.IDLBase;
import gen.jolt.enums.EShapeType;
import gen.jolt.enums.EShapeSubType;
import gen.jolt.geometry.AABox;
import gen.jolt.math.Mat44;
import gen.jolt.math.Vec3;
import gen.jolt.physics.body.MassProperties;
import gen.jolt.physics.collision.PhysicsMaterial;
import gen.jolt.math.Quat;
import gen.jolt.physics.collision.TransformedShape;

public class Shape extends IDLBase {

    private AABox AABox_TEMP_GEN_0;

    private AABox AABox_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_0;

    private MassProperties MassProperties_TEMP_GEN_0;

    private Shape Shape_TEMP_GEN_0;

    private PhysicsMaterial PhysicsMaterial_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private TransformedShape TransformedShape_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_2;

    private ShapeResult ShapeResult_TEMP_GEN_0;

    static public final Shape T_01 = new Shape((byte) 1, (char) 1);

    static public final Shape T_02 = new Shape((byte) 1, (char) 1);

    static public final Shape T_03 = new Shape((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Shape(byte b, char c) {
    }

    public int GetRefCount() {
        return internal_native_GetRefCount(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetRefCount();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetRefCount();return returnedJSObj;")
    public static native int internal_native_GetRefCount(int this_addr);

    public void AddRef() {
        internal_native_AddRef(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
jsObj.AddRef();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);jsObj.AddRef();")
    public static native void internal_native_AddRef(int this_addr);

    public void Release() {
        internal_native_Release(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
jsObj.Release();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);jsObj.Release();")
    public static native void internal_native_Release(int this_addr);

    public EShapeType GetType() {
        int value = internal_native_GetType(native_address);
        return EShapeType.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetType();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetType();return returnedJSObj;")
    public static native int internal_native_GetType(int this_addr);

    public EShapeSubType GetSubType() {
        int value = internal_native_GetSubType(native_address);
        return EShapeSubType.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetSubType();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetSubType();return returnedJSObj;")
    public static native int internal_native_GetSubType(int this_addr);

    public boolean MustBeStatic() {
        return internal_native_MustBeStatic(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.MustBeStatic();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.MustBeStatic();return returnedJSObj;")
    public static native boolean internal_native_MustBeStatic(int this_addr);

    public AABox GetLocalBounds() {
        int pointer = internal_native_GetLocalBounds(native_address);
        if (pointer == 0)
            return null;
        if (AABox_TEMP_GEN_0 == null)
            AABox_TEMP_GEN_0 = new AABox((byte) 1, (char) 1);
        AABox_TEMP_GEN_0.internal_reset(pointer, false);
        return AABox_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetLocalBounds();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetLocalBounds();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLocalBounds(int this_addr);

    public AABox GetWorldSpaceBounds(Mat44 inCenterOfMassTransform, Vec3 inScale) {
        int pointer = internal_native_GetWorldSpaceBounds(native_address, (inCenterOfMassTransform != null ? inCenterOfMassTransform.native_address : 0), (inScale != null ? inScale.native_address : 0));
        if (pointer == 0)
            return null;
        if (AABox_TEMP_GEN_1 == null)
            AABox_TEMP_GEN_1 = new AABox((byte) 1, (char) 1);
        AABox_TEMP_GEN_1.internal_reset(pointer, false);
        return AABox_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetWorldSpaceBounds(inCenterOfMassTransform_addr, inScale_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inCenterOfMassTransform_addr", "inScale_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetWorldSpaceBounds(inCenterOfMassTransform_addr, inScale_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWorldSpaceBounds(int this_addr, int inCenterOfMassTransform_addr, int inScale_addr);

    public Vec3 GetCenterOfMass() {
        int pointer = internal_native_GetCenterOfMass(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetCenterOfMass();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetCenterOfMass();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetCenterOfMass(int this_addr);

    public long GetUserData() {
        return internal_native_GetUserData(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetUserData();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetUserData();return returnedJSObj;")
    public static native int internal_native_GetUserData(int this_addr);

    public void SetUserData(long inUserData) {
        internal_native_SetUserData(native_address, (int) inUserData);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
jsObj.SetUserData(inUserData);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inUserData"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);jsObj.SetUserData(inUserData);")
    public static native void internal_native_SetUserData(int this_addr, int inUserData);

    public int GetSubShapeIDBitsRecursive() {
        return internal_native_GetSubShapeIDBitsRecursive(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetSubShapeIDBitsRecursive();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetSubShapeIDBitsRecursive();return returnedJSObj;")
    public static native int internal_native_GetSubShapeIDBitsRecursive(int this_addr);

    public float GetInnerRadius() {
        return internal_native_GetInnerRadius(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetInnerRadius();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetInnerRadius();return returnedJSObj;")
    public static native float internal_native_GetInnerRadius(int this_addr);

    public MassProperties GetMassProperties() {
        int pointer = internal_native_GetMassProperties(native_address);
        if (pointer == 0)
            return null;
        if (MassProperties_TEMP_GEN_0 == null)
            MassProperties_TEMP_GEN_0 = new MassProperties((byte) 1, (char) 1);
        MassProperties_TEMP_GEN_0.internal_reset(pointer, false);
        return MassProperties_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetMassProperties();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetMassProperties();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetMassProperties(int this_addr);

    public Shape GetLeafShape(SubShapeID inSubShapeID, SubShapeID outRemainder) {
        int pointer = internal_native_GetLeafShape(native_address, (inSubShapeID != null ? inSubShapeID.native_address : 0), (outRemainder != null ? outRemainder.native_address : 0));
        if (pointer == 0)
            return null;
        if (Shape_TEMP_GEN_0 == null)
            Shape_TEMP_GEN_0 = new Shape((byte) 1, (char) 1);
        Shape_TEMP_GEN_0.internal_reset(pointer, false);
        return Shape_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetLeafShape(inSubShapeID_addr, outRemainder_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSubShapeID_addr", "outRemainder_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetLeafShape(inSubShapeID_addr, outRemainder_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLeafShape(int this_addr, int inSubShapeID_addr, int outRemainder_addr);

    public PhysicsMaterial GetMaterial(SubShapeID inSubShapeID) {
        int pointer = internal_native_GetMaterial(native_address, (inSubShapeID != null ? inSubShapeID.native_address : 0));
        if (pointer == 0)
            return null;
        if (PhysicsMaterial_TEMP_GEN_0 == null)
            PhysicsMaterial_TEMP_GEN_0 = new PhysicsMaterial((byte) 1, (char) 1);
        PhysicsMaterial_TEMP_GEN_0.internal_reset(pointer, false);
        return PhysicsMaterial_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetMaterial(inSubShapeID_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSubShapeID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetMaterial(inSubShapeID_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetMaterial(int this_addr, int inSubShapeID_addr);

    public Vec3 GetSurfaceNormal(SubShapeID inSubShapeID, Vec3 inLocalSurfacePosition) {
        int pointer = internal_native_GetSurfaceNormal(native_address, (inSubShapeID != null ? inSubShapeID.native_address : 0), (inLocalSurfacePosition != null ? inLocalSurfacePosition.native_address : 0));
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetSurfaceNormal(inSubShapeID_addr, inLocalSurfacePosition_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSubShapeID_addr", "inLocalSurfacePosition_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetSurfaceNormal(inSubShapeID_addr, inLocalSurfacePosition_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetSurfaceNormal(int this_addr, int inSubShapeID_addr, int inLocalSurfacePosition_addr);

    public long GetSubShapeUserData(SubShapeID inSubShapeID) {
        return internal_native_GetSubShapeUserData(native_address, (inSubShapeID != null ? inSubShapeID.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetSubShapeUserData(inSubShapeID_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSubShapeID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetSubShapeUserData(inSubShapeID_addr);return returnedJSObj;")
    public static native int internal_native_GetSubShapeUserData(int this_addr, int inSubShapeID_addr);

    public TransformedShape GetSubShapeTransformedShape(SubShapeID inSubShapeID, Vec3 inPositionCOM, Quat inRotation, Vec3 inScale, SubShapeID outRemainder) {
        int pointer = internal_native_GetSubShapeTransformedShape(native_address, (inSubShapeID != null ? inSubShapeID.native_address : 0), (inPositionCOM != null ? inPositionCOM.native_address : 0), (inRotation != null ? inRotation.native_address : 0), (inScale != null ? inScale.native_address : 0), (outRemainder != null ? outRemainder.native_address : 0));
        if (pointer == 0)
            return null;
        if (TransformedShape_TEMP_GEN_0 == null)
            TransformedShape_TEMP_GEN_0 = new TransformedShape((byte) 1, (char) 1);
        TransformedShape_TEMP_GEN_0.internal_reset(pointer, false);
        return TransformedShape_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetSubShapeTransformedShape(inSubShapeID_addr, inPositionCOM_addr, inRotation_addr, inScale_addr, outRemainder_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSubShapeID_addr", "inPositionCOM_addr", "inRotation_addr", "inScale_addr", "outRemainder_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetSubShapeTransformedShape(inSubShapeID_addr, inPositionCOM_addr, inRotation_addr, inScale_addr, outRemainder_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetSubShapeTransformedShape(int this_addr, int inSubShapeID_addr, int inPositionCOM_addr, int inRotation_addr, int inScale_addr, int outRemainder_addr);

    public float GetVolume() {
        return internal_native_GetVolume(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.GetVolume();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.GetVolume();return returnedJSObj;")
    public static native float internal_native_GetVolume(int this_addr);

    public boolean IsValidScale(Vec3 inScale) {
        return internal_native_IsValidScale(native_address, (inScale != null ? inScale.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.IsValidScale(inScale_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inScale_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.IsValidScale(inScale_addr);return returnedJSObj;")
    public static native boolean internal_native_IsValidScale(int this_addr, int inScale_addr);

    public Vec3 MakeScaleValid(Vec3 inScale) {
        int pointer = internal_native_MakeScaleValid(native_address, (inScale != null ? inScale.native_address : 0));
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.MakeScaleValid(inScale_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inScale_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.MakeScaleValid(inScale_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_MakeScaleValid(int this_addr, int inScale_addr);

    public ShapeResult ScaleShape(Vec3 inScale) {
        int pointer = internal_native_ScaleShape(native_address, (inScale != null ? inScale.native_address : 0));
        if (pointer == 0)
            return null;
        if (ShapeResult_TEMP_GEN_0 == null)
            ShapeResult_TEMP_GEN_0 = new ShapeResult((byte) 1, (char) 1);
        ShapeResult_TEMP_GEN_0.internal_reset(pointer, false);
        return ShapeResult_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);
var returnedJSObj = jsObj.ScaleShape(inScale_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inScale_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Shape);var returnedJSObj = jsObj.ScaleShape(inScale_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_ScaleShape(int this_addr, int inScale_addr);
}
