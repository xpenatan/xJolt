/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.constraints;

import gen.jolt.idl.IDLBase;

public class ConstraintSettings extends IDLBase {

    static public final ConstraintSettings T_01 = new ConstraintSettings((byte) 1, (char) 1);

    static public final ConstraintSettings T_02 = new ConstraintSettings((byte) 1, (char) 1);

    static public final ConstraintSettings T_03 = new ConstraintSettings((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public ConstraintSettings(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public int GetRefCount() {
        return internal_native_GetRefCount(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
var returnedJSObj = jsObj.GetRefCount();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);var returnedJSObj = jsObj.GetRefCount();return returnedJSObj;")
    public static native int internal_native_GetRefCount(int this_addr);

    public void AddRef() {
        internal_native_AddRef(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
jsObj.AddRef();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);jsObj.AddRef();")
    public static native void internal_native_AddRef(int this_addr);

    public void Release() {
        internal_native_Release(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
jsObj.Release();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);jsObj.Release();")
    public static native void internal_native_Release(int this_addr);

    public boolean get_mEnabled() {
        return internal_native_get_mEnabled(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
return jsObj.get_mEnabled();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);return jsObj.get_mEnabled();")
    public static native boolean internal_native_get_mEnabled(int this_addr);

    public void set_mEnabled(boolean mEnabled) {
        internal_native_set_mEnabled(native_address, mEnabled);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
jsObj.set_mEnabled(mEnabled);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mEnabled"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);jsObj.set_mEnabled(mEnabled);")
    public static native void internal_native_set_mEnabled(int this_addr, boolean mEnabled);

    public int get_mConstraintPriority() {
        return internal_native_get_mConstraintPriority(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
return jsObj.get_mConstraintPriority();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);return jsObj.get_mConstraintPriority();")
    public static native int internal_native_get_mConstraintPriority(int this_addr);

    public void set_mConstraintPriority(int mConstraintPriority) {
        internal_native_set_mConstraintPriority(native_address, mConstraintPriority);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
jsObj.set_mConstraintPriority(mConstraintPriority);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mConstraintPriority"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);jsObj.set_mConstraintPriority(mConstraintPriority);")
    public static native void internal_native_set_mConstraintPriority(int this_addr, int mConstraintPriority);

    public int get_mNumVelocityStepsOverride() {
        return internal_native_get_mNumVelocityStepsOverride(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
return jsObj.get_mNumVelocityStepsOverride();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);return jsObj.get_mNumVelocityStepsOverride();")
    public static native int internal_native_get_mNumVelocityStepsOverride(int this_addr);

    public void set_mNumVelocityStepsOverride(int mNumVelocityStepsOverride) {
        internal_native_set_mNumVelocityStepsOverride(native_address, mNumVelocityStepsOverride);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
jsObj.set_mNumVelocityStepsOverride(mNumVelocityStepsOverride);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mNumVelocityStepsOverride"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);jsObj.set_mNumVelocityStepsOverride(mNumVelocityStepsOverride);")
    public static native void internal_native_set_mNumVelocityStepsOverride(int this_addr, int mNumVelocityStepsOverride);

    public int get_mNumPositionStepsOverride() {
        return internal_native_get_mNumPositionStepsOverride(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
return jsObj.get_mNumPositionStepsOverride();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);return jsObj.get_mNumPositionStepsOverride();")
    public static native int internal_native_get_mNumPositionStepsOverride(int this_addr);

    public void set_mNumPositionStepsOverride(int mNumPositionStepsOverride) {
        internal_native_set_mNumPositionStepsOverride(native_address, mNumPositionStepsOverride);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
jsObj.set_mNumPositionStepsOverride(mNumPositionStepsOverride);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mNumPositionStepsOverride"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);jsObj.set_mNumPositionStepsOverride(mNumPositionStepsOverride);")
    public static native void internal_native_set_mNumPositionStepsOverride(int this_addr, int mNumPositionStepsOverride);

    public float get_mDrawConstraintSize() {
        return internal_native_get_mDrawConstraintSize(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
return jsObj.get_mDrawConstraintSize();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);return jsObj.get_mDrawConstraintSize();")
    public static native float internal_native_get_mDrawConstraintSize(int this_addr);

    public void set_mDrawConstraintSize(float mDrawConstraintSize) {
        internal_native_set_mDrawConstraintSize(native_address, mDrawConstraintSize);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);
jsObj.set_mDrawConstraintSize(mDrawConstraintSize);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mDrawConstraintSize"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ConstraintSettings);jsObj.set_mDrawConstraintSize(mDrawConstraintSize);")
    public static native void internal_native_set_mDrawConstraintSize(int this_addr, float mDrawConstraintSize);
}
