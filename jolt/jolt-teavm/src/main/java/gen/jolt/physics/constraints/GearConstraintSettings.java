/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.constraints;

import gen.jolt.math.TwoBodyConstraintSettings;
import gen.jolt.enums.EConstraintSpace;
import gen.jolt.math.Vec3;

public class GearConstraintSettings extends TwoBodyConstraintSettings {

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    static public final GearConstraintSettings T_01 = new GearConstraintSettings((byte) 1, (char) 1);

    static public final GearConstraintSettings T_02 = new GearConstraintSettings((byte) 1, (char) 1);

    static public final GearConstraintSettings T_03 = new GearConstraintSettings((byte) 1, (char) 1);

    public GearConstraintSettings() {
        super((byte) 1, (char) 1);
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.GearConstraintSettings();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.GearConstraintSettings();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public GearConstraintSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void SetRatio(int inNumTeethGear1, int inNumTeethGear2) {
        internal_native_SetRatio(native_address, inNumTeethGear1, inNumTeethGear2);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);
jsObj.SetRatio(inNumTeethGear1, inNumTeethGear2);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inNumTeethGear1", "inNumTeethGear2"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);jsObj.SetRatio(inNumTeethGear1, inNumTeethGear2);")
    public static native void internal_native_SetRatio(int this_addr, int inNumTeethGear1, int inNumTeethGear2);

    public EConstraintSpace get_mSpace() {
        int value = internal_native_get_mSpace(native_address);
        return EConstraintSpace.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);
return jsObj.get_mSpace();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);return jsObj.get_mSpace();")
    public static native int internal_native_get_mSpace(int this_addr);

    public void set_mSpace(EConstraintSpace mSpace) {
        internal_native_set_mSpace(native_address, (int) (mSpace != null ? mSpace.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);
jsObj.set_mSpace(mSpace);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mSpace"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);jsObj.set_mSpace(mSpace);")
    public static native void internal_native_set_mSpace(int this_addr, int mSpace);

    public Vec3 get_mHingeAxis1() {
        int pointer = internal_native_get_mHingeAxis1(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);
var returnedJSObj = jsObj.get_mHingeAxis1();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);var returnedJSObj = jsObj.get_mHingeAxis1();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mHingeAxis1(int this_addr);

    public void set_mHingeAxis1(Vec3 mHingeAxis1) {
        internal_native_set_mHingeAxis1(native_address, (mHingeAxis1 != null ? mHingeAxis1.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);
jsObj.set_mHingeAxis1(mHingeAxis1_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mHingeAxis1_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);jsObj.set_mHingeAxis1(mHingeAxis1_addr);")
    public static native void internal_native_set_mHingeAxis1(int this_addr, int mHingeAxis1_addr);

    public Vec3 get_mHingeAxis2() {
        int pointer = internal_native_get_mHingeAxis2(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);
var returnedJSObj = jsObj.get_mHingeAxis2();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);var returnedJSObj = jsObj.get_mHingeAxis2();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mHingeAxis2(int this_addr);

    public void set_mHingeAxis2(Vec3 mHingeAxis2) {
        internal_native_set_mHingeAxis2(native_address, (mHingeAxis2 != null ? mHingeAxis2.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);
jsObj.set_mHingeAxis2(mHingeAxis2_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mHingeAxis2_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);jsObj.set_mHingeAxis2(mHingeAxis2_addr);")
    public static native void internal_native_set_mHingeAxis2(int this_addr, int mHingeAxis2_addr);

    public float get_mRatio() {
        return internal_native_get_mRatio(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);
return jsObj.get_mRatio();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);return jsObj.get_mRatio();")
    public static native float internal_native_get_mRatio(int this_addr);

    public void set_mRatio(float mRatio) {
        internal_native_set_mRatio(native_address, mRatio);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);
jsObj.set_mRatio(mRatio);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mRatio"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.GearConstraintSettings);jsObj.set_mRatio(mRatio);")
    public static native void internal_native_set_mRatio(int this_addr, float mRatio);
}
