/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.constraints;

import gen.jolt.enums.EMotorState;
import gen.jolt.math.Vec3;
import gen.jolt.math.Vector2;

public class HingeConstraint extends TwoBodyConstraint {

    private MotorSettings MotorSettings_TEMP_GEN_0;

    private SpringSettings SpringSettings_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    private Vector2 Vector2_TEMP_GEN_0;

    static public final HingeConstraint T_01 = new HingeConstraint((byte) 1, (char) 1);

    static public final HingeConstraint T_02 = new HingeConstraint((byte) 1, (char) 1);

    static public final HingeConstraint T_03 = new HingeConstraint((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public HingeConstraint(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public float GetCurrentAngle() {
        return internal_native_GetCurrentAngle(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetCurrentAngle();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetCurrentAngle();return returnedJSObj;")
    public static native float internal_native_GetCurrentAngle(int this_addr);

    public void SetMaxFrictionTorque(float inFrictionTorque) {
        internal_native_SetMaxFrictionTorque(native_address, inFrictionTorque);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
jsObj.SetMaxFrictionTorque(inFrictionTorque);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inFrictionTorque"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);jsObj.SetMaxFrictionTorque(inFrictionTorque);")
    public static native void internal_native_SetMaxFrictionTorque(int this_addr, float inFrictionTorque);

    public float GetMaxFrictionTorque() {
        return internal_native_GetMaxFrictionTorque(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetMaxFrictionTorque();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetMaxFrictionTorque();return returnedJSObj;")
    public static native float internal_native_GetMaxFrictionTorque(int this_addr);

    public MotorSettings GetMotorSettings() {
        int pointer = internal_native_GetMotorSettings(native_address);
        if (pointer == 0)
            return null;
        if (MotorSettings_TEMP_GEN_0 == null)
            MotorSettings_TEMP_GEN_0 = new MotorSettings((byte) 1, (char) 1);
        MotorSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return MotorSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetMotorSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetMotorSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetMotorSettings(int this_addr);

    public void SetMotorState(EMotorState inState) {
        internal_native_SetMotorState(native_address, (int) (inState != null ? inState.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
jsObj.SetMotorState(inState);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inState"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);jsObj.SetMotorState(inState);")
    public static native void internal_native_SetMotorState(int this_addr, int inState);

    public EMotorState GetMotorState() {
        int value = internal_native_GetMotorState(native_address);
        return EMotorState.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetMotorState();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetMotorState();return returnedJSObj;")
    public static native int internal_native_GetMotorState(int this_addr);

    public void SetTargetAngularVelocity(float inAngularVelocity) {
        internal_native_SetTargetAngularVelocity(native_address, inAngularVelocity);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
jsObj.SetTargetAngularVelocity(inAngularVelocity);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAngularVelocity"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);jsObj.SetTargetAngularVelocity(inAngularVelocity);")
    public static native void internal_native_SetTargetAngularVelocity(int this_addr, float inAngularVelocity);

    public float GetTargetAngularVelocity() {
        return internal_native_GetTargetAngularVelocity(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetTargetAngularVelocity();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetTargetAngularVelocity();return returnedJSObj;")
    public static native float internal_native_GetTargetAngularVelocity(int this_addr);

    public void SetTargetAngle(float inAngle) {
        internal_native_SetTargetAngle(native_address, inAngle);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
jsObj.SetTargetAngle(inAngle);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAngle"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);jsObj.SetTargetAngle(inAngle);")
    public static native void internal_native_SetTargetAngle(int this_addr, float inAngle);

    public float GetTargetAngle() {
        return internal_native_GetTargetAngle(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetTargetAngle();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetTargetAngle();return returnedJSObj;")
    public static native float internal_native_GetTargetAngle(int this_addr);

    public void SetLimits(float inLimitsMin, float inLimitsMax) {
        internal_native_SetLimits(native_address, inLimitsMin, inLimitsMax);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
jsObj.SetLimits(inLimitsMin, inLimitsMax);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLimitsMin", "inLimitsMax"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);jsObj.SetLimits(inLimitsMin, inLimitsMax);")
    public static native void internal_native_SetLimits(int this_addr, float inLimitsMin, float inLimitsMax);

    public float GetLimitsMin() {
        return internal_native_GetLimitsMin(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetLimitsMin();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetLimitsMin();return returnedJSObj;")
    public static native float internal_native_GetLimitsMin(int this_addr);

    public float GetLimitsMax() {
        return internal_native_GetLimitsMax(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetLimitsMax();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetLimitsMax();return returnedJSObj;")
    public static native float internal_native_GetLimitsMax(int this_addr);

    public boolean HasLimits() {
        return internal_native_HasLimits(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.HasLimits();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.HasLimits();return returnedJSObj;")
    public static native boolean internal_native_HasLimits(int this_addr);

    public SpringSettings GetLimitsSpringSettings() {
        int pointer = internal_native_GetLimitsSpringSettings(native_address);
        if (pointer == 0)
            return null;
        if (SpringSettings_TEMP_GEN_0 == null)
            SpringSettings_TEMP_GEN_0 = new SpringSettings((byte) 1, (char) 1);
        SpringSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return SpringSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetLimitsSpringSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetLimitsSpringSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLimitsSpringSettings(int this_addr);

    public void SetLimitsSpringSettings(SpringSettings inLimitsSpringSettings) {
        internal_native_SetLimitsSpringSettings(native_address, (inLimitsSpringSettings != null ? inLimitsSpringSettings.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
jsObj.SetLimitsSpringSettings(inLimitsSpringSettings_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLimitsSpringSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);jsObj.SetLimitsSpringSettings(inLimitsSpringSettings_addr);")
    public static native void internal_native_SetLimitsSpringSettings(int this_addr, int inLimitsSpringSettings_addr);

    public Vec3 GetTotalLambdaPosition() {
        int pointer = internal_native_GetTotalLambdaPosition(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetTotalLambdaPosition();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetTotalLambdaPosition();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTotalLambdaPosition(int this_addr);

    public Vector2 GetTotalLambdaRotation() {
        int pointer = internal_native_GetTotalLambdaRotation(native_address);
        if (pointer == 0)
            return null;
        if (Vector2_TEMP_GEN_0 == null)
            Vector2_TEMP_GEN_0 = new Vector2((byte) 1, (char) 1);
        Vector2_TEMP_GEN_0.internal_reset(pointer, false);
        return Vector2_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetTotalLambdaRotation();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetTotalLambdaRotation();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTotalLambdaRotation(int this_addr);

    public float GetTotalLambdaRotationLimits() {
        return internal_native_GetTotalLambdaRotationLimits(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetTotalLambdaRotationLimits();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetTotalLambdaRotationLimits();return returnedJSObj;")
    public static native float internal_native_GetTotalLambdaRotationLimits(int this_addr);

    public float GetTotalLambdaMotor() {
        return internal_native_GetTotalLambdaMotor(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);
var returnedJSObj = jsObj.GetTotalLambdaMotor();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.HingeConstraint);var returnedJSObj = jsObj.GetTotalLambdaMotor();return returnedJSObj;")
    public static native float internal_native_GetTotalLambdaMotor(int this_addr);
}
