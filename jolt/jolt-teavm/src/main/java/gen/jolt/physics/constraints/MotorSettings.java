/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.constraints;

import gen.jolt.idl.IDLBase;

public class MotorSettings extends IDLBase {

    private SpringSettings SpringSettings_TEMP_GEN_0;

    static public final MotorSettings T_01 = new MotorSettings((byte) 1, (char) 1);

    static public final MotorSettings T_02 = new MotorSettings((byte) 1, (char) 1);

    static public final MotorSettings T_03 = new MotorSettings((byte) 1, (char) 1);

    public MotorSettings() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.MotorSettings();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.MotorSettings();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    public MotorSettings(float inFrequency, float inDamping) {
        int addr = internal_native_create_float_float(inFrequency, inDamping);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.MotorSettings(inFrequency, inDamping);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inFrequency", "inDamping"}, script = "var jsObj = new jolt.MotorSettings(inFrequency, inDamping);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_float_float(float inFrequency, float inDamping);

    public MotorSettings(float inFrequency, float inDamping, float inForceLimit, float inTorqueLimit) {
        int addr = internal_native_create_float_float_float_float(inFrequency, inDamping, inForceLimit, inTorqueLimit);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.MotorSettings(inFrequency, inDamping, inForceLimit, inTorqueLimit);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inFrequency", "inDamping", "inForceLimit", "inTorqueLimit"}, script = "var jsObj = new jolt.MotorSettings(inFrequency, inDamping, inForceLimit, inTorqueLimit);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_float_float_float_float(float inFrequency, float inDamping, float inForceLimit, float inTorqueLimit);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public MotorSettings(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public SpringSettings get_mSpringSettings() {
        int pointer = internal_native_get_mSpringSettings(native_address);
        if (pointer == 0)
            return null;
        if (SpringSettings_TEMP_GEN_0 == null)
            SpringSettings_TEMP_GEN_0 = new SpringSettings((byte) 1, (char) 1);
        SpringSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return SpringSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
var returnedJSObj = jsObj.get_mSpringSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);var returnedJSObj = jsObj.get_mSpringSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mSpringSettings(int this_addr);

    public void set_mSpringSettings(SpringSettings mSpringSettings) {
        internal_native_set_mSpringSettings(native_address, (mSpringSettings != null ? mSpringSettings.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
jsObj.set_mSpringSettings(mSpringSettings_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mSpringSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);jsObj.set_mSpringSettings(mSpringSettings_addr);")
    public static native void internal_native_set_mSpringSettings(int this_addr, int mSpringSettings_addr);

    public float get_mMinForceLimit() {
        return internal_native_get_mMinForceLimit(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
return jsObj.get_mMinForceLimit();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);return jsObj.get_mMinForceLimit();")
    public static native float internal_native_get_mMinForceLimit(int this_addr);

    public void set_mMinForceLimit(float mMinForceLimit) {
        internal_native_set_mMinForceLimit(native_address, mMinForceLimit);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
jsObj.set_mMinForceLimit(mMinForceLimit);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMinForceLimit"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);jsObj.set_mMinForceLimit(mMinForceLimit);")
    public static native void internal_native_set_mMinForceLimit(int this_addr, float mMinForceLimit);

    public float get_mMaxForceLimit() {
        return internal_native_get_mMaxForceLimit(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
return jsObj.get_mMaxForceLimit();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);return jsObj.get_mMaxForceLimit();")
    public static native float internal_native_get_mMaxForceLimit(int this_addr);

    public void set_mMaxForceLimit(float mMaxForceLimit) {
        internal_native_set_mMaxForceLimit(native_address, mMaxForceLimit);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
jsObj.set_mMaxForceLimit(mMaxForceLimit);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaxForceLimit"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);jsObj.set_mMaxForceLimit(mMaxForceLimit);")
    public static native void internal_native_set_mMaxForceLimit(int this_addr, float mMaxForceLimit);

    public float get_mMinTorqueLimit() {
        return internal_native_get_mMinTorqueLimit(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
return jsObj.get_mMinTorqueLimit();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);return jsObj.get_mMinTorqueLimit();")
    public static native float internal_native_get_mMinTorqueLimit(int this_addr);

    public void set_mMinTorqueLimit(float mMinTorqueLimit) {
        internal_native_set_mMinTorqueLimit(native_address, mMinTorqueLimit);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
jsObj.set_mMinTorqueLimit(mMinTorqueLimit);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMinTorqueLimit"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);jsObj.set_mMinTorqueLimit(mMinTorqueLimit);")
    public static native void internal_native_set_mMinTorqueLimit(int this_addr, float mMinTorqueLimit);

    public float get_mMaxTorqueLimit() {
        return internal_native_get_mMaxTorqueLimit(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
return jsObj.get_mMaxTorqueLimit();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);return jsObj.get_mMaxTorqueLimit();")
    public static native float internal_native_get_mMaxTorqueLimit(int this_addr);

    public void set_mMaxTorqueLimit(float mMaxTorqueLimit) {
        internal_native_set_mMaxTorqueLimit(native_address, mMaxTorqueLimit);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);
jsObj.set_mMaxTorqueLimit(mMaxTorqueLimit);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaxTorqueLimit"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorSettings);jsObj.set_mMaxTorqueLimit(mMaxTorqueLimit);")
    public static native void internal_native_set_mMaxTorqueLimit(int this_addr, float mMaxTorqueLimit);
}
