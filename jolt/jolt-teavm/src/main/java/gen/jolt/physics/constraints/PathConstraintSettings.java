/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.constraints;

import gen.jolt.math.TwoBodyConstraintSettings;
import gen.jolt.math.Vec3;
import gen.jolt.math.Quat;
import gen.jolt.enums.EPathRotationConstraintType;

public class PathConstraintSettings extends TwoBodyConstraintSettings {

    private PathConstraintPath PathConstraintPath_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    private Quat Quat_TEMP_GEN_0;

    private MotorSettings MotorSettings_TEMP_GEN_0;

    static public final PathConstraintSettings T_01 = new PathConstraintSettings((byte) 1, (char) 1);

    static public final PathConstraintSettings T_02 = new PathConstraintSettings((byte) 1, (char) 1);

    static public final PathConstraintSettings T_03 = new PathConstraintSettings((byte) 1, (char) 1);

    public PathConstraintSettings() {
        super((byte) 1, (char) 1);
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.PathConstraintSettings();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.PathConstraintSettings();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public PathConstraintSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public PathConstraintPath get_mPath() {
        int pointer = internal_native_get_mPath(native_address);
        if (pointer == 0)
            return null;
        if (PathConstraintPath_TEMP_GEN_0 == null)
            PathConstraintPath_TEMP_GEN_0 = new PathConstraintPath((byte) 1, (char) 1);
        PathConstraintPath_TEMP_GEN_0.internal_reset(pointer, false);
        return PathConstraintPath_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
var returnedJSObj = jsObj.get_mPath();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);var returnedJSObj = jsObj.get_mPath();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mPath(int this_addr);

    public void set_mPath(PathConstraintPath mPath) {
        internal_native_set_mPath(native_address, (mPath != null ? mPath.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
jsObj.set_mPath(mPath_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPath_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);jsObj.set_mPath(mPath_addr);")
    public static native void internal_native_set_mPath(int this_addr, int mPath_addr);

    public Vec3 get_mPathPosition() {
        int pointer = internal_native_get_mPathPosition(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
var returnedJSObj = jsObj.get_mPathPosition();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);var returnedJSObj = jsObj.get_mPathPosition();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mPathPosition(int this_addr);

    public void set_mPathPosition(Vec3 mPathPosition) {
        internal_native_set_mPathPosition(native_address, (mPathPosition != null ? mPathPosition.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
jsObj.set_mPathPosition(mPathPosition_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPathPosition_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);jsObj.set_mPathPosition(mPathPosition_addr);")
    public static native void internal_native_set_mPathPosition(int this_addr, int mPathPosition_addr);

    public Quat get_mPathRotation() {
        int pointer = internal_native_get_mPathRotation(native_address);
        if (pointer == 0)
            return null;
        if (Quat_TEMP_GEN_0 == null)
            Quat_TEMP_GEN_0 = new Quat((byte) 1, (char) 1);
        Quat_TEMP_GEN_0.internal_reset(pointer, false);
        return Quat_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
var returnedJSObj = jsObj.get_mPathRotation();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);var returnedJSObj = jsObj.get_mPathRotation();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mPathRotation(int this_addr);

    public void set_mPathRotation(Quat mPathRotation) {
        internal_native_set_mPathRotation(native_address, (mPathRotation != null ? mPathRotation.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
jsObj.set_mPathRotation(mPathRotation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPathRotation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);jsObj.set_mPathRotation(mPathRotation_addr);")
    public static native void internal_native_set_mPathRotation(int this_addr, int mPathRotation_addr);

    public float get_mPathFraction() {
        return internal_native_get_mPathFraction(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
return jsObj.get_mPathFraction();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);return jsObj.get_mPathFraction();")
    public static native float internal_native_get_mPathFraction(int this_addr);

    public void set_mPathFraction(float mPathFraction) {
        internal_native_set_mPathFraction(native_address, mPathFraction);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
jsObj.set_mPathFraction(mPathFraction);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPathFraction"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);jsObj.set_mPathFraction(mPathFraction);")
    public static native void internal_native_set_mPathFraction(int this_addr, float mPathFraction);

    public float get_mMaxFrictionForce() {
        return internal_native_get_mMaxFrictionForce(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
return jsObj.get_mMaxFrictionForce();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);return jsObj.get_mMaxFrictionForce();")
    public static native float internal_native_get_mMaxFrictionForce(int this_addr);

    public void set_mMaxFrictionForce(float mMaxFrictionForce) {
        internal_native_set_mMaxFrictionForce(native_address, mMaxFrictionForce);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
jsObj.set_mMaxFrictionForce(mMaxFrictionForce);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaxFrictionForce"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);jsObj.set_mMaxFrictionForce(mMaxFrictionForce);")
    public static native void internal_native_set_mMaxFrictionForce(int this_addr, float mMaxFrictionForce);

    public EPathRotationConstraintType get_mRotationConstraintType() {
        int value = internal_native_get_mRotationConstraintType(native_address);
        return EPathRotationConstraintType.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
return jsObj.get_mRotationConstraintType();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);return jsObj.get_mRotationConstraintType();")
    public static native int internal_native_get_mRotationConstraintType(int this_addr);

    public void set_mRotationConstraintType(EPathRotationConstraintType mRotationConstraintType) {
        internal_native_set_mRotationConstraintType(native_address, (int) (mRotationConstraintType != null ? mRotationConstraintType.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
jsObj.set_mRotationConstraintType(mRotationConstraintType);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mRotationConstraintType"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);jsObj.set_mRotationConstraintType(mRotationConstraintType);")
    public static native void internal_native_set_mRotationConstraintType(int this_addr, int mRotationConstraintType);

    public MotorSettings get_mPositionMotorSettings() {
        int pointer = internal_native_get_mPositionMotorSettings(native_address);
        if (pointer == 0)
            return null;
        if (MotorSettings_TEMP_GEN_0 == null)
            MotorSettings_TEMP_GEN_0 = new MotorSettings((byte) 1, (char) 1);
        MotorSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return MotorSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
var returnedJSObj = jsObj.get_mPositionMotorSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);var returnedJSObj = jsObj.get_mPositionMotorSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mPositionMotorSettings(int this_addr);

    public void set_mPositionMotorSettings(MotorSettings mPositionMotorSettings) {
        internal_native_set_mPositionMotorSettings(native_address, (mPositionMotorSettings != null ? mPositionMotorSettings.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);
jsObj.set_mPositionMotorSettings(mPositionMotorSettings_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPositionMotorSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.PathConstraintSettings);jsObj.set_mPositionMotorSettings(mPositionMotorSettings_addr);")
    public static native void internal_native_set_mPositionMotorSettings(int this_addr, int mPositionMotorSettings_addr);
}
