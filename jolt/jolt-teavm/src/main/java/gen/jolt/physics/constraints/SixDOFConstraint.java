/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.constraints;

import gen.jolt.math.Vec3;
import gen.jolt.enums.SixDOFConstraintSettings_EAxis;
import gen.jolt.math.Quat;
import gen.jolt.enums.EMotorState;

public class SixDOFConstraint extends TwoBodyConstraint {

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    private Vec3 Vec3_TEMP_GEN_3;

    private SpringSettings SpringSettings_TEMP_GEN_0;

    private Quat Quat_TEMP_GEN_0;

    private MotorSettings MotorSettings_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_4;

    private Vec3 Vec3_TEMP_GEN_5;

    private Vec3 Vec3_TEMP_GEN_6;

    private Quat Quat_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_7;

    private Vec3 Vec3_TEMP_GEN_8;

    private Vec3 Vec3_TEMP_GEN_9;

    private Vec3 Vec3_TEMP_GEN_10;

    static public final SixDOFConstraint T_01 = new SixDOFConstraint((byte) 1, (char) 1);

    static public final SixDOFConstraint T_02 = new SixDOFConstraint((byte) 1, (char) 1);

    static public final SixDOFConstraint T_03 = new SixDOFConstraint((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SixDOFConstraint(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public void SetTranslationLimits(Vec3 inLimitMin, Vec3 inLimitMax) {
        internal_native_SetTranslationLimits(native_address, (inLimitMin != null ? inLimitMin.native_address : 0), (inLimitMax != null ? inLimitMax.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
jsObj.SetTranslationLimits(inLimitMin_addr, inLimitMax_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLimitMin_addr", "inLimitMax_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);jsObj.SetTranslationLimits(inLimitMin_addr, inLimitMax_addr);")
    public static native void internal_native_SetTranslationLimits(int this_addr, int inLimitMin_addr, int inLimitMax_addr);

    public void SetRotationLimits(Vec3 inLimitMin, Vec3 inLimitMax) {
        internal_native_SetRotationLimits(native_address, (inLimitMin != null ? inLimitMin.native_address : 0), (inLimitMax != null ? inLimitMax.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
jsObj.SetRotationLimits(inLimitMin_addr, inLimitMax_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLimitMin_addr", "inLimitMax_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);jsObj.SetRotationLimits(inLimitMin_addr, inLimitMax_addr);")
    public static native void internal_native_SetRotationLimits(int this_addr, int inLimitMin_addr, int inLimitMax_addr);

    public float GetLimitsMin(SixDOFConstraintSettings_EAxis inAxis) {
        return internal_native_GetLimitsMin(native_address, (int) (inAxis != null ? inAxis.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetLimitsMin(inAxis);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetLimitsMin(inAxis);return returnedJSObj;")
    public static native float internal_native_GetLimitsMin(int this_addr, int inAxis);

    public float GetLimitsMax(SixDOFConstraintSettings_EAxis inAxis) {
        return internal_native_GetLimitsMax(native_address, (int) (inAxis != null ? inAxis.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetLimitsMax(inAxis);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetLimitsMax(inAxis);return returnedJSObj;")
    public static native float internal_native_GetLimitsMax(int this_addr, int inAxis);

    public Vec3 GetTranslationLimitsMin() {
        int pointer = internal_native_GetTranslationLimitsMin(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetTranslationLimitsMin();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetTranslationLimitsMin();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTranslationLimitsMin(int this_addr);

    public Vec3 GetTranslationLimitsMax() {
        int pointer = internal_native_GetTranslationLimitsMax(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetTranslationLimitsMax();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetTranslationLimitsMax();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTranslationLimitsMax(int this_addr);

    public Vec3 GetRotationLimitsMin() {
        int pointer = internal_native_GetRotationLimitsMin(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetRotationLimitsMin();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetRotationLimitsMin();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetRotationLimitsMin(int this_addr);

    public Vec3 GetRotationLimitsMax() {
        int pointer = internal_native_GetRotationLimitsMax(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_3 == null)
            Vec3_TEMP_GEN_3 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_3.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetRotationLimitsMax();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetRotationLimitsMax();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetRotationLimitsMax(int this_addr);

    public boolean IsFixedAxis(SixDOFConstraintSettings_EAxis inAxis) {
        return internal_native_IsFixedAxis(native_address, (int) (inAxis != null ? inAxis.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.IsFixedAxis(inAxis);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.IsFixedAxis(inAxis);return returnedJSObj;")
    public static native boolean internal_native_IsFixedAxis(int this_addr, int inAxis);

    public boolean IsFreeAxis(SixDOFConstraintSettings_EAxis inAxis) {
        return internal_native_IsFreeAxis(native_address, (int) (inAxis != null ? inAxis.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.IsFreeAxis(inAxis);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.IsFreeAxis(inAxis);return returnedJSObj;")
    public static native boolean internal_native_IsFreeAxis(int this_addr, int inAxis);

    public SpringSettings GetLimitsSpringSettings(SixDOFConstraintSettings_EAxis inAxis) {
        int pointer = internal_native_GetLimitsSpringSettings(native_address, (int) (inAxis != null ? inAxis.getValue() : 0));
        if (pointer == 0)
            return null;
        if (SpringSettings_TEMP_GEN_0 == null)
            SpringSettings_TEMP_GEN_0 = new SpringSettings((byte) 1, (char) 1);
        SpringSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return SpringSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetLimitsSpringSettings(inAxis);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetLimitsSpringSettings(inAxis);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLimitsSpringSettings(int this_addr, int inAxis);

    public void SetLimitsSpringSettings(SixDOFConstraintSettings_EAxis inAxis, SpringSettings inLimitsSpringSettings) {
        internal_native_SetLimitsSpringSettings(native_address, (int) (inAxis != null ? inAxis.getValue() : 0), (inLimitsSpringSettings != null ? inLimitsSpringSettings.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
jsObj.SetLimitsSpringSettings(inAxis, inLimitsSpringSettings_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis", "inLimitsSpringSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);jsObj.SetLimitsSpringSettings(inAxis, inLimitsSpringSettings_addr);")
    public static native void internal_native_SetLimitsSpringSettings(int this_addr, int inAxis, int inLimitsSpringSettings_addr);

    public void SetMaxFriction(SixDOFConstraintSettings_EAxis inAxis, float inFriction) {
        internal_native_SetMaxFriction(native_address, (int) (inAxis != null ? inAxis.getValue() : 0), inFriction);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
jsObj.SetMaxFriction(inAxis, inFriction);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis", "inFriction"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);jsObj.SetMaxFriction(inAxis, inFriction);")
    public static native void internal_native_SetMaxFriction(int this_addr, int inAxis, float inFriction);

    public float GetMaxFriction(SixDOFConstraintSettings_EAxis inAxis) {
        return internal_native_GetMaxFriction(native_address, (int) (inAxis != null ? inAxis.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetMaxFriction(inAxis);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetMaxFriction(inAxis);return returnedJSObj;")
    public static native float internal_native_GetMaxFriction(int this_addr, int inAxis);

    public Quat GetRotationInConstraintSpace() {
        int pointer = internal_native_GetRotationInConstraintSpace(native_address);
        if (pointer == 0)
            return null;
        if (Quat_TEMP_GEN_0 == null)
            Quat_TEMP_GEN_0 = new Quat((byte) 1, (char) 1);
        Quat_TEMP_GEN_0.internal_reset(pointer, false);
        return Quat_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetRotationInConstraintSpace();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetRotationInConstraintSpace();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetRotationInConstraintSpace(int this_addr);

    public MotorSettings GetMotorSettings(SixDOFConstraintSettings_EAxis inAxis) {
        int pointer = internal_native_GetMotorSettings(native_address, (int) (inAxis != null ? inAxis.getValue() : 0));
        if (pointer == 0)
            return null;
        if (MotorSettings_TEMP_GEN_0 == null)
            MotorSettings_TEMP_GEN_0 = new MotorSettings((byte) 1, (char) 1);
        MotorSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return MotorSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetMotorSettings(inAxis);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetMotorSettings(inAxis);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetMotorSettings(int this_addr, int inAxis);

    public void SetMotorState(SixDOFConstraintSettings_EAxis inAxis, EMotorState inState) {
        internal_native_SetMotorState(native_address, (int) (inAxis != null ? inAxis.getValue() : 0), (int) (inState != null ? inState.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
jsObj.SetMotorState(inAxis, inState);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis", "inState"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);jsObj.SetMotorState(inAxis, inState);")
    public static native void internal_native_SetMotorState(int this_addr, int inAxis, int inState);

    public EMotorState GetMotorState(SixDOFConstraintSettings_EAxis inAxis) {
        int value = internal_native_GetMotorState(native_address, (int) (inAxis != null ? inAxis.getValue() : 0));
        return EMotorState.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetMotorState(inAxis);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAxis"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetMotorState(inAxis);return returnedJSObj;")
    public static native int internal_native_GetMotorState(int this_addr, int inAxis);

    public Vec3 GetTargetVelocityCS() {
        int pointer = internal_native_GetTargetVelocityCS(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_4 == null)
            Vec3_TEMP_GEN_4 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_4.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_4;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetTargetVelocityCS();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetTargetVelocityCS();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTargetVelocityCS(int this_addr);

    public void SetTargetVelocityCS(Vec3 inVelocity) {
        internal_native_SetTargetVelocityCS(native_address, (inVelocity != null ? inVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
jsObj.SetTargetVelocityCS(inVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);jsObj.SetTargetVelocityCS(inVelocity_addr);")
    public static native void internal_native_SetTargetVelocityCS(int this_addr, int inVelocity_addr);

    public void SetTargetAngularVelocityCS(Vec3 inAngularVelocity) {
        internal_native_SetTargetAngularVelocityCS(native_address, (inAngularVelocity != null ? inAngularVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
jsObj.SetTargetAngularVelocityCS(inAngularVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAngularVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);jsObj.SetTargetAngularVelocityCS(inAngularVelocity_addr);")
    public static native void internal_native_SetTargetAngularVelocityCS(int this_addr, int inAngularVelocity_addr);

    public Vec3 GetTargetAngularVelocityCS() {
        int pointer = internal_native_GetTargetAngularVelocityCS(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_5 == null)
            Vec3_TEMP_GEN_5 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_5.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_5;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetTargetAngularVelocityCS();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetTargetAngularVelocityCS();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTargetAngularVelocityCS(int this_addr);

    public Vec3 GetTargetPositionCS() {
        int pointer = internal_native_GetTargetPositionCS(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_6 == null)
            Vec3_TEMP_GEN_6 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_6.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_6;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetTargetPositionCS();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetTargetPositionCS();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTargetPositionCS(int this_addr);

    public void SetTargetPositionCS(Vec3 inPosition) {
        internal_native_SetTargetPositionCS(native_address, (inPosition != null ? inPosition.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
jsObj.SetTargetPositionCS(inPosition_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPosition_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);jsObj.SetTargetPositionCS(inPosition_addr);")
    public static native void internal_native_SetTargetPositionCS(int this_addr, int inPosition_addr);

    public void SetTargetOrientationCS(Quat inOrientation) {
        internal_native_SetTargetOrientationCS(native_address, (inOrientation != null ? inOrientation.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
jsObj.SetTargetOrientationCS(inOrientation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inOrientation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);jsObj.SetTargetOrientationCS(inOrientation_addr);")
    public static native void internal_native_SetTargetOrientationCS(int this_addr, int inOrientation_addr);

    public Quat GetTargetOrientationCS() {
        int pointer = internal_native_GetTargetOrientationCS(native_address);
        if (pointer == 0)
            return null;
        if (Quat_TEMP_GEN_1 == null)
            Quat_TEMP_GEN_1 = new Quat((byte) 1, (char) 1);
        Quat_TEMP_GEN_1.internal_reset(pointer, false);
        return Quat_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetTargetOrientationCS();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetTargetOrientationCS();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTargetOrientationCS(int this_addr);

    public void SetTargetOrientationBS(Quat inOrientation) {
        internal_native_SetTargetOrientationBS(native_address, (inOrientation != null ? inOrientation.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
jsObj.SetTargetOrientationBS(inOrientation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inOrientation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);jsObj.SetTargetOrientationBS(inOrientation_addr);")
    public static native void internal_native_SetTargetOrientationBS(int this_addr, int inOrientation_addr);

    public Vec3 GetTotalLambdaPosition() {
        int pointer = internal_native_GetTotalLambdaPosition(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_7 == null)
            Vec3_TEMP_GEN_7 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_7.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_7;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetTotalLambdaPosition();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetTotalLambdaPosition();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTotalLambdaPosition(int this_addr);

    public Vec3 GetTotalLambdaRotation() {
        int pointer = internal_native_GetTotalLambdaRotation(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_8 == null)
            Vec3_TEMP_GEN_8 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_8.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_8;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetTotalLambdaRotation();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetTotalLambdaRotation();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTotalLambdaRotation(int this_addr);

    public Vec3 GetTotalLambdaMotorTranslation() {
        int pointer = internal_native_GetTotalLambdaMotorTranslation(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_9 == null)
            Vec3_TEMP_GEN_9 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_9.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_9;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetTotalLambdaMotorTranslation();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetTotalLambdaMotorTranslation();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTotalLambdaMotorTranslation(int this_addr);

    public Vec3 GetTotalLambdaMotorRotation() {
        int pointer = internal_native_GetTotalLambdaMotorRotation(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_10 == null)
            Vec3_TEMP_GEN_10 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_10.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_10;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);
var returnedJSObj = jsObj.GetTotalLambdaMotorRotation();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SixDOFConstraint);var returnedJSObj = jsObj.GetTotalLambdaMotorRotation();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTotalLambdaMotorRotation(int this_addr);
}
