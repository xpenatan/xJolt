/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.constraints;

import gen.jolt.math.TwoBodyConstraintSettings;
import gen.jolt.enums.EConstraintSpace;
import gen.jolt.math.Vec3;

public class SliderConstraintSettings extends TwoBodyConstraintSettings {

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    private Vec3 Vec3_TEMP_GEN_3;

    private Vec3 Vec3_TEMP_GEN_4;

    private Vec3 Vec3_TEMP_GEN_5;

    private SpringSettings SpringSettings_TEMP_GEN_0;

    private MotorSettings MotorSettings_TEMP_GEN_0;

    static public final SliderConstraintSettings T_01 = new SliderConstraintSettings((byte) 1, (char) 1);

    static public final SliderConstraintSettings T_02 = new SliderConstraintSettings((byte) 1, (char) 1);

    static public final SliderConstraintSettings T_03 = new SliderConstraintSettings((byte) 1, (char) 1);

    public SliderConstraintSettings() {
        super((byte) 1, (char) 1);
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.SliderConstraintSettings();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.SliderConstraintSettings();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SliderConstraintSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public EConstraintSpace get_mSpace() {
        int value = internal_native_get_mSpace(native_address);
        return EConstraintSpace.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
return jsObj.get_mSpace();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);return jsObj.get_mSpace();")
    public static native int internal_native_get_mSpace(int this_addr);

    public void set_mSpace(EConstraintSpace mSpace) {
        internal_native_set_mSpace(native_address, (int) (mSpace != null ? mSpace.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mSpace(mSpace);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mSpace"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mSpace(mSpace);")
    public static native void internal_native_set_mSpace(int this_addr, int mSpace);

    public boolean get_mAutoDetectPoint() {
        return internal_native_get_mAutoDetectPoint(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
return jsObj.get_mAutoDetectPoint();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);return jsObj.get_mAutoDetectPoint();")
    public static native boolean internal_native_get_mAutoDetectPoint(int this_addr);

    public void set_mAutoDetectPoint(boolean mAutoDetectPoint) {
        internal_native_set_mAutoDetectPoint(native_address, mAutoDetectPoint);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mAutoDetectPoint(mAutoDetectPoint);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mAutoDetectPoint"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mAutoDetectPoint(mAutoDetectPoint);")
    public static native void internal_native_set_mAutoDetectPoint(int this_addr, boolean mAutoDetectPoint);

    public Vec3 get_mPoint1() {
        int pointer = internal_native_get_mPoint1(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
var returnedJSObj = jsObj.get_mPoint1();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);var returnedJSObj = jsObj.get_mPoint1();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mPoint1(int this_addr);

    public void set_mPoint1(Vec3 mPoint1) {
        internal_native_set_mPoint1(native_address, (mPoint1 != null ? mPoint1.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mPoint1(mPoint1_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPoint1_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mPoint1(mPoint1_addr);")
    public static native void internal_native_set_mPoint1(int this_addr, int mPoint1_addr);

    public Vec3 get_mSliderAxis1() {
        int pointer = internal_native_get_mSliderAxis1(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
var returnedJSObj = jsObj.get_mSliderAxis1();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);var returnedJSObj = jsObj.get_mSliderAxis1();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mSliderAxis1(int this_addr);

    public void set_mSliderAxis1(Vec3 mSliderAxis1) {
        internal_native_set_mSliderAxis1(native_address, (mSliderAxis1 != null ? mSliderAxis1.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mSliderAxis1(mSliderAxis1_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mSliderAxis1_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mSliderAxis1(mSliderAxis1_addr);")
    public static native void internal_native_set_mSliderAxis1(int this_addr, int mSliderAxis1_addr);

    public Vec3 get_mNormalAxis1() {
        int pointer = internal_native_get_mNormalAxis1(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
var returnedJSObj = jsObj.get_mNormalAxis1();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);var returnedJSObj = jsObj.get_mNormalAxis1();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mNormalAxis1(int this_addr);

    public void set_mNormalAxis1(Vec3 mNormalAxis1) {
        internal_native_set_mNormalAxis1(native_address, (mNormalAxis1 != null ? mNormalAxis1.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mNormalAxis1(mNormalAxis1_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mNormalAxis1_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mNormalAxis1(mNormalAxis1_addr);")
    public static native void internal_native_set_mNormalAxis1(int this_addr, int mNormalAxis1_addr);

    public Vec3 get_mPoint2() {
        int pointer = internal_native_get_mPoint2(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_3 == null)
            Vec3_TEMP_GEN_3 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_3.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
var returnedJSObj = jsObj.get_mPoint2();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);var returnedJSObj = jsObj.get_mPoint2();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mPoint2(int this_addr);

    public void set_mPoint2(Vec3 mPoint2) {
        internal_native_set_mPoint2(native_address, (mPoint2 != null ? mPoint2.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mPoint2(mPoint2_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPoint2_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mPoint2(mPoint2_addr);")
    public static native void internal_native_set_mPoint2(int this_addr, int mPoint2_addr);

    public Vec3 get_mSliderAxis2() {
        int pointer = internal_native_get_mSliderAxis2(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_4 == null)
            Vec3_TEMP_GEN_4 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_4.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_4;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
var returnedJSObj = jsObj.get_mSliderAxis2();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);var returnedJSObj = jsObj.get_mSliderAxis2();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mSliderAxis2(int this_addr);

    public void set_mSliderAxis2(Vec3 mSliderAxis2) {
        internal_native_set_mSliderAxis2(native_address, (mSliderAxis2 != null ? mSliderAxis2.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mSliderAxis2(mSliderAxis2_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mSliderAxis2_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mSliderAxis2(mSliderAxis2_addr);")
    public static native void internal_native_set_mSliderAxis2(int this_addr, int mSliderAxis2_addr);

    public Vec3 get_mNormalAxis2() {
        int pointer = internal_native_get_mNormalAxis2(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_5 == null)
            Vec3_TEMP_GEN_5 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_5.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_5;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
var returnedJSObj = jsObj.get_mNormalAxis2();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);var returnedJSObj = jsObj.get_mNormalAxis2();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mNormalAxis2(int this_addr);

    public void set_mNormalAxis2(Vec3 mNormalAxis2) {
        internal_native_set_mNormalAxis2(native_address, (mNormalAxis2 != null ? mNormalAxis2.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mNormalAxis2(mNormalAxis2_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mNormalAxis2_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mNormalAxis2(mNormalAxis2_addr);")
    public static native void internal_native_set_mNormalAxis2(int this_addr, int mNormalAxis2_addr);

    public float get_mLimitsMin() {
        return internal_native_get_mLimitsMin(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
return jsObj.get_mLimitsMin();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);return jsObj.get_mLimitsMin();")
    public static native float internal_native_get_mLimitsMin(int this_addr);

    public void set_mLimitsMin(float mLimitsMin) {
        internal_native_set_mLimitsMin(native_address, mLimitsMin);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mLimitsMin(mLimitsMin);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mLimitsMin"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mLimitsMin(mLimitsMin);")
    public static native void internal_native_set_mLimitsMin(int this_addr, float mLimitsMin);

    public float get_mLimitsMax() {
        return internal_native_get_mLimitsMax(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
return jsObj.get_mLimitsMax();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);return jsObj.get_mLimitsMax();")
    public static native float internal_native_get_mLimitsMax(int this_addr);

    public void set_mLimitsMax(float mLimitsMax) {
        internal_native_set_mLimitsMax(native_address, mLimitsMax);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mLimitsMax(mLimitsMax);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mLimitsMax"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mLimitsMax(mLimitsMax);")
    public static native void internal_native_set_mLimitsMax(int this_addr, float mLimitsMax);

    public SpringSettings get_mLimitsSpringSettings() {
        int pointer = internal_native_get_mLimitsSpringSettings(native_address);
        if (pointer == 0)
            return null;
        if (SpringSettings_TEMP_GEN_0 == null)
            SpringSettings_TEMP_GEN_0 = new SpringSettings((byte) 1, (char) 1);
        SpringSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return SpringSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
var returnedJSObj = jsObj.get_mLimitsSpringSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);var returnedJSObj = jsObj.get_mLimitsSpringSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mLimitsSpringSettings(int this_addr);

    public void set_mLimitsSpringSettings(SpringSettings mLimitsSpringSettings) {
        internal_native_set_mLimitsSpringSettings(native_address, (mLimitsSpringSettings != null ? mLimitsSpringSettings.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mLimitsSpringSettings(mLimitsSpringSettings_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mLimitsSpringSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mLimitsSpringSettings(mLimitsSpringSettings_addr);")
    public static native void internal_native_set_mLimitsSpringSettings(int this_addr, int mLimitsSpringSettings_addr);

    public float get_mMaxFrictionForce() {
        return internal_native_get_mMaxFrictionForce(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
return jsObj.get_mMaxFrictionForce();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);return jsObj.get_mMaxFrictionForce();")
    public static native float internal_native_get_mMaxFrictionForce(int this_addr);

    public void set_mMaxFrictionForce(float mMaxFrictionForce) {
        internal_native_set_mMaxFrictionForce(native_address, mMaxFrictionForce);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mMaxFrictionForce(mMaxFrictionForce);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaxFrictionForce"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mMaxFrictionForce(mMaxFrictionForce);")
    public static native void internal_native_set_mMaxFrictionForce(int this_addr, float mMaxFrictionForce);

    public MotorSettings get_mMotorSettings() {
        int pointer = internal_native_get_mMotorSettings(native_address);
        if (pointer == 0)
            return null;
        if (MotorSettings_TEMP_GEN_0 == null)
            MotorSettings_TEMP_GEN_0 = new MotorSettings((byte) 1, (char) 1);
        MotorSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return MotorSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
var returnedJSObj = jsObj.get_mMotorSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);var returnedJSObj = jsObj.get_mMotorSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mMotorSettings(int this_addr);

    public void set_mMotorSettings(MotorSettings mMotorSettings) {
        internal_native_set_mMotorSettings(native_address, (mMotorSettings != null ? mMotorSettings.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);
jsObj.set_mMotorSettings(mMotorSettings_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMotorSettings_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SliderConstraintSettings);jsObj.set_mMotorSettings(mMotorSettings_addr);")
    public static native void internal_native_set_mMotorSettings(int this_addr, int mMotorSettings_addr);
}
