/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.constraints;

import gen.jolt.math.Vec3;
import gen.jolt.math.Quat;
import gen.jolt.enums.EMotorState;

public class SwingTwistConstraint extends TwoBodyConstraint {

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Quat Quat_TEMP_GEN_0;

    private Quat Quat_TEMP_GEN_1;

    private MotorSettings MotorSettings_TEMP_GEN_0;

    private MotorSettings MotorSettings_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    private Quat Quat_TEMP_GEN_2;

    private Quat Quat_TEMP_GEN_3;

    private Vec3 Vec3_TEMP_GEN_3;

    private Vec3 Vec3_TEMP_GEN_4;

    static public final SwingTwistConstraint T_01 = new SwingTwistConstraint((byte) 1, (char) 1);

    static public final SwingTwistConstraint T_02 = new SwingTwistConstraint((byte) 1, (char) 1);

    static public final SwingTwistConstraint T_03 = new SwingTwistConstraint((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SwingTwistConstraint(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public Vec3 GetLocalSpacePosition1() {
        int pointer = internal_native_GetLocalSpacePosition1(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetLocalSpacePosition1();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetLocalSpacePosition1();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLocalSpacePosition1(int this_addr);

    public Vec3 GetLocalSpacePosition2() {
        int pointer = internal_native_GetLocalSpacePosition2(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetLocalSpacePosition2();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetLocalSpacePosition2();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLocalSpacePosition2(int this_addr);

    public Quat GetConstraintToBody1() {
        int pointer = internal_native_GetConstraintToBody1(native_address);
        if (pointer == 0)
            return null;
        if (Quat_TEMP_GEN_0 == null)
            Quat_TEMP_GEN_0 = new Quat((byte) 1, (char) 1);
        Quat_TEMP_GEN_0.internal_reset(pointer, false);
        return Quat_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetConstraintToBody1();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetConstraintToBody1();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetConstraintToBody1(int this_addr);

    public Quat GetConstraintToBody2() {
        int pointer = internal_native_GetConstraintToBody2(native_address);
        if (pointer == 0)
            return null;
        if (Quat_TEMP_GEN_1 == null)
            Quat_TEMP_GEN_1 = new Quat((byte) 1, (char) 1);
        Quat_TEMP_GEN_1.internal_reset(pointer, false);
        return Quat_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetConstraintToBody2();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetConstraintToBody2();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetConstraintToBody2(int this_addr);

    public float GetNormalHalfConeAngle() {
        return internal_native_GetNormalHalfConeAngle(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetNormalHalfConeAngle();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetNormalHalfConeAngle();return returnedJSObj;")
    public static native float internal_native_GetNormalHalfConeAngle(int this_addr);

    public void SetNormalHalfConeAngle(float inAngle) {
        internal_native_SetNormalHalfConeAngle(native_address, inAngle);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
jsObj.SetNormalHalfConeAngle(inAngle);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAngle"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);jsObj.SetNormalHalfConeAngle(inAngle);")
    public static native void internal_native_SetNormalHalfConeAngle(int this_addr, float inAngle);

    public float GetPlaneHalfConeAngle() {
        return internal_native_GetPlaneHalfConeAngle(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetPlaneHalfConeAngle();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetPlaneHalfConeAngle();return returnedJSObj;")
    public static native float internal_native_GetPlaneHalfConeAngle(int this_addr);

    public void SetPlaneHalfConeAngle(float inAngle) {
        internal_native_SetPlaneHalfConeAngle(native_address, inAngle);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
jsObj.SetPlaneHalfConeAngle(inAngle);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAngle"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);jsObj.SetPlaneHalfConeAngle(inAngle);")
    public static native void internal_native_SetPlaneHalfConeAngle(int this_addr, float inAngle);

    public float GetTwistMinAngle() {
        return internal_native_GetTwistMinAngle(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTwistMinAngle();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTwistMinAngle();return returnedJSObj;")
    public static native float internal_native_GetTwistMinAngle(int this_addr);

    public void SetTwistMinAngle(float inAngle) {
        internal_native_SetTwistMinAngle(native_address, inAngle);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
jsObj.SetTwistMinAngle(inAngle);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAngle"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);jsObj.SetTwistMinAngle(inAngle);")
    public static native void internal_native_SetTwistMinAngle(int this_addr, float inAngle);

    public float GetTwistMaxAngle() {
        return internal_native_GetTwistMaxAngle(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTwistMaxAngle();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTwistMaxAngle();return returnedJSObj;")
    public static native float internal_native_GetTwistMaxAngle(int this_addr);

    public void SetTwistMaxAngle(float inAngle) {
        internal_native_SetTwistMaxAngle(native_address, inAngle);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
jsObj.SetTwistMaxAngle(inAngle);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAngle"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);jsObj.SetTwistMaxAngle(inAngle);")
    public static native void internal_native_SetTwistMaxAngle(int this_addr, float inAngle);

    public MotorSettings GetSwingMotorSettings() {
        int pointer = internal_native_GetSwingMotorSettings(native_address);
        if (pointer == 0)
            return null;
        if (MotorSettings_TEMP_GEN_0 == null)
            MotorSettings_TEMP_GEN_0 = new MotorSettings((byte) 1, (char) 1);
        MotorSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return MotorSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetSwingMotorSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetSwingMotorSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetSwingMotorSettings(int this_addr);

    public MotorSettings GetTwistMotorSettings() {
        int pointer = internal_native_GetTwistMotorSettings(native_address);
        if (pointer == 0)
            return null;
        if (MotorSettings_TEMP_GEN_1 == null)
            MotorSettings_TEMP_GEN_1 = new MotorSettings((byte) 1, (char) 1);
        MotorSettings_TEMP_GEN_1.internal_reset(pointer, false);
        return MotorSettings_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTwistMotorSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTwistMotorSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTwistMotorSettings(int this_addr);

    public void SetMaxFrictionTorque(float inFrictionTorque) {
        internal_native_SetMaxFrictionTorque(native_address, inFrictionTorque);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
jsObj.SetMaxFrictionTorque(inFrictionTorque);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inFrictionTorque"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);jsObj.SetMaxFrictionTorque(inFrictionTorque);")
    public static native void internal_native_SetMaxFrictionTorque(int this_addr, float inFrictionTorque);

    public float GetMaxFrictionTorque() {
        return internal_native_GetMaxFrictionTorque(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetMaxFrictionTorque();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetMaxFrictionTorque();return returnedJSObj;")
    public static native float internal_native_GetMaxFrictionTorque(int this_addr);

    public void SetSwingMotorState(EMotorState inState) {
        internal_native_SetSwingMotorState(native_address, (int) (inState != null ? inState.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
jsObj.SetSwingMotorState(inState);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inState"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);jsObj.SetSwingMotorState(inState);")
    public static native void internal_native_SetSwingMotorState(int this_addr, int inState);

    public EMotorState GetSwingMotorState() {
        int value = internal_native_GetSwingMotorState(native_address);
        return EMotorState.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetSwingMotorState();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetSwingMotorState();return returnedJSObj;")
    public static native int internal_native_GetSwingMotorState(int this_addr);

    public void SetTwistMotorState(EMotorState inState) {
        internal_native_SetTwistMotorState(native_address, (int) (inState != null ? inState.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
jsObj.SetTwistMotorState(inState);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inState"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);jsObj.SetTwistMotorState(inState);")
    public static native void internal_native_SetTwistMotorState(int this_addr, int inState);

    public EMotorState GetTwistMotorState() {
        int value = internal_native_GetTwistMotorState(native_address);
        return EMotorState.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTwistMotorState();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTwistMotorState();return returnedJSObj;")
    public static native int internal_native_GetTwistMotorState(int this_addr);

    public void SetTargetAngularVelocityCS(Vec3 inAngularVelocity) {
        internal_native_SetTargetAngularVelocityCS(native_address, (inAngularVelocity != null ? inAngularVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
jsObj.SetTargetAngularVelocityCS(inAngularVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAngularVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);jsObj.SetTargetAngularVelocityCS(inAngularVelocity_addr);")
    public static native void internal_native_SetTargetAngularVelocityCS(int this_addr, int inAngularVelocity_addr);

    public Vec3 GetTargetAngularVelocityCS() {
        int pointer = internal_native_GetTargetAngularVelocityCS(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTargetAngularVelocityCS();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTargetAngularVelocityCS();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTargetAngularVelocityCS(int this_addr);

    public void SetTargetOrientationCS(Quat inOrientation) {
        internal_native_SetTargetOrientationCS(native_address, (inOrientation != null ? inOrientation.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
jsObj.SetTargetOrientationCS(inOrientation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inOrientation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);jsObj.SetTargetOrientationCS(inOrientation_addr);")
    public static native void internal_native_SetTargetOrientationCS(int this_addr, int inOrientation_addr);

    public Quat GetTargetOrientationCS() {
        int pointer = internal_native_GetTargetOrientationCS(native_address);
        if (pointer == 0)
            return null;
        if (Quat_TEMP_GEN_2 == null)
            Quat_TEMP_GEN_2 = new Quat((byte) 1, (char) 1);
        Quat_TEMP_GEN_2.internal_reset(pointer, false);
        return Quat_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTargetOrientationCS();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTargetOrientationCS();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTargetOrientationCS(int this_addr);

    public void SetTargetOrientationBS(Quat inOrientation) {
        internal_native_SetTargetOrientationBS(native_address, (inOrientation != null ? inOrientation.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
jsObj.SetTargetOrientationBS(inOrientation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inOrientation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);jsObj.SetTargetOrientationBS(inOrientation_addr);")
    public static native void internal_native_SetTargetOrientationBS(int this_addr, int inOrientation_addr);

    public Quat GetRotationInConstraintSpace() {
        int pointer = internal_native_GetRotationInConstraintSpace(native_address);
        if (pointer == 0)
            return null;
        if (Quat_TEMP_GEN_3 == null)
            Quat_TEMP_GEN_3 = new Quat((byte) 1, (char) 1);
        Quat_TEMP_GEN_3.internal_reset(pointer, false);
        return Quat_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetRotationInConstraintSpace();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetRotationInConstraintSpace();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetRotationInConstraintSpace(int this_addr);

    public Vec3 GetTotalLambdaPosition() {
        int pointer = internal_native_GetTotalLambdaPosition(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_3 == null)
            Vec3_TEMP_GEN_3 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_3.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTotalLambdaPosition();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTotalLambdaPosition();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTotalLambdaPosition(int this_addr);

    public float GetTotalLambdaTwist() {
        return internal_native_GetTotalLambdaTwist(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTotalLambdaTwist();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTotalLambdaTwist();return returnedJSObj;")
    public static native float internal_native_GetTotalLambdaTwist(int this_addr);

    public float GetTotalLambdaSwingY() {
        return internal_native_GetTotalLambdaSwingY(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTotalLambdaSwingY();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTotalLambdaSwingY();return returnedJSObj;")
    public static native float internal_native_GetTotalLambdaSwingY(int this_addr);

    public float GetTotalLambdaSwingZ() {
        return internal_native_GetTotalLambdaSwingZ(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTotalLambdaSwingZ();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTotalLambdaSwingZ();return returnedJSObj;")
    public static native float internal_native_GetTotalLambdaSwingZ(int this_addr);

    public Vec3 GetTotalLambdaMotor() {
        int pointer = internal_native_GetTotalLambdaMotor(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_4 == null)
            Vec3_TEMP_GEN_4 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_4.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_4;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);
var returnedJSObj = jsObj.GetTotalLambdaMotor();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SwingTwistConstraint);var returnedJSObj = jsObj.GetTotalLambdaMotor();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTotalLambdaMotor(int this_addr);
}
