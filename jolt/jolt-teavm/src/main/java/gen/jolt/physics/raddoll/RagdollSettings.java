/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.raddoll;

import gen.jolt.idl.IDLBase;
import gen.jolt.physics.PhysicsSystem;
import gen.jolt.physics.ragdoll.Ragdoll;
import gen.jolt.skeleton.Skeleton;
import gen.jolt.math.Mat44MemRef;

public class RagdollSettings extends IDLBase {

    private Ragdoll Ragdoll_TEMP_GEN_0;

    private Skeleton Skeleton_TEMP_GEN_0;

    private ArrayRagdollPart ArrayRagdollPart_TEMP_GEN_0;

    private ArrayRagdollAdditionalConstraint ArrayRagdollAdditionalConstraint_TEMP_GEN_0;

    static public final RagdollSettings T_01 = new RagdollSettings((byte) 1, (char) 1);

    static public final RagdollSettings T_02 = new RagdollSettings((byte) 1, (char) 1);

    static public final RagdollSettings T_03 = new RagdollSettings((byte) 1, (char) 1);

    public RagdollSettings() {
        int addr = internal_native_create();
        internal_reset(addr, false);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.RagdollSettings();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.RagdollSettings();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public RagdollSettings(byte b, char c) {
    }

    public boolean Stabilize() {
        return internal_native_Stabilize(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
var returnedJSObj = jsObj.Stabilize();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);var returnedJSObj = jsObj.Stabilize();return returnedJSObj;")
    public static native boolean internal_native_Stabilize(int this_addr);

    public Ragdoll CreateRagdoll(int inCollisionGroup, int inUserData, PhysicsSystem inSystem) {
        int pointer = internal_native_CreateRagdoll(native_address, inCollisionGroup, inUserData, (inSystem != null ? inSystem.native_address : 0));
        if (pointer == 0)
            return null;
        if (Ragdoll_TEMP_GEN_0 == null)
            Ragdoll_TEMP_GEN_0 = new Ragdoll((byte) 1, (char) 1);
        Ragdoll_TEMP_GEN_0.internal_reset(pointer, false);
        return Ragdoll_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
var returnedJSObj = jsObj.CreateRagdoll(inCollisionGroup, inUserData, inSystem_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inCollisionGroup", "inUserData", "inSystem_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);var returnedJSObj = jsObj.CreateRagdoll(inCollisionGroup, inUserData, inSystem_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_CreateRagdoll(int this_addr, int inCollisionGroup, int inUserData, int inSystem_addr);

    public Skeleton GetSkeleton() {
        int pointer = internal_native_GetSkeleton(native_address);
        if (pointer == 0)
            return null;
        if (Skeleton_TEMP_GEN_0 == null)
            Skeleton_TEMP_GEN_0 = new Skeleton((byte) 1, (char) 1);
        Skeleton_TEMP_GEN_0.internal_reset(pointer, false);
        return Skeleton_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
var returnedJSObj = jsObj.GetSkeleton();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);var returnedJSObj = jsObj.GetSkeleton();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetSkeleton(int this_addr);

    public void DisableParentChildCollisions(Mat44MemRef inJointMatrices, float inMinSeparationDistance) {
        internal_native_DisableParentChildCollisions(native_address, (inJointMatrices != null ? inJointMatrices.native_address : 0), inMinSeparationDistance);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
jsObj.DisableParentChildCollisions(inJointMatrices_addr, inMinSeparationDistance);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inJointMatrices_addr", "inMinSeparationDistance"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);jsObj.DisableParentChildCollisions(inJointMatrices_addr, inMinSeparationDistance);")
    public static native void internal_native_DisableParentChildCollisions(int this_addr, int inJointMatrices_addr, float inMinSeparationDistance);

    public void DisableParentChildCollisions(Mat44MemRef inJointMatrices) {
        internal_native_DisableParentChildCollisions(native_address, (inJointMatrices != null ? inJointMatrices.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
jsObj.DisableParentChildCollisions(inJointMatrices_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inJointMatrices_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);jsObj.DisableParentChildCollisions(inJointMatrices_addr);")
    public static native void internal_native_DisableParentChildCollisions(int this_addr, int inJointMatrices_addr);

    public void DisableParentChildCollisions() {
        internal_native_DisableParentChildCollisions(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
jsObj.DisableParentChildCollisions();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);jsObj.DisableParentChildCollisions();")
    public static native void internal_native_DisableParentChildCollisions(int this_addr);

    public void CalculateBodyIndexToConstraintIndex() {
        internal_native_CalculateBodyIndexToConstraintIndex(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
jsObj.CalculateBodyIndexToConstraintIndex();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);jsObj.CalculateBodyIndexToConstraintIndex();")
    public static native void internal_native_CalculateBodyIndexToConstraintIndex(int this_addr);

    public void CalculateConstraintIndexToBodyIdxPair() {
        internal_native_CalculateConstraintIndexToBodyIdxPair(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
jsObj.CalculateConstraintIndexToBodyIdxPair();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);jsObj.CalculateConstraintIndexToBodyIdxPair();")
    public static native void internal_native_CalculateConstraintIndexToBodyIdxPair(int this_addr);

    public ArrayRagdollPart get_mParts() {
        int pointer = internal_native_get_mParts(native_address);
        if (pointer == 0)
            return null;
        if (ArrayRagdollPart_TEMP_GEN_0 == null)
            ArrayRagdollPart_TEMP_GEN_0 = new ArrayRagdollPart((byte) 1, (char) 1);
        ArrayRagdollPart_TEMP_GEN_0.internal_reset(pointer, false);
        return ArrayRagdollPart_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
var returnedJSObj = jsObj.get_mParts();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);var returnedJSObj = jsObj.get_mParts();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mParts(int this_addr);

    public void set_mParts(ArrayRagdollPart mParts) {
        internal_native_set_mParts(native_address, (mParts != null ? mParts.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
jsObj.set_mParts(mParts_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mParts_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);jsObj.set_mParts(mParts_addr);")
    public static native void internal_native_set_mParts(int this_addr, int mParts_addr);

    public ArrayRagdollAdditionalConstraint get_mAdditionalConstraints() {
        int pointer = internal_native_get_mAdditionalConstraints(native_address);
        if (pointer == 0)
            return null;
        if (ArrayRagdollAdditionalConstraint_TEMP_GEN_0 == null)
            ArrayRagdollAdditionalConstraint_TEMP_GEN_0 = new ArrayRagdollAdditionalConstraint((byte) 1, (char) 1);
        ArrayRagdollAdditionalConstraint_TEMP_GEN_0.internal_reset(pointer, false);
        return ArrayRagdollAdditionalConstraint_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
var returnedJSObj = jsObj.get_mAdditionalConstraints();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);var returnedJSObj = jsObj.get_mAdditionalConstraints();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mAdditionalConstraints(int this_addr);

    public void set_mAdditionalConstraints(ArrayRagdollAdditionalConstraint mAdditionalConstraints) {
        internal_native_set_mAdditionalConstraints(native_address, (mAdditionalConstraints != null ? mAdditionalConstraints.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);
jsObj.set_mAdditionalConstraints(mAdditionalConstraints_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mAdditionalConstraints_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RagdollSettings);jsObj.set_mAdditionalConstraints(mAdditionalConstraints_addr);")
    public static native void internal_native_set_mAdditionalConstraints(int this_addr, int mAdditionalConstraints_addr);
}
