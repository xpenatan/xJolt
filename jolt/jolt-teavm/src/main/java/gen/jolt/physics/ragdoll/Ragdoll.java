/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.ragdoll;

import gen.jolt.idl.IDLBase;
import gen.jolt.physics.PhysicsSystem;
import gen.jolt.enums.EActivation;
import gen.jolt.skeleton.SkeletonPose;
import gen.jolt.math.Vec3;
import gen.jolt.math.Quat;
import gen.jolt.physics.body.BodyID;
import gen.jolt.physics.body.BodyIDVector;
import gen.jolt.geometry.AABox;
import gen.jolt.physics.constraints.TwoBodyConstraint;
import gen.jolt.physics.raddoll.RagdollSettings;

public class Ragdoll extends IDLBase {

    private BodyID BodyID_TEMP_GEN_0;

    private BodyIDVector BodyIDVector_TEMP_GEN_0;

    private AABox AABox_TEMP_GEN_0;

    private AABox AABox_TEMP_GEN_1;

    private TwoBodyConstraint TwoBodyConstraint_TEMP_GEN_0;

    private RagdollSettings RagdollSettings_TEMP_GEN_0;

    static public final Ragdoll T_01 = new Ragdoll((byte) 1, (char) 1);

    static public final Ragdoll T_02 = new Ragdoll((byte) 1, (char) 1);

    static public final Ragdoll T_03 = new Ragdoll((byte) 1, (char) 1);

    public Ragdoll(PhysicsSystem inSystem) {
        int addr = internal_native_create_PhysicsSystem((inSystem != null ? inSystem.native_address : 0));
        internal_reset(addr, false);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.Ragdoll(inSystem_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inSystem_addr"}, script = "var jsObj = new jolt.Ragdoll(inSystem_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_PhysicsSystem(int inSystem_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Ragdoll(byte b, char c) {
    }

    public void AddToPhysicsSystem(EActivation inActivationMode, boolean inLockBodies) {
        internal_native_AddToPhysicsSystem(native_address, (int) (inActivationMode != null ? inActivationMode.getValue() : 0), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.AddToPhysicsSystem(inActivationMode, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inActivationMode", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.AddToPhysicsSystem(inActivationMode, inLockBodies);")
    public static native void internal_native_AddToPhysicsSystem(int this_addr, int inActivationMode, boolean inLockBodies);

    public void AddToPhysicsSystem(EActivation inActivationMode) {
        internal_native_AddToPhysicsSystem(native_address, (int) (inActivationMode != null ? inActivationMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.AddToPhysicsSystem(inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.AddToPhysicsSystem(inActivationMode);")
    public static native void internal_native_AddToPhysicsSystem(int this_addr, int inActivationMode);

    public void RemoveFromPhysicsSystem(boolean inLockBodies) {
        internal_native_RemoveFromPhysicsSystem(native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.RemoveFromPhysicsSystem(inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.RemoveFromPhysicsSystem(inLockBodies);")
    public static native void internal_native_RemoveFromPhysicsSystem(int this_addr, boolean inLockBodies);

    public void RemoveFromPhysicsSystem() {
        internal_native_RemoveFromPhysicsSystem(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.RemoveFromPhysicsSystem();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.RemoveFromPhysicsSystem();")
    public static native void internal_native_RemoveFromPhysicsSystem(int this_addr);

    public void Activate(boolean inLockBodies) {
        internal_native_Activate(native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.Activate(inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.Activate(inLockBodies);")
    public static native void internal_native_Activate(int this_addr, boolean inLockBodies);

    public void Activate() {
        internal_native_Activate(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.Activate();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.Activate();")
    public static native void internal_native_Activate(int this_addr);

    public boolean IsActive(boolean inLockBodies) {
        return internal_native_IsActive(native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
var returnedJSObj = jsObj.IsActive(inLockBodies);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);var returnedJSObj = jsObj.IsActive(inLockBodies);return returnedJSObj;")
    public static native boolean internal_native_IsActive(int this_addr, boolean inLockBodies);

    public boolean IsActive() {
        return internal_native_IsActive(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
var returnedJSObj = jsObj.IsActive();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);var returnedJSObj = jsObj.IsActive();return returnedJSObj;")
    public static native boolean internal_native_IsActive(int this_addr);

    public void SetGroupID(int inGroupID, boolean inLockBodies) {
        internal_native_SetGroupID(native_address, inGroupID, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.SetGroupID(inGroupID, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inGroupID", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.SetGroupID(inGroupID, inLockBodies);")
    public static native void internal_native_SetGroupID(int this_addr, int inGroupID, boolean inLockBodies);

    public void SetGroupID(int inGroupID) {
        internal_native_SetGroupID(native_address, inGroupID);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.SetGroupID(inGroupID);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inGroupID"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.SetGroupID(inGroupID);")
    public static native void internal_native_SetGroupID(int this_addr, int inGroupID);

    public void SetPose(SkeletonPose inPose, boolean inLockBodies) {
        internal_native_SetPose(native_address, (inPose != null ? inPose.native_address : 0), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.SetPose(inPose_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPose_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.SetPose(inPose_addr, inLockBodies);")
    public static native void internal_native_SetPose(int this_addr, int inPose_addr, boolean inLockBodies);

    public void SetPose(SkeletonPose inPose) {
        internal_native_SetPose(native_address, (inPose != null ? inPose.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.SetPose(inPose_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPose_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.SetPose(inPose_addr);")
    public static native void internal_native_SetPose(int this_addr, int inPose_addr);

    public void GetPose(SkeletonPose outPose, boolean inLockBodies) {
        internal_native_GetPose(native_address, (outPose != null ? outPose.native_address : 0), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.GetPose(outPose_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "outPose_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.GetPose(outPose_addr, inLockBodies);")
    public static native void internal_native_GetPose(int this_addr, int outPose_addr, boolean inLockBodies);

    public void GetPose(SkeletonPose outPose) {
        internal_native_GetPose(native_address, (outPose != null ? outPose.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.GetPose(outPose_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "outPose_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.GetPose(outPose_addr);")
    public static native void internal_native_GetPose(int this_addr, int outPose_addr);

    public void ResetWarmStart() {
        internal_native_ResetWarmStart(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.ResetWarmStart();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.ResetWarmStart();")
    public static native void internal_native_ResetWarmStart(int this_addr);

    public void DriveToPoseUsingKinematics(SkeletonPose inPose, float inDeltaTime, boolean inLockBodies) {
        internal_native_DriveToPoseUsingKinematics(native_address, (inPose != null ? inPose.native_address : 0), inDeltaTime, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.DriveToPoseUsingKinematics(inPose_addr, inDeltaTime, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPose_addr", "inDeltaTime", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.DriveToPoseUsingKinematics(inPose_addr, inDeltaTime, inLockBodies);")
    public static native void internal_native_DriveToPoseUsingKinematics(int this_addr, int inPose_addr, float inDeltaTime, boolean inLockBodies);

    public void DriveToPoseUsingKinematics(SkeletonPose inPose, float inDeltaTime) {
        internal_native_DriveToPoseUsingKinematics(native_address, (inPose != null ? inPose.native_address : 0), inDeltaTime);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.DriveToPoseUsingKinematics(inPose_addr, inDeltaTime);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPose_addr", "inDeltaTime"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.DriveToPoseUsingKinematics(inPose_addr, inDeltaTime);")
    public static native void internal_native_DriveToPoseUsingKinematics(int this_addr, int inPose_addr, float inDeltaTime);

    public void DriveToPoseUsingMotors(SkeletonPose inPose) {
        internal_native_DriveToPoseUsingMotors(native_address, (inPose != null ? inPose.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.DriveToPoseUsingMotors(inPose_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPose_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.DriveToPoseUsingMotors(inPose_addr);")
    public static native void internal_native_DriveToPoseUsingMotors(int this_addr, int inPose_addr);

    public void SetLinearAndAngularVelocity(Vec3 inLinearVelocity, Vec3 inAngularVelocity, boolean inLockBodies) {
        internal_native_SetLinearAndAngularVelocity(native_address, (inLinearVelocity != null ? inLinearVelocity.native_address : 0), (inAngularVelocity != null ? inAngularVelocity.native_address : 0), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.SetLinearAndAngularVelocity(inLinearVelocity_addr, inAngularVelocity_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr", "inAngularVelocity_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.SetLinearAndAngularVelocity(inLinearVelocity_addr, inAngularVelocity_addr, inLockBodies);")
    public static native void internal_native_SetLinearAndAngularVelocity(int this_addr, int inLinearVelocity_addr, int inAngularVelocity_addr, boolean inLockBodies);

    public void SetLinearAndAngularVelocity(Vec3 inLinearVelocity, Vec3 inAngularVelocity) {
        internal_native_SetLinearAndAngularVelocity(native_address, (inLinearVelocity != null ? inLinearVelocity.native_address : 0), (inAngularVelocity != null ? inAngularVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.SetLinearAndAngularVelocity(inLinearVelocity_addr, inAngularVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr", "inAngularVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.SetLinearAndAngularVelocity(inLinearVelocity_addr, inAngularVelocity_addr);")
    public static native void internal_native_SetLinearAndAngularVelocity(int this_addr, int inLinearVelocity_addr, int inAngularVelocity_addr);

    public void SetLinearVelocity(Vec3 inLinearVelocity, boolean inLockBodies) {
        internal_native_SetLinearVelocity(native_address, (inLinearVelocity != null ? inLinearVelocity.native_address : 0), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.SetLinearVelocity(inLinearVelocity_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.SetLinearVelocity(inLinearVelocity_addr, inLockBodies);")
    public static native void internal_native_SetLinearVelocity(int this_addr, int inLinearVelocity_addr, boolean inLockBodies);

    public void SetLinearVelocity(Vec3 inLinearVelocity) {
        internal_native_SetLinearVelocity(native_address, (inLinearVelocity != null ? inLinearVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.SetLinearVelocity(inLinearVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.SetLinearVelocity(inLinearVelocity_addr);")
    public static native void internal_native_SetLinearVelocity(int this_addr, int inLinearVelocity_addr);

    public void AddLinearVelocity(Vec3 inLinearVelocity, boolean inLockBodies) {
        internal_native_AddLinearVelocity(native_address, (inLinearVelocity != null ? inLinearVelocity.native_address : 0), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.AddLinearVelocity(inLinearVelocity_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.AddLinearVelocity(inLinearVelocity_addr, inLockBodies);")
    public static native void internal_native_AddLinearVelocity(int this_addr, int inLinearVelocity_addr, boolean inLockBodies);

    public void AddLinearVelocity(Vec3 inLinearVelocity) {
        internal_native_AddLinearVelocity(native_address, (inLinearVelocity != null ? inLinearVelocity.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.AddLinearVelocity(inLinearVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.AddLinearVelocity(inLinearVelocity_addr);")
    public static native void internal_native_AddLinearVelocity(int this_addr, int inLinearVelocity_addr);

    public void AddImpulse(Vec3 inImpulse, boolean inLockBodies) {
        internal_native_AddImpulse(native_address, (inImpulse != null ? inImpulse.native_address : 0), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.AddImpulse(inImpulse_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inImpulse_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.AddImpulse(inImpulse_addr, inLockBodies);")
    public static native void internal_native_AddImpulse(int this_addr, int inImpulse_addr, boolean inLockBodies);

    public void AddImpulse(Vec3 inImpulse) {
        internal_native_AddImpulse(native_address, (inImpulse != null ? inImpulse.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.AddImpulse(inImpulse_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inImpulse_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.AddImpulse(inImpulse_addr);")
    public static native void internal_native_AddImpulse(int this_addr, int inImpulse_addr);

    public void GetRootTransform(Vec3 outPosition, Quat outRotation, boolean inLockBodies) {
        internal_native_GetRootTransform(native_address, (outPosition != null ? outPosition.native_address : 0), (outRotation != null ? outRotation.native_address : 0), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.GetRootTransform(outPosition_addr, outRotation_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "outPosition_addr", "outRotation_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.GetRootTransform(outPosition_addr, outRotation_addr, inLockBodies);")
    public static native void internal_native_GetRootTransform(int this_addr, int outPosition_addr, int outRotation_addr, boolean inLockBodies);

    public void GetRootTransform(Vec3 outPosition, Quat outRotation) {
        internal_native_GetRootTransform(native_address, (outPosition != null ? outPosition.native_address : 0), (outRotation != null ? outRotation.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
jsObj.GetRootTransform(outPosition_addr, outRotation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "outPosition_addr", "outRotation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);jsObj.GetRootTransform(outPosition_addr, outRotation_addr);")
    public static native void internal_native_GetRootTransform(int this_addr, int outPosition_addr, int outRotation_addr);

    public int GetBodyCount() {
        return internal_native_GetBodyCount(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
var returnedJSObj = jsObj.GetBodyCount();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);var returnedJSObj = jsObj.GetBodyCount();return returnedJSObj;")
    public static native int internal_native_GetBodyCount(int this_addr);

    public BodyID GetBodyID(int inBodyIndex) {
        int pointer = internal_native_GetBodyID(native_address, inBodyIndex);
        if (pointer == 0)
            return null;
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
var returnedJSObj = jsObj.GetBodyID(inBodyIndex);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBodyIndex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);var returnedJSObj = jsObj.GetBodyID(inBodyIndex);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetBodyID(int this_addr, int inBodyIndex);

    public BodyIDVector GetBodyIDs() {
        int pointer = internal_native_GetBodyIDs(native_address);
        if (pointer == 0)
            return null;
        if (BodyIDVector_TEMP_GEN_0 == null)
            BodyIDVector_TEMP_GEN_0 = new BodyIDVector((byte) 1, (char) 1);
        BodyIDVector_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyIDVector_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
var returnedJSObj = jsObj.GetBodyIDs();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);var returnedJSObj = jsObj.GetBodyIDs();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetBodyIDs(int this_addr);

    public int GetConstraintCount() {
        return internal_native_GetConstraintCount(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
var returnedJSObj = jsObj.GetConstraintCount();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);var returnedJSObj = jsObj.GetConstraintCount();return returnedJSObj;")
    public static native int internal_native_GetConstraintCount(int this_addr);

    public AABox GetWorldSpaceBounds(boolean inLockBodies) {
        int pointer = internal_native_GetWorldSpaceBounds(native_address, inLockBodies);
        if (pointer == 0)
            return null;
        if (AABox_TEMP_GEN_0 == null)
            AABox_TEMP_GEN_0 = new AABox((byte) 1, (char) 1);
        AABox_TEMP_GEN_0.internal_reset(pointer, false);
        return AABox_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
var returnedJSObj = jsObj.GetWorldSpaceBounds(inLockBodies);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);var returnedJSObj = jsObj.GetWorldSpaceBounds(inLockBodies);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWorldSpaceBounds(int this_addr, boolean inLockBodies);

    public AABox GetWorldSpaceBounds() {
        int pointer = internal_native_GetWorldSpaceBounds(native_address);
        if (pointer == 0)
            return null;
        if (AABox_TEMP_GEN_1 == null)
            AABox_TEMP_GEN_1 = new AABox((byte) 1, (char) 1);
        AABox_TEMP_GEN_1.internal_reset(pointer, false);
        return AABox_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
var returnedJSObj = jsObj.GetWorldSpaceBounds();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);var returnedJSObj = jsObj.GetWorldSpaceBounds();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWorldSpaceBounds(int this_addr);

    public TwoBodyConstraint GetConstraint(int inConstraintIndex) {
        int pointer = internal_native_GetConstraint(native_address, inConstraintIndex);
        if (pointer == 0)
            return null;
        if (TwoBodyConstraint_TEMP_GEN_0 == null)
            TwoBodyConstraint_TEMP_GEN_0 = new TwoBodyConstraint((byte) 1, (char) 1);
        TwoBodyConstraint_TEMP_GEN_0.internal_reset(pointer, false);
        return TwoBodyConstraint_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
var returnedJSObj = jsObj.GetConstraint(inConstraintIndex);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inConstraintIndex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);var returnedJSObj = jsObj.GetConstraint(inConstraintIndex);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetConstraint(int this_addr, int inConstraintIndex);

    public RagdollSettings GetRagdollSettings() {
        int pointer = internal_native_GetRagdollSettings(native_address);
        if (pointer == 0)
            return null;
        if (RagdollSettings_TEMP_GEN_0 == null)
            RagdollSettings_TEMP_GEN_0 = new RagdollSettings((byte) 1, (char) 1);
        RagdollSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return RagdollSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);
var returnedJSObj = jsObj.GetRagdollSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Ragdoll);var returnedJSObj = jsObj.GetRagdollSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetRagdollSettings(int this_addr);
}
