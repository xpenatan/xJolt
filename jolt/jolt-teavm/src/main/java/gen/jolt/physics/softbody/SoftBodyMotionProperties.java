/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.softbody;

import gen.jolt.physics.body.MotionProperties;
import gen.jolt.physics.collision.PhysicsMaterialList;
import gen.jolt.geometry.AABox;
import gen.jolt.physics.body.Body;
import gen.jolt.physics.PhysicsSystem;
import gen.jolt.math.Mat44;
import gen.jolt.math.Mat44MemRef;
import gen.jolt.core.TempAllocator;

public class SoftBodyMotionProperties extends MotionProperties {

    private SoftBodySharedSettings SoftBodySharedSettings_TEMP_GEN_0;

    private ArraySoftBodyVertex ArraySoftBodyVertex_TEMP_GEN_0;

    private SoftBodyVertex SoftBodyVertex_TEMP_GEN_0;

    private PhysicsMaterialList PhysicsMaterialList_TEMP_GEN_0;

    private ArraySoftBodySharedSettingsFace ArraySoftBodySharedSettingsFace_TEMP_GEN_0;

    private SoftBodySharedSettingsFace SoftBodySharedSettingsFace_TEMP_GEN_0;

    private AABox AABox_TEMP_GEN_0;

    static public final SoftBodyMotionProperties T_01 = new SoftBodyMotionProperties((byte) 1, (char) 1);

    static public final SoftBodyMotionProperties T_02 = new SoftBodyMotionProperties((byte) 1, (char) 1);

    static public final SoftBodyMotionProperties T_03 = new SoftBodyMotionProperties((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SoftBodyMotionProperties(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public SoftBodySharedSettings GetSettings() {
        int pointer = internal_native_GetSettings(native_address);
        if (pointer == 0)
            return null;
        if (SoftBodySharedSettings_TEMP_GEN_0 == null)
            SoftBodySharedSettings_TEMP_GEN_0 = new SoftBodySharedSettings((byte) 1, (char) 1);
        SoftBodySharedSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return SoftBodySharedSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetSettings(int this_addr);

    public ArraySoftBodyVertex GetVertices() {
        int pointer = internal_native_GetVertices(native_address);
        if (pointer == 0)
            return null;
        if (ArraySoftBodyVertex_TEMP_GEN_0 == null)
            ArraySoftBodyVertex_TEMP_GEN_0 = new ArraySoftBodyVertex((byte) 1, (char) 1);
        ArraySoftBodyVertex_TEMP_GEN_0.internal_reset(pointer, false);
        return ArraySoftBodyVertex_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetVertices();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetVertices();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetVertices(int this_addr);

    public SoftBodyVertex GetVertex(int inIndex) {
        int pointer = internal_native_GetVertex(native_address, inIndex);
        if (pointer == 0)
            return null;
        if (SoftBodyVertex_TEMP_GEN_0 == null)
            SoftBodyVertex_TEMP_GEN_0 = new SoftBodyVertex((byte) 1, (char) 1);
        SoftBodyVertex_TEMP_GEN_0.internal_reset(pointer, false);
        return SoftBodyVertex_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetVertex(inIndex);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inIndex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetVertex(inIndex);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetVertex(int this_addr, int inIndex);

    public PhysicsMaterialList GetMaterials() {
        int pointer = internal_native_GetMaterials(native_address);
        if (pointer == 0)
            return null;
        if (PhysicsMaterialList_TEMP_GEN_0 == null)
            PhysicsMaterialList_TEMP_GEN_0 = new PhysicsMaterialList((byte) 1, (char) 1);
        PhysicsMaterialList_TEMP_GEN_0.internal_reset(pointer, false);
        return PhysicsMaterialList_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetMaterials();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetMaterials();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetMaterials(int this_addr);

    public ArraySoftBodySharedSettingsFace GetFaces() {
        int pointer = internal_native_GetFaces(native_address);
        if (pointer == 0)
            return null;
        if (ArraySoftBodySharedSettingsFace_TEMP_GEN_0 == null)
            ArraySoftBodySharedSettingsFace_TEMP_GEN_0 = new ArraySoftBodySharedSettingsFace((byte) 1, (char) 1);
        ArraySoftBodySharedSettingsFace_TEMP_GEN_0.internal_reset(pointer, false);
        return ArraySoftBodySharedSettingsFace_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetFaces();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetFaces();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetFaces(int this_addr);

    public SoftBodySharedSettingsFace GetFace(int inIndex) {
        int pointer = internal_native_GetFace(native_address, inIndex);
        if (pointer == 0)
            return null;
        if (SoftBodySharedSettingsFace_TEMP_GEN_0 == null)
            SoftBodySharedSettingsFace_TEMP_GEN_0 = new SoftBodySharedSettingsFace((byte) 1, (char) 1);
        SoftBodySharedSettingsFace_TEMP_GEN_0.internal_reset(pointer, false);
        return SoftBodySharedSettingsFace_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetFace(inIndex);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inIndex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetFace(inIndex);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetFace(int this_addr, int inIndex);

    public int GetNumIterations() {
        return internal_native_GetNumIterations(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetNumIterations();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetNumIterations();return returnedJSObj;")
    public static native int internal_native_GetNumIterations(int this_addr);

    public void SetNumIterations(int inNumIterations) {
        internal_native_SetNumIterations(native_address, inNumIterations);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
jsObj.SetNumIterations(inNumIterations);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inNumIterations"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);jsObj.SetNumIterations(inNumIterations);")
    public static native void internal_native_SetNumIterations(int this_addr, int inNumIterations);

    public float GetPressure() {
        return internal_native_GetPressure(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetPressure();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetPressure();return returnedJSObj;")
    public static native float internal_native_GetPressure(int this_addr);

    public void SetPressure(float inPressure) {
        internal_native_SetPressure(native_address, inPressure);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
jsObj.SetPressure(inPressure);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPressure"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);jsObj.SetPressure(inPressure);")
    public static native void internal_native_SetPressure(int this_addr, float inPressure);

    public boolean GetUpdatePosition() {
        return internal_native_GetUpdatePosition(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetUpdatePosition();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetUpdatePosition();return returnedJSObj;")
    public static native boolean internal_native_GetUpdatePosition(int this_addr);

    public void SetUpdatePosition(boolean inUpdatePosition) {
        internal_native_SetUpdatePosition(native_address, inUpdatePosition);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
jsObj.SetUpdatePosition(inUpdatePosition);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inUpdatePosition"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);jsObj.SetUpdatePosition(inUpdatePosition);")
    public static native void internal_native_SetUpdatePosition(int this_addr, boolean inUpdatePosition);

    public boolean GetEnableSkinConstraints() {
        return internal_native_GetEnableSkinConstraints(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetEnableSkinConstraints();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetEnableSkinConstraints();return returnedJSObj;")
    public static native boolean internal_native_GetEnableSkinConstraints(int this_addr);

    public void SetEnableSkinConstraints(boolean inEnableSkinConstraints) {
        internal_native_SetEnableSkinConstraints(native_address, inEnableSkinConstraints);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
jsObj.SetEnableSkinConstraints(inEnableSkinConstraints);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inEnableSkinConstraints"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);jsObj.SetEnableSkinConstraints(inEnableSkinConstraints);")
    public static native void internal_native_SetEnableSkinConstraints(int this_addr, boolean inEnableSkinConstraints);

    public float GetSkinnedMaxDistanceMultiplier() {
        return internal_native_GetSkinnedMaxDistanceMultiplier(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetSkinnedMaxDistanceMultiplier();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetSkinnedMaxDistanceMultiplier();return returnedJSObj;")
    public static native float internal_native_GetSkinnedMaxDistanceMultiplier(int this_addr);

    public void SetSkinnedMaxDistanceMultiplier(float inSkinnedMaxDistanceMultiplier) {
        internal_native_SetSkinnedMaxDistanceMultiplier(native_address, inSkinnedMaxDistanceMultiplier);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
jsObj.SetSkinnedMaxDistanceMultiplier(inSkinnedMaxDistanceMultiplier);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSkinnedMaxDistanceMultiplier"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);jsObj.SetSkinnedMaxDistanceMultiplier(inSkinnedMaxDistanceMultiplier);")
    public static native void internal_native_SetSkinnedMaxDistanceMultiplier(int this_addr, float inSkinnedMaxDistanceMultiplier);

    public AABox GetLocalBounds() {
        int pointer = internal_native_GetLocalBounds(native_address);
        if (pointer == 0)
            return null;
        if (AABox_TEMP_GEN_0 == null)
            AABox_TEMP_GEN_0 = new AABox((byte) 1, (char) 1);
        AABox_TEMP_GEN_0.internal_reset(pointer, false);
        return AABox_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
var returnedJSObj = jsObj.GetLocalBounds();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);var returnedJSObj = jsObj.GetLocalBounds();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLocalBounds(int this_addr);

    public void CustomUpdate(float inDeltaTime, Body ioSoftBody, PhysicsSystem inSystem) {
        internal_native_CustomUpdate(native_address, inDeltaTime, (ioSoftBody != null ? ioSoftBody.native_address : 0), (inSystem != null ? inSystem.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
jsObj.CustomUpdate(inDeltaTime, ioSoftBody_addr, inSystem_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inDeltaTime", "ioSoftBody_addr", "inSystem_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);jsObj.CustomUpdate(inDeltaTime, ioSoftBody_addr, inSystem_addr);")
    public static native void internal_native_CustomUpdate(int this_addr, float inDeltaTime, int ioSoftBody_addr, int inSystem_addr);

    public void SkinVertices(Mat44 inRootTransform, Mat44MemRef inJointMatrices, int inNumJoints, boolean inHardSkinAll, TempAllocator ioTempAllocator) {
        internal_native_SkinVertices(native_address, (inRootTransform != null ? inRootTransform.native_address : 0), (inJointMatrices != null ? inJointMatrices.native_address : 0), inNumJoints, inHardSkinAll, (ioTempAllocator != null ? ioTempAllocator.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);
jsObj.SkinVertices(inRootTransform_addr, inJointMatrices_addr, inNumJoints, inHardSkinAll, ioTempAllocator_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inRootTransform_addr", "inJointMatrices_addr", "inNumJoints", "inHardSkinAll", "ioTempAllocator_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyMotionProperties);jsObj.SkinVertices(inRootTransform_addr, inJointMatrices_addr, inNumJoints, inHardSkinAll, ioTempAllocator_addr);")
    public static native void internal_native_SkinVertices(int this_addr, int inRootTransform_addr, int inJointMatrices_addr, int inNumJoints, boolean inHardSkinAll, int ioTempAllocator_addr);
}
