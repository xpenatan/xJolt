/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.vehicle;

public class MotorcycleController extends WheeledVehicleController {

    static public final MotorcycleController T_01 = new MotorcycleController((byte) 1, (char) 1);

    static public final MotorcycleController T_02 = new MotorcycleController((byte) 1, (char) 1);

    static public final MotorcycleController T_03 = new MotorcycleController((byte) 1, (char) 1);

    public MotorcycleController(MotorcycleControllerSettings inSettings, VehicleConstraint inConstraint) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_MotorcycleControllerSettings_VehicleConstraint((inSettings != null ? inSettings.native_address : 0), (inConstraint != null ? inConstraint.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.MotorcycleController(inSettings_addr, inConstraint_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inSettings_addr", "inConstraint_addr"}, script = "var jsObj = new jolt.MotorcycleController(inSettings_addr, inConstraint_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_MotorcycleControllerSettings_VehicleConstraint(int inSettings_addr, int inConstraint_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public MotorcycleController(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorcycleController);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorcycleController);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public float GetWheelBase() {
        return internal_native_GetWheelBase(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorcycleController);
var returnedJSObj = jsObj.GetWheelBase();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorcycleController);var returnedJSObj = jsObj.GetWheelBase();return returnedJSObj;")
    public static native float internal_native_GetWheelBase(int this_addr);

    public void EnableLeanController(boolean inEnable) {
        internal_native_EnableLeanController(native_address, inEnable);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorcycleController);
jsObj.EnableLeanController(inEnable);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inEnable"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorcycleController);jsObj.EnableLeanController(inEnable);")
    public static native void internal_native_EnableLeanController(int this_addr, boolean inEnable);

    public boolean IsLeanControllerEnabled() {
        return internal_native_IsLeanControllerEnabled(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.MotorcycleController);
var returnedJSObj = jsObj.IsLeanControllerEnabled();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.MotorcycleController);var returnedJSObj = jsObj.IsLeanControllerEnabled();return returnedJSObj;")
    public static native boolean internal_native_IsLeanControllerEnabled(int this_addr);
}
