/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.vehicle;

import gen.jolt.idl.IDLBase;
import gen.jolt.math.ArrayUint;

public class VehicleTrackSettings extends IDLBase {

    private ArrayUint ArrayUint_TEMP_GEN_0;

    static public final VehicleTrackSettings T_01 = new VehicleTrackSettings((byte) 1, (char) 1);

    static public final VehicleTrackSettings T_02 = new VehicleTrackSettings((byte) 1, (char) 1);

    static public final VehicleTrackSettings T_03 = new VehicleTrackSettings((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public VehicleTrackSettings(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public int get_mDrivenWheel() {
        return internal_native_get_mDrivenWheel(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
return jsObj.get_mDrivenWheel();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);return jsObj.get_mDrivenWheel();")
    public static native int internal_native_get_mDrivenWheel(int this_addr);

    public void set_mDrivenWheel(int mDrivenWheel) {
        internal_native_set_mDrivenWheel(native_address, mDrivenWheel);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
jsObj.set_mDrivenWheel(mDrivenWheel);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mDrivenWheel"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);jsObj.set_mDrivenWheel(mDrivenWheel);")
    public static native void internal_native_set_mDrivenWheel(int this_addr, int mDrivenWheel);

    public ArrayUint get_mWheels() {
        int pointer = internal_native_get_mWheels(native_address);
        if (pointer == 0)
            return null;
        if (ArrayUint_TEMP_GEN_0 == null)
            ArrayUint_TEMP_GEN_0 = new ArrayUint((byte) 1, (char) 1);
        ArrayUint_TEMP_GEN_0.internal_reset(pointer, false);
        return ArrayUint_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
var returnedJSObj = jsObj.get_mWheels();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);var returnedJSObj = jsObj.get_mWheels();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mWheels(int this_addr);

    public void set_mWheels(ArrayUint mWheels) {
        internal_native_set_mWheels(native_address, (mWheels != null ? mWheels.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
jsObj.set_mWheels(mWheels_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mWheels_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);jsObj.set_mWheels(mWheels_addr);")
    public static native void internal_native_set_mWheels(int this_addr, int mWheels_addr);

    public float get_mInertia() {
        return internal_native_get_mInertia(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
return jsObj.get_mInertia();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);return jsObj.get_mInertia();")
    public static native float internal_native_get_mInertia(int this_addr);

    public void set_mInertia(float mInertia) {
        internal_native_set_mInertia(native_address, mInertia);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
jsObj.set_mInertia(mInertia);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mInertia"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);jsObj.set_mInertia(mInertia);")
    public static native void internal_native_set_mInertia(int this_addr, float mInertia);

    public float get_mAngularDamping() {
        return internal_native_get_mAngularDamping(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
return jsObj.get_mAngularDamping();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);return jsObj.get_mAngularDamping();")
    public static native float internal_native_get_mAngularDamping(int this_addr);

    public void set_mAngularDamping(float mAngularDamping) {
        internal_native_set_mAngularDamping(native_address, mAngularDamping);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
jsObj.set_mAngularDamping(mAngularDamping);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mAngularDamping"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);jsObj.set_mAngularDamping(mAngularDamping);")
    public static native void internal_native_set_mAngularDamping(int this_addr, float mAngularDamping);

    public float get_mMaxBrakeTorque() {
        return internal_native_get_mMaxBrakeTorque(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
return jsObj.get_mMaxBrakeTorque();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);return jsObj.get_mMaxBrakeTorque();")
    public static native float internal_native_get_mMaxBrakeTorque(int this_addr);

    public void set_mMaxBrakeTorque(float mMaxBrakeTorque) {
        internal_native_set_mMaxBrakeTorque(native_address, mMaxBrakeTorque);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
jsObj.set_mMaxBrakeTorque(mMaxBrakeTorque);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaxBrakeTorque"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);jsObj.set_mMaxBrakeTorque(mMaxBrakeTorque);")
    public static native void internal_native_set_mMaxBrakeTorque(int this_addr, float mMaxBrakeTorque);

    public float get_mDifferentialRatio() {
        return internal_native_get_mDifferentialRatio(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
return jsObj.get_mDifferentialRatio();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);return jsObj.get_mDifferentialRatio();")
    public static native float internal_native_get_mDifferentialRatio(int this_addr);

    public void set_mDifferentialRatio(float mDifferentialRatio) {
        internal_native_set_mDifferentialRatio(native_address, mDifferentialRatio);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);
jsObj.set_mDifferentialRatio(mDifferentialRatio);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mDifferentialRatio"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleTrackSettings);jsObj.set_mDifferentialRatio(mDifferentialRatio);")
    public static native void internal_native_set_mDifferentialRatio(int this_addr, float mDifferentialRatio);
}
