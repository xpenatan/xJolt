/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.vehicle;

import gen.jolt.idl.IDLBase;
import gen.jolt.physics.body.BodyID;
import gen.jolt.math.Vec3;

public class Wheel extends IDLBase {

    private WheelSettings WheelSettings_TEMP_GEN_0;

    private BodyID BodyID_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    private Vec3 Vec3_TEMP_GEN_3;

    private Vec3 Vec3_TEMP_GEN_4;

    static public final Wheel T_01 = new Wheel((byte) 1, (char) 1);

    static public final Wheel T_02 = new Wheel((byte) 1, (char) 1);

    static public final Wheel T_03 = new Wheel((byte) 1, (char) 1);

    public Wheel(WheelSettings inSettings) {
        int addr = internal_native_create_WheelSettings((inSettings != null ? inSettings.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.Wheel(inSettings_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inSettings_addr"}, script = "var jsObj = new jolt.Wheel(inSettings_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_WheelSettings(int inSettings_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Wheel(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public WheelSettings GetSettings() {
        int pointer = internal_native_GetSettings(native_address);
        if (pointer == 0)
            return null;
        if (WheelSettings_TEMP_GEN_0 == null)
            WheelSettings_TEMP_GEN_0 = new WheelSettings((byte) 1, (char) 1);
        WheelSettings_TEMP_GEN_0.internal_reset(pointer, false);
        return WheelSettings_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetSettings(int this_addr);

    public float GetAngularVelocity() {
        return internal_native_GetAngularVelocity(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetAngularVelocity();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetAngularVelocity();return returnedJSObj;")
    public static native float internal_native_GetAngularVelocity(int this_addr);

    public void SetAngularVelocity(float inVel) {
        internal_native_SetAngularVelocity(native_address, inVel);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
jsObj.SetAngularVelocity(inVel);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inVel"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);jsObj.SetAngularVelocity(inVel);")
    public static native void internal_native_SetAngularVelocity(int this_addr, float inVel);

    public float GetRotationAngle() {
        return internal_native_GetRotationAngle(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetRotationAngle();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetRotationAngle();return returnedJSObj;")
    public static native float internal_native_GetRotationAngle(int this_addr);

    public void SetRotationAngle(float inAngle) {
        internal_native_SetRotationAngle(native_address, inAngle);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
jsObj.SetRotationAngle(inAngle);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAngle"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);jsObj.SetRotationAngle(inAngle);")
    public static native void internal_native_SetRotationAngle(int this_addr, float inAngle);

    public float GetSteerAngle() {
        return internal_native_GetSteerAngle(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetSteerAngle();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetSteerAngle();return returnedJSObj;")
    public static native float internal_native_GetSteerAngle(int this_addr);

    public void SetSteerAngle(float inAngle) {
        internal_native_SetSteerAngle(native_address, inAngle);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
jsObj.SetSteerAngle(inAngle);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inAngle"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);jsObj.SetSteerAngle(inAngle);")
    public static native void internal_native_SetSteerAngle(int this_addr, float inAngle);

    public boolean HasContact() {
        return internal_native_HasContact(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.HasContact();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.HasContact();return returnedJSObj;")
    public static native boolean internal_native_HasContact(int this_addr);

    public BodyID GetContactBodyID() {
        int pointer = internal_native_GetContactBodyID(native_address);
        if (pointer == 0)
            return null;
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetContactBodyID();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetContactBodyID();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetContactBodyID(int this_addr);

    public Vec3 GetContactPosition() {
        int pointer = internal_native_GetContactPosition(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetContactPosition();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetContactPosition();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetContactPosition(int this_addr);

    public Vec3 GetContactPointVelocity() {
        int pointer = internal_native_GetContactPointVelocity(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetContactPointVelocity();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetContactPointVelocity();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetContactPointVelocity(int this_addr);

    public Vec3 GetContactNormal() {
        int pointer = internal_native_GetContactNormal(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetContactNormal();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetContactNormal();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetContactNormal(int this_addr);

    public Vec3 GetContactLongitudinal() {
        int pointer = internal_native_GetContactLongitudinal(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_3 == null)
            Vec3_TEMP_GEN_3 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_3.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetContactLongitudinal();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetContactLongitudinal();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetContactLongitudinal(int this_addr);

    public Vec3 GetContactLateral() {
        int pointer = internal_native_GetContactLateral(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_4 == null)
            Vec3_TEMP_GEN_4 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_4.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_4;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetContactLateral();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetContactLateral();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetContactLateral(int this_addr);

    public float GetSuspensionLength() {
        return internal_native_GetSuspensionLength(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetSuspensionLength();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetSuspensionLength();return returnedJSObj;")
    public static native float internal_native_GetSuspensionLength(int this_addr);

    public boolean HasHitHardPoint() {
        return internal_native_HasHitHardPoint(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.HasHitHardPoint();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.HasHitHardPoint();return returnedJSObj;")
    public static native boolean internal_native_HasHitHardPoint(int this_addr);

    public float GetSuspensionLambda() {
        return internal_native_GetSuspensionLambda(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetSuspensionLambda();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetSuspensionLambda();return returnedJSObj;")
    public static native float internal_native_GetSuspensionLambda(int this_addr);

    public float GetLongitudinalLambda() {
        return internal_native_GetLongitudinalLambda(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetLongitudinalLambda();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetLongitudinalLambda();return returnedJSObj;")
    public static native float internal_native_GetLongitudinalLambda(int this_addr);

    public float GetLateralLambda() {
        return internal_native_GetLateralLambda(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);
var returnedJSObj = jsObj.GetLateralLambda();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Wheel);var returnedJSObj = jsObj.GetLateralLambda();return returnedJSObj;")
    public static native float internal_native_GetLateralLambda(int this_addr);
}
