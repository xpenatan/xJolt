/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.vehicle;

public class WheelTV extends Wheel {

    private WheelSettingsTV WheelSettingsTV_TEMP_GEN_0;

    static public final WheelTV T_01 = new WheelTV((byte) 1, (char) 1);

    static public final WheelTV T_02 = new WheelTV((byte) 1, (char) 1);

    static public final WheelTV T_03 = new WheelTV((byte) 1, (char) 1);

    public WheelTV(WheelSettingsTV inWheel) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_WheelSettingsTV((inWheel != null ? inWheel.native_address : 0));
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.WheelTV(inWheel_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inWheel_addr"}, script = "var jsObj = new jolt.WheelTV(inWheel_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_WheelSettingsTV(int inWheel_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public WheelTV(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public WheelSettingsTV GetSettings() {
        int pointer = internal_native_GetSettings(native_address);
        if (pointer == 0)
            return null;
        if (WheelSettingsTV_TEMP_GEN_0 == null)
            WheelSettingsTV_TEMP_GEN_0 = new WheelSettingsTV((byte) 1, (char) 1);
        WheelSettingsTV_TEMP_GEN_0.internal_reset(pointer, false);
        return WheelSettingsTV_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);
var returnedJSObj = jsObj.GetSettings();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);var returnedJSObj = jsObj.GetSettings();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetSettings(int this_addr);

    public int get_mTrackIndex() {
        return internal_native_get_mTrackIndex(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);
return jsObj.get_mTrackIndex();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);return jsObj.get_mTrackIndex();")
    public static native int internal_native_get_mTrackIndex(int this_addr);

    public void set_mTrackIndex(int mTrackIndex) {
        internal_native_set_mTrackIndex(native_address, mTrackIndex);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);
jsObj.set_mTrackIndex(mTrackIndex);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mTrackIndex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);jsObj.set_mTrackIndex(mTrackIndex);")
    public static native void internal_native_set_mTrackIndex(int this_addr, int mTrackIndex);

    public float get_mCombinedLongitudinalFriction() {
        return internal_native_get_mCombinedLongitudinalFriction(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);
return jsObj.get_mCombinedLongitudinalFriction();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);return jsObj.get_mCombinedLongitudinalFriction();")
    public static native float internal_native_get_mCombinedLongitudinalFriction(int this_addr);

    public void set_mCombinedLongitudinalFriction(float mCombinedLongitudinalFriction) {
        internal_native_set_mCombinedLongitudinalFriction(native_address, mCombinedLongitudinalFriction);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);
jsObj.set_mCombinedLongitudinalFriction(mCombinedLongitudinalFriction);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mCombinedLongitudinalFriction"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);jsObj.set_mCombinedLongitudinalFriction(mCombinedLongitudinalFriction);")
    public static native void internal_native_set_mCombinedLongitudinalFriction(int this_addr, float mCombinedLongitudinalFriction);

    public float get_mCombinedLateralFriction() {
        return internal_native_get_mCombinedLateralFriction(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);
return jsObj.get_mCombinedLateralFriction();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);return jsObj.get_mCombinedLateralFriction();")
    public static native float internal_native_get_mCombinedLateralFriction(int this_addr);

    public void set_mCombinedLateralFriction(float mCombinedLateralFriction) {
        internal_native_set_mCombinedLateralFriction(native_address, mCombinedLateralFriction);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);
jsObj.set_mCombinedLateralFriction(mCombinedLateralFriction);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mCombinedLateralFriction"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);jsObj.set_mCombinedLateralFriction(mCombinedLateralFriction);")
    public static native void internal_native_set_mCombinedLateralFriction(int this_addr, float mCombinedLateralFriction);

    public float get_mBrakeImpulse() {
        return internal_native_get_mBrakeImpulse(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);
return jsObj.get_mBrakeImpulse();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);return jsObj.get_mBrakeImpulse();")
    public static native float internal_native_get_mBrakeImpulse(int this_addr);

    public void set_mBrakeImpulse(float mBrakeImpulse) {
        internal_native_set_mBrakeImpulse(native_address, mBrakeImpulse);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);
jsObj.set_mBrakeImpulse(mBrakeImpulse);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mBrakeImpulse"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.WheelTV);jsObj.set_mBrakeImpulse(mBrakeImpulse);")
    public static native void internal_native_set_mBrakeImpulse(int this_addr, float mBrakeImpulse);
}
