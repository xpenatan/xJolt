/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.skeleton;

import gen.jolt.idl.IDLBase;
import gen.jolt.math.Mat44;
import gen.jolt.math.Vec3;
import gen.jolt.math.Quat;

public class SkeletalAnimationJointState extends IDLBase {

    private Mat44 Mat44_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    private Quat Quat_TEMP_GEN_0;

    static public final SkeletalAnimationJointState T_01 = new SkeletalAnimationJointState((byte) 1, (char) 1);

    static public final SkeletalAnimationJointState T_02 = new SkeletalAnimationJointState((byte) 1, (char) 1);

    static public final SkeletalAnimationJointState T_03 = new SkeletalAnimationJointState((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SkeletalAnimationJointState(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void FromMatrix(Mat44 inMatrix) {
        internal_native_FromMatrix(native_address, (inMatrix != null ? inMatrix.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);
jsObj.FromMatrix(inMatrix_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inMatrix_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);jsObj.FromMatrix(inMatrix_addr);")
    public static native void internal_native_FromMatrix(int this_addr, int inMatrix_addr);

    public Mat44 ToMatrix() {
        int pointer = internal_native_ToMatrix(native_address);
        if (pointer == 0)
            return null;
        if (Mat44_TEMP_GEN_0 == null)
            Mat44_TEMP_GEN_0 = new Mat44((byte) 1, (char) 1);
        Mat44_TEMP_GEN_0.internal_reset(pointer, false);
        return Mat44_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);
var returnedJSObj = jsObj.ToMatrix();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);var returnedJSObj = jsObj.ToMatrix();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_ToMatrix(int this_addr);

    public Vec3 get_mTranslation() {
        int pointer = internal_native_get_mTranslation(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);
var returnedJSObj = jsObj.get_mTranslation();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);var returnedJSObj = jsObj.get_mTranslation();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mTranslation(int this_addr);

    public void set_mTranslation(Vec3 mTranslation) {
        internal_native_set_mTranslation(native_address, (mTranslation != null ? mTranslation.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);
jsObj.set_mTranslation(mTranslation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mTranslation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);jsObj.set_mTranslation(mTranslation_addr);")
    public static native void internal_native_set_mTranslation(int this_addr, int mTranslation_addr);

    public Quat get_mRotation() {
        int pointer = internal_native_get_mRotation(native_address);
        if (pointer == 0)
            return null;
        if (Quat_TEMP_GEN_0 == null)
            Quat_TEMP_GEN_0 = new Quat((byte) 1, (char) 1);
        Quat_TEMP_GEN_0.internal_reset(pointer, false);
        return Quat_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);
var returnedJSObj = jsObj.get_mRotation();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);var returnedJSObj = jsObj.get_mRotation();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mRotation(int this_addr);

    public void set_mRotation(Quat mRotation) {
        internal_native_set_mRotation(native_address, (mRotation != null ? mRotation.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);
jsObj.set_mRotation(mRotation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mRotation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletalAnimationJointState);jsObj.set_mRotation(mRotation_addr);")
    public static native void internal_native_set_mRotation(int this_addr, int mRotation_addr);
}
