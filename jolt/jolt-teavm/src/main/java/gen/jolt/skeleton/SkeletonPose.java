/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.skeleton;

import gen.jolt.idl.IDLBase;
import gen.jolt.math.Vec3;
import gen.jolt.math.ArrayMat44;
import gen.jolt.math.Mat44;

public class SkeletonPose extends IDLBase {

    private Skeleton Skeleton_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    private SkeletalAnimationJointState SkeletalAnimationJointState_TEMP_GEN_0;

    private ArrayMat44 ArrayMat44_TEMP_GEN_0;

    private Mat44 Mat44_TEMP_GEN_0;

    static public final SkeletonPose T_01 = new SkeletonPose((byte) 1, (char) 1);

    static public final SkeletonPose T_02 = new SkeletonPose((byte) 1, (char) 1);

    static public final SkeletonPose T_03 = new SkeletonPose((byte) 1, (char) 1);

    public SkeletonPose() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.SkeletonPose();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.SkeletonPose();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SkeletonPose(byte b, char c) {
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void SetSkeleton(Skeleton inSkeleton) {
        internal_native_SetSkeleton(native_address, (inSkeleton != null ? inSkeleton.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
jsObj.SetSkeleton(inSkeleton_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSkeleton_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);jsObj.SetSkeleton(inSkeleton_addr);")
    public static native void internal_native_SetSkeleton(int this_addr, int inSkeleton_addr);

    public Skeleton GetSkeleton() {
        int pointer = internal_native_GetSkeleton(native_address);
        if (pointer == 0)
            return null;
        if (Skeleton_TEMP_GEN_0 == null)
            Skeleton_TEMP_GEN_0 = new Skeleton((byte) 1, (char) 1);
        Skeleton_TEMP_GEN_0.internal_reset(pointer, false);
        return Skeleton_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
var returnedJSObj = jsObj.GetSkeleton();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);var returnedJSObj = jsObj.GetSkeleton();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetSkeleton(int this_addr);

    public void SetRootOffset(Vec3 inOffset) {
        internal_native_SetRootOffset(native_address, (inOffset != null ? inOffset.native_address : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
jsObj.SetRootOffset(inOffset_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inOffset_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);jsObj.SetRootOffset(inOffset_addr);")
    public static native void internal_native_SetRootOffset(int this_addr, int inOffset_addr);

    public Vec3 GetRootOffset() {
        int pointer = internal_native_GetRootOffset(native_address);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
var returnedJSObj = jsObj.GetRootOffset();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);var returnedJSObj = jsObj.GetRootOffset();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetRootOffset(int this_addr);

    public int GetJointCount() {
        return internal_native_GetJointCount(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
var returnedJSObj = jsObj.GetJointCount();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);var returnedJSObj = jsObj.GetJointCount();return returnedJSObj;")
    public static native int internal_native_GetJointCount(int this_addr);

    public SkeletalAnimationJointState GetJoint(int inJoint) {
        int pointer = internal_native_GetJoint(native_address, inJoint);
        if (pointer == 0)
            return null;
        if (SkeletalAnimationJointState_TEMP_GEN_0 == null)
            SkeletalAnimationJointState_TEMP_GEN_0 = new SkeletalAnimationJointState((byte) 1, (char) 1);
        SkeletalAnimationJointState_TEMP_GEN_0.internal_reset(pointer, false);
        return SkeletalAnimationJointState_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
var returnedJSObj = jsObj.GetJoint(inJoint);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inJoint"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);var returnedJSObj = jsObj.GetJoint(inJoint);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetJoint(int this_addr, int inJoint);

    public ArrayMat44 GetJointMatrices() {
        int pointer = internal_native_GetJointMatrices(native_address);
        if (pointer == 0)
            return null;
        if (ArrayMat44_TEMP_GEN_0 == null)
            ArrayMat44_TEMP_GEN_0 = new ArrayMat44((byte) 1, (char) 1);
        ArrayMat44_TEMP_GEN_0.internal_reset(pointer, false);
        return ArrayMat44_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
var returnedJSObj = jsObj.GetJointMatrices();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);var returnedJSObj = jsObj.GetJointMatrices();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetJointMatrices(int this_addr);

    public Mat44 GetJointMatrix(int inJoint) {
        int pointer = internal_native_GetJointMatrix(native_address, inJoint);
        if (pointer == 0)
            return null;
        if (Mat44_TEMP_GEN_0 == null)
            Mat44_TEMP_GEN_0 = new Mat44((byte) 1, (char) 1);
        Mat44_TEMP_GEN_0.internal_reset(pointer, false);
        return Mat44_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
var returnedJSObj = jsObj.GetJointMatrix(inJoint);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inJoint"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);var returnedJSObj = jsObj.GetJointMatrix(inJoint);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetJointMatrix(int this_addr, int inJoint);

    public void CalculateJointMatrices() {
        internal_native_CalculateJointMatrices(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
jsObj.CalculateJointMatrices();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);jsObj.CalculateJointMatrices();")
    public static native void internal_native_CalculateJointMatrices(int this_addr);

    public void CalculateJointStates() {
        internal_native_CalculateJointStates(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);
jsObj.CalculateJointStates();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SkeletonPose);jsObj.CalculateJointStates();")
    public static native void internal_native_CalculateJointStates(int this_addr);
}
